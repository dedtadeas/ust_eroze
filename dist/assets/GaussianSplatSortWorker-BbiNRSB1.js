var e=class{constructor(e,t,n,r=!1){this.distances=e,this.sortOrderIndices=t,this.numGaussians=n,this.preciseSort=r}},t=class{constructor(e,t){this.distances=e,this.sortedOrderIndices=t}},n=null,r=null,i=10,a=20,o=.25;function s(e,t){n?.length!==e&&(n=new Uint32Array(e)),r&&r.length===1+(1<<t)?r.fill(0):r=new Uint32Array(1+(1<<t))}function c(e,t){let c=e.length,l=Math.max(i,Math.min(a,Math.round(Math.log2(c/o)))),u=1+(1<<l);s(c,l);let d=e[0],f=e[0];for(let t=0;t<e.length;t++)d=Math.min(d,e[t]),f=Math.max(f,e[t]);let p=f-d;if(p<1e-6)for(let e=0;e<c;++e)n[e]=0,r[0]++;else{let t=(1<<l)/p;for(let i=0;i<c;i++){let a=(e[i]-d)*t>>>0;n[i]=a,r[a]++}}for(let e=1;e<u;e++)r[e]+=r[e-1];for(let e=0;e<c;e++){let i=n[e];t[--r[i]]=e}}async function l(e){let{distances:n,sortOrderIndices:r,preciseSort:i,numGaussians:a}=e,o=n.subarray(0,a),s=r.subarray(0,a);if(o.length===0||s.length===0)return{result:new t(n,r),transferList:[n.buffer,r.buffer]};if(i){let e=Array.from(s.keys());e.sort((e,t)=>o[e]-o[t]||e-t);let t=e.map(e=>s[e]);s.set(t)}else c(o,s);return{result:new t(n,r),transferList:[n.buffer,r.buffer]}}function u(){n=null,r=null}export{e as SplatSortWorkerInput,t as SplatSortWorkerOutput,u as destroy,l as sort};