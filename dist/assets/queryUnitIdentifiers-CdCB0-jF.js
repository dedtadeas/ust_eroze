import{Bu as e,CD as t,Hx as n,MC as r,Sw as i,Vu as a,kC as o,vC as s,zu as c}from"./index-BqmCqmfp.js";var l=class extends s{constructor(e){super(e),this.container=null,this.ranges=null}readContainer(e,t){return{sourceId:t.sourceId,globalId:t.globalId}}readRanges(e,t){return[...t.gaps.map(e=>({firstUnit:e.start,numUnits:e.end-e.start+1,isGap:!0})),...t.unitIdentifiers.map(e=>({firstUnit:e.firstUnit,numUnits:e.numUnits,isGap:!1,content:{sourceId:e.sourceId,globalId:e.globalId}}))]}};t([r({type:Object})],l.prototype,`container`,void 0),t([n(`container`,[`sourceId`,`globalId`])],l.prototype,`readContainer`,null),t([r({type:[Object]})],l.prototype,`ranges`,void 0),t([n(`ranges`,[`gaps`,`unitIdentifiers`])],l.prototype,`readRanges`,null),l=t([o(`esri.rest.networks.unitIdentifiers.support.UnitQueryResult`)],l);async function u(t,n,r){let o=c(t),s=n.toJSON();n.objects&&(s.objects=JSON.stringify(n.objects));let u={...s,f:`json`},d=a({...o.query,...u}),f=e(d,{...r,method:`post`}),p=`${o.path}/unitIdentifiers/query`,{data:m}=await i(p,f);return m.objects.map(e=>l.fromJSON(e))}export{u as queryUnitIdentifiers};