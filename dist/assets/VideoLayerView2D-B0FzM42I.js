import{Ax as e,CD as t,Gd as n,Hd as r,Id as i,Kb as a,Kd as o,MC as s,Ub as c,Us as l,Vs as u,Wb as d,Wy as f,Xh as p,Yd as m,e_ as h,fT as g,fw as _,gT as v,id as y,kC as b,mT as x,yg as S}from"./index-BqmCqmfp.js";import"./memoryEstimations-O7VgDRVG.js";import"./OptimizedFeature-Dx4_lHip.js";import"./OptimizedGeometry-f3I9Z6C1.js";import"./OptimizedFeatureSet-DlHqIhoP.js";import"./featureConversionUtils-7vyVIZ6j.js";import"./streamLayerUtils-BMw-RtDi.js";import"./QueueProcessor-C8_CgXms.js";import"./earcut-Drx511Ix.js";import"./layerViewUtils-Bbe7IKvz.js";import"./colorUtils-uG2qTogT.js";import{t as C}from"./cimSymbolUtils-1FVTTBxd.js";import"./gfxUtils-DZoKCRMw.js";import"./utils-5jlQHYup.js";import{t as w}from"./GraphicsLayer-BGvt7_Y1.js";import"./timeSupport-DheFkvFH.js";import"./queryUtils-BA7HiGeg.js";import"./quantizationUtils-C5shine1.js";import{t as T}from"./ControlPoint-Benu0MjK.js";import"./normalizeUtilsSync-Btn24Gtg.js";import"./GeometryUtils-DBkUrkz1.js";import"./VertexAttributeLocations-IAhvKZqd.js";import"./VertexElementDescriptor-BGWnA0Rs.js";import{c as E,p as D}from"./videoUtils-CDV-epE9.js";import"./labelPoint-B7zLrA23.js";import"./callExpressionWithCursor-kl7GHpJ1.js";import"./FeatureMetadata-H6WAS0Lx.js";import"./fontUtils-CWolFklQ.js";import"./CIMSymbolHelper-bdBsF42t.js";import"./rasterizingUtils-B0Pd5uE0.js";import"./Rect-BMNJQxpm.js";import"./BoundingBox-DnR5UeUT.js";import"./BidiEngine-CpIovbIK.js";import"./callExpressionWithFeature-BK7JnF3H.js";import"./OverrideHelper-BKNowJt8.js";import"./densifyCurvedGeometry-C2XDhl14.js";import"./config-BSvujflG.js";import"./dehydratedFeatureComparison-Ch8xWl-8.js";import"./WGLContainer-Caxzva6E.js";import"./utils-DBLYSlue.js";import"./ProgramTemplate-ks-pn-xm.js";import"./VertexArrayObject-Dzn28byJ.js";import"./BufferObject-lp8QWmVQ.js";import"./VertexBuffer-DL5rIQzc.js";import"./vec3f32-CZ7wi78s.js";import{n as O}from"./Container-DgT8F3N0.js";import"./EffectView-CvH-XuUh.js";import"./GraphShaderModule-D5xwSwIQ.js";import"./FramebufferObject-CkeUwNOD.js";import"./ShaderBuilder-C3C7fUwK.js";import{n as k,t as A}from"./LayerView2D-DVE2Teoj.js";import{t as j}from"./LayerView-DKEUJRIQ.js";import"./UpdateTracking2D-yw0xaCSk.js";import"./TechniqueInstance-BhM4b8eb.js";import"./TileContainer-BwjyXNO3.js";import"./FeatureCommandQueue-COnDeivB.js";import"./constants-BOI_CTg-.js";import"./utils-CY7cI7hp.js";import"./AGraphicContainer-ShIe2ypS.js";import{t as M}from"./GraphicContainer-DNktOekL.js";import"./ComputedAttributeStorage-D_u4lyEq.js";import{t as N}from"./GraphicsView2D-Dg0AUWQu.js";import"./dehydratedFeatures-DW1qFa9i.js";import"./utils-CyTmGCxv.js";import{t as P}from"./OverlayContainer-CB0dR5QJ.js";var F=2,I=class extends O{constructor(e){super(),this.element=e,this._handles=new _,this.isWrapAround=!1,this.perspectiveTransform=y(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(c(()=>this.element,()=>{let e=this.element;this.ready(),e&&this._handles.add(v(e,`play`,()=>this.requestRender()))},d))}getMesh(e){throw Error(`Method not implemented.`)}destroy(){super.destroy(),this._handles.destroy(),this.texture=g(this.texture)}get textureSize(){if(!this.texture)return[1,1];let e=this.texture.descriptor;return[e.width,e.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(e){let t=this.element;if(t==null)return;let{context:n}=e,{videoWidth:r,videoHeight:i}=t;if(r!==0&&i!==0){if(this.texture)t.paused||e.animationsEnabled&&this.texture.setData(t);else{let e=new l(r,i);e.wrapMode=33071,e.preMultiplyAlpha=!0,this.texture=new u(n,e,t)}t.paused||this.texture.generateMipmap(),super.beforeRender(e)}}_createTransforms(){return null}updateDrawCoords(e,t,n,r){let i=this.element,a=this._getFrameInfo();if(!i||!a)return;let{spatialReference:o}=n;this._initializeData(e,a,o);let{controlPoints:s,horizon:c}=a,l=Math.sqrt(s.length),u=l,{x:d,y:f}=e,p=this._vertices,m=s[0],g=s[l-1],_=s[(u-1)*l],v=s[(u-1)*l+l-1],y=S(c?c[0].mapPoint:m.mapPoint,o),b=S(c?c[1].mapPoint:g.mapPoint,o),x=S(_.mapPoint,o),C=S(v.mapPoint,o);this.clipGeometry=c?new k({geometry:h.fromJSON({rings:[[[x.x,x.y],[C.x,C.y],[b.x,b.y],[y.x,y.y],[x.x,x.y]]],spatialReference:o})}):null;for(let e=0;e<s.length;e++){let{sourcePoint:t,mapPoint:n}=s[e];if(t==null||n==null)continue;let r=S(n,o);p[e*F+0]=r.x-d,p[e*F+1]=r.y-f}let w=t;if(r){let e=Math.min(y.x,b.x,x.x,C.x),t=Math.max(y.x,b.x,x.x,C.x),{worldWidth:n,xBounds:i}=r,[a,o]=i;e<a&&t>a?w=n:t>o&&e<o&&(w=-n)}this.wrapAroundShift=w,this.isWrapAround=w!==0}draw(e,t){if(this.visible){if(!(this.isReady&&this._vertices&&this._indices&&this._texCoords))return void this.requestRender();this.stage||console.warn(`OverlayMultipoint: stage is null`),t.render(e,{transform:{dvs:this.dvsMat3},config:{perspective:this.perspectiveTransform,texSize:this.textureSize,wrapAroundShift:this.wrapAroundShift,isWrapAround:this.isWrapAround,opacity:this.opacity,texture:{texture:this.texture,unit:0}},position:this._vertices,tex:this._texCoords,index:this._indices})}}_initializeData(e,t,n){if(this._vertices!=null&&this._indices!=null)return;let{controlPoints:r}=t,i=Math.sqrt(r.length),a=i,o=new Float32Array(F*r.length),s=new Uint16Array(2*r.length);for(let t=0;t<r.length;t++){let{sourcePoint:i,mapPoint:a}=r[t];if(i==null||a==null)continue;let c=S(a,n);o[t*F+0]=c.x-e.x,o[t*F+1]=c.y-e.y,s[2*t+0]=i.x,s[2*t+1]=i.y}let c=new Uint16Array(a*i+(a-2)*(i+2)),l=0;for(let e=0;e<a;e++){for(let t=0;t<i;t++)c[l++]=e*i+t,c[l++]=(e+1)*i+t;e<a-2&&(c[l++]=(e+1)*i+(i-1),c[l++]=(e+1)*i)}this._vertices=o,this._texCoords=s,this._indices=c}_getFrameInfo(){if(!this.groundControlPoints)return null;let t=this._getFrameControlPoints(),n=this.frameHorizonPoints,r=null;if(n){let t=n.startX,i=n.startY,a=n.endX,o=n.endY;r=[new T({sourcePoint:p(t,i),mapPoint:new e(n.startLongitude,n.startLatitude)}),new T({sourcePoint:p(a,o),mapPoint:new e(n.endLongitude,n.endLatitude)})]}return{controlPoints:t,horizon:r}}_getFrameControlPoints(){let t=this.groundControlPoints,n=t?.length;if(!n)return[];let r=Array(n),i=Math.max(...t.map(({x:e})=>e)),a=this.element.videoWidth/i;for(let i=0;i<n;i++){let{x:n,y:o,lat:s,lon:c}=t[i];r[i]=new T({sourcePoint:p(n*a,-o*a),mapPoint:new e(c,s)})}return r}},L=new f([255,127,0]),R=10005,z=10018,B=class extends A(j){constructor(){super(...arguments),this._graphicsLayer=new w,this._frameOutlineGraphic=new i({symbol:new o({outline:{type:`simple-line`,color:L}})}),this._frameCenterGraphic=new i({symbol:new n({color:L,style:`cross`})}),this._sensorTrailGraphic=new i({symbol:new m({color:L})}),this._sensorSightlineGraphic=new i({symbol:new m({color:L})}),this._sensorLocationGraphic=new i({symbol:new n({color:L})}),this._overlayContainer=null,this._sensorLocationSymbolType=null,this.layer=null,this.sensorLocationSymbol=null,this.symbolAngle=0,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=x(this._graphicsLayer)}initialize(){this._sensorLocationSymbolType=this.layer?.sensorSymbol.type,this._graphicsLayer.graphics.addMany([this._frameCenterGraphic,this._frameOutlineGraphic,this._sensorLocationGraphic,this._sensorSightlineGraphic,this._sensorTrailGraphic]),this.visibleTelemetryElements=new D({frame:this.layer.telemetryDisplay?.frame??!1,frameCenter:this.layer.telemetryDisplay?.frameCenter??!0,frameOutline:this.layer.telemetryDisplay?.frameOutline??!0,lineOfSight:this.layer.telemetryDisplay?.lineOfSight??!0,sensorLocation:this.layer.telemetryDisplay?.sensorLocation??!0,sensorTrail:this.layer.telemetryDisplay?.sensorTrail??!0})}attach(){this._overlayContainer=new P,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new N({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on(`graphic-update`,this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([a(()=>[this.layer.telemetryDisplay?.frame,this.layer.telemetryDisplay?.frameCenter,this.layer.telemetryDisplay?.frameOutline,this.layer.telemetryDisplay?.sensorLocation,this.layer.telemetryDisplay?.sensorTrail,this.layer.telemetryDisplay?.lineOfSight],()=>this._updateVisibleTelemetryElements(),d),a(()=>[this.layer.telemetry,this.visibleTelemetryElements?.frameCenter,this.visibleTelemetryElements?.frameOutline,this.visibleTelemetryElements?.sensorLocation,this.visibleTelemetryElements?.sensorTrail,this.visibleTelemetryElements?.lineOfSight],()=>this._updateGraphicGeometries(),d),a(()=>this.layer.metadata,()=>this._updateSensorLocationSymbolAngle(),d),a(()=>this.layer?.frameCenterSymbol,()=>this._updateFrameCenterSymbol(),d),a(()=>this.layer?.frameOutlineSymbol,()=>this._updateFrameOutlineSymbol(),d),a(()=>this.layer?.sensorSightLineSymbol,()=>this._updateSensorSightlineSymbol(),d),a(()=>this.layer?.sensorSymbol,()=>this._updateSensorLocationSymbol(),d),a(()=>this.layer?.sensorTrailSymbol,()=>this._updateSensorTrailSymbol(),d),a(()=>this.symbolAngle,()=>this._updateSensorLocationSymbol(),d)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=x(this.graphicsView)}supportsSpatialReference(e){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(e){this.graphicsView.processUpdate(e)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.view.animationsEnabled&&this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frame=this.layer.telemetryDisplay.frame,this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){if(!this.view.animationsEnabled)return;let{telemetry:e}=this.layer,{visibleTelemetryElements:t}=this;e&&t&&(t.frameOutline&&e.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&e.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&e.lineOfSight?this._sensorSightlineGraphic.geometry=this.layer.telemetry.lineOfSight:this._sensorSightlineGraphic.geometry=null,t.sensorLocation&&e.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&e.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}_updateSensorLocationSymbolAngle(){if(!this.view.animationsEnabled||!this.layer?.metadata?.size)return;let{source:e,symbolOffset:t=0}=this.layer.sensorSymbolOrientation||{};if(!e&&!t)return;let n=this.layer?.metadata?.get(R)?.value??0,r=this.layer?.metadata?.get(z)?.value??0,i=E({cameraAzimuth:r,platformHeading:n,source:this.layer.sensorSymbolOrientation?.source,symbolOffset:this.layer.sensorSymbolOrientation?.symbolOffset??0});this.symbolAngle=Math.round(Math.abs(i))}_updateSensorLocationSymbol(){switch(this._sensorLocationSymbolType){case`simple-marker`:this.sensorLocationSymbol=this.layer.sensorSymbol.clone(),this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol.clone();break;case`picture-marker`:this.sensorLocationSymbol=this.layer.sensorSymbol,this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol;break;case`cim`:this.sensorLocationSymbol=this.layer.sensorSymbol,C(this.sensorLocationSymbol,this.symbolAngle,!0),this._sensorLocationGraphic.symbol=this.sensorLocationSymbol}}_updateFrameCenterSymbol(){this.layer?.frameCenterSymbol&&(this._frameCenterGraphic.symbol=this.layer.frameCenterSymbol.clone())}_updateFrameOutlineSymbol(){this.layer?.frameOutlineSymbol&&(this._frameOutlineGraphic.symbol=this.layer.frameOutlineSymbol.clone())}_updateSensorSightlineSymbol(){this.layer?.sensorSightLineSymbol&&(this._sensorSightlineGraphic.symbol=this.layer.sensorSightLineSymbol.clone())}_updateSensorTrailSymbol(){this.layer?.sensorTrailSymbol&&(this._sensorTrailGraphic.symbol=this.layer.sensorTrailSymbol.clone())}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;let e=new I(this.layer.videoElement);this.addAttachHandles([a(()=>[this.layer.frameHorizonPoints,this.layer.groundControlPoints,this.layer.frameOpacity,this.layer.telemetryDisplay?.frame],()=>{if(!this.view.animationsEnabled)return;let{visibleTelemetryElements:t}=this;e.frameHorizonPoints=this.layer.frameHorizonPoints,e.groundControlPoints=this.layer.groundControlPoints,e.opacity=this.layer.frameOpacity,e.visible=t?.frame??!1},d)]),this._overlayContainer.addChild(e),this.view.stage.requestRender()}};t([s()],B.prototype,`graphicsView`,void 0),t([s()],B.prototype,`layer`,void 0),t([s({types:r})],B.prototype,`sensorLocationSymbol`,void 0),t([s()],B.prototype,`symbolAngle`,void 0),t([s({type:D})],B.prototype,`visibleTelemetryElements`,void 0),B=t([b(`esri.views.2d.layers.VideoLayerView2D`)],B);var V=B;export{V as default};