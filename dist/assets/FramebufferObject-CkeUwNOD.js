import{Gs as e,Qs as t,Vs as n,Xs as r,bD as i,cc as a,dc as o,ec as s,fT as c,ic as l,lc as u,tc as d,uc as f,vE as p}from"./index-BqmCqmfp.js";import{t as m}from"./BufferObject-lp8QWmVQ.js";var h=class{constructor(e,t=0,n=t,r=!1,i=1){this.internalFormat=e,this.width=t,this.height=n,this.multisampled=r,this.samples=i}};function g(t){return t.width<=0||t.height<=0||t.internalFormat==null?0:t.width*t.height*e(t.internalFormat)}var _=!!i(`esri-tests-disable-gpu-memory-measurements`),v=class{constructor(e,t){this._context=e,this._descriptor=t,this.type=2,this._context.instanceCounter.increment(d.Renderbuffer,this);let n=this._context.gl;this.glName=n.createRenderbuffer(),this._context.bindRenderbuffer(this);let{width:r,height:i,internalFormat:a,multisampled:o}=t;o?n.renderbufferStorageMultisample(n.RENDERBUFFER,this.samples,a,r,i):n.renderbufferStorage(n.RENDERBUFFER,a,r,i),this._context.bindRenderbuffer(null)}get descriptor(){return this._descriptor}get samples(){let e=this._descriptor.samples,t=this._context.parameters.maxSamples;return e?Math.min(e,t):t}get usedMemory(){return _?0:g(this._descriptor)}resize(e,t){let n=this._descriptor;if(n.width===e&&n.height===t)return;n.width=e,n.height=t;let r=this._context.gl;this._context.bindRenderbuffer(this),n.multisampled?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,n.internalFormat,n.width,n.height):r.renderbufferStorage(r.RENDERBUFFER,n.internalFormat,n.width,n.height),this._context.bindRenderbuffer(null)}dispose(){this._context&&=(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(d.Renderbuffer,this),null)}},y=()=>p.getLogger(`esri.views.webgl.FramebufferObject`),b=class e{constructor(e,t,i){if(this._context=e,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,e.instanceCounter.increment(d.FramebufferObject,this),t!=null){let n=D(e,t);n!=null&&(this._colorAttachments.set(36064,n),x(n)?this._validateTextureDescriptor(n.descriptor):this._validateRenderbufferDescriptor(n.descriptor)),this._validateColorAttachmentPoint(r)}if(i!=null)if(C(i))this._depthStencilTexture=x(i)?i:new n(e,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{let t=S(i)?i:new v(e,i);this._depthStencilBuffer=t,this._validateRenderbufferDescriptor(t.descriptor)}}dispose(){let{_colorAttachments:e,_glName:t}=this;if(e.size===0&&!this._depthStencilBuffer&&!this._depthStencilTexture&&!t)return;let{_context:n}=this,r=n.getBoundFramebufferObject();e.forEach((e,t)=>this.detachColorTexture(t)?.dispose()),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),n.gl.deleteFramebuffer(t),this._glName=null,n.bindFramebuffer(r===this?null:r),n.instanceCounter.decrement(d.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){let e=this._colorAttachments.get(r);return x(e)?e:null}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){return(this._colorAttachments.get(36064)??this._depthStencilTexture??this._depthStencilBuffer)?.descriptor?.width??0}get height(){return(this._colorAttachments.get(36064)??this._depthStencilTexture??this._depthStencilBuffer)?.descriptor?.height??0}get usedMemory(){return[...this._colorAttachments].reduce((e,[t,n])=>e+n.usedMemory,this.depthStencil?.usedMemory??0)}static{this._MAX_COLOR_ATTACHMENTS=-1}getColorTexture(e){let t=this._colorAttachments.get(e);return t&&x(t)?t:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(e,t=r){if(!e)return;this._validateColorAttachmentPoint(t);let{descriptor:n}=e;this._validateTextureDescriptor(n),this.detachColorTexture(t)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,t)),this._colorAttachments.set(t,e)}detachColorTexture(e=r){let t=this._colorAttachments.get(e);if(!t)return;let n=x(t);return this._initialized&&this._context.temporaryBindFramebufferObject(this,()=>{if(n)this._framebufferTexture2D(null,e);else{let t=this._context.gl;t.framebufferRenderbuffer(t.FRAMEBUFFER,e,t.RENDERBUFFER,null)}}),this._colorAttachments.delete(e),n?t:void 0}setColorTextureTarget(e,t=r,n=0){let i=this._colorAttachments.get(t);i&&(e===35866?this._framebufferTextureLayer(i.glName,t,36160,0,n):this._framebufferTexture2D(i.glName,t,e,36160,0))}attachDepthStencil(e){if(e)switch(e.type){case 1:return this._attachDepthStencilTexture(e);case 2:return this._attachDepthStencilBuffer(e)}}_attachDepthStencilTexture(e){if(e==null)return;let{descriptor:t}=e,{pixelFormat:n,dataType:r}=t;n===34041||n===6402?n!==34041||r===s.UNSIGNED_INT_24_8?n!==6402||r===s.UNSIGNED_INT||r===s.UNSIGNED_SHORT?(this._validateTextureDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,A(n))),this._depthStencilTexture?.dispose(),this._depthStencilTexture=e):console.error(`Depth texture must have data type of UNSIGNED_INT or UNSIGNED_SHORT!`):console.error(`Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!`):console.error(`Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!`)}detachDepthStencilTexture(){let e=this._depthStencilTexture;return e&&this._initialized&&this._context.temporaryBindFramebufferObject(this,()=>{this._framebufferTexture2D(null,A(e.descriptor.pixelFormat))}),this._depthStencilTexture=null,e}_attachDepthStencilBuffer(e){if(e==null)return;let t=e.descriptor;if(this._validateRenderbufferDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);let{gl:n}=this._context,r=this._getGLAttachmentPoint(t);n.framebufferRenderbuffer(36160,r,n.RENDERBUFFER,e.glName)}this._depthStencilBuffer=e}detachDepthStencilBuffer(){let e=this._depthStencilBuffer;if(e&&this._initialized){let{_context:t}=this,n=t.getBoundFramebufferObject();t.bindFramebuffer(this);let{gl:r}=t,i=this._getGLAttachmentPoint(e.descriptor);r.framebufferRenderbuffer(36160,i,r.RENDERBUFFER,null),t.bindFramebuffer(n)}return this._depthStencilBuffer=null,e}invalidateAttachments(e){let{_context:t}=this;t.temporaryBindFramebufferObject(this,()=>t.gl.invalidateFramebuffer(36160,e),!0)}copyToTexture(e,t,r,i,a,o,s){(e<0||t<0||a<0||o<0)&&console.error(`Offsets cannot be negative!`),(r<=0||i<=0)&&console.error(`Copy width and height must be greater than zero!`);let c=s.descriptor;s.descriptor.target!==3553&&console.error(`Texture target must be TEXTURE_2D!`),(c?.width==null||c?.height==null||e+r>this.width||t+i>this.height||a+r>c.width||o+i>c.height)&&console.error(`Bad dimensions, the current input values will attempt to read or copy out of bounds!`);let l=this._context,u=l.bindTexture(s,n.TEXTURE_UNIT_FOR_UPDATES);l.setActiveTexture(n.TEXTURE_UNIT_FOR_UPDATES),l.bindFramebuffer(this),l.gl.copyTexSubImage2D(3553,0,a,o,e,t,r,i),l.bindTexture(u,n.TEXTURE_UNIT_FOR_UPDATES)}readPixels(e,t,n,r,i,a,o){(n<=0||r<=0)&&console.error(`Copy width and height must be greater than zero!`),o||console.error(`Target memory is not initialized!`),this._context.bindFramebuffer(this),this._context.gl.readPixels(e,t,n,r,i,a,o)}async readPixelsAsync(e,t,n,r,i,a,o){let{gl:s}=this._context,c=m.createPixelPack(this._context,35041,o.byteLength);this._context.bindBuffer(c);let l=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),s.readPixels(e,t,n,r,i,a,0),this._context.unbindBuffer(35051),this._context.bindFramebuffer(l),await c.getSubDataAsync(o),c.dispose()}resize(e,t){if(this.width===e&&this.height===t)return;let n={width:e,height:t};if(O(n,this._context.parameters.maxTextureSize),this._colorAttachments.forEach(e=>e.resize(n.width,n.height)),this._depthStencilTexture?.resize(n.width,n.height),this._initialized&&(O(n,this._context.parameters.maxRenderbufferSize),this._depthStencilBuffer?.resize(n.width,n.height),o())){let{gl:e}=this._context;e.checkFramebufferStatus(36160)!==e.FRAMEBUFFER_COMPLETE&&console.error(`Framebuffer is incomplete!`)}}initializeAndBind(e=36160){let{gl:t}=this._context;if(this._initialized)return void t.bindFramebuffer(e,this.glName);this._glName&&t.deleteFramebuffer(this._glName);let n=t.createFramebuffer();if(t.bindFramebuffer(e,n),this._colorAttachments.forEach((t,n)=>{if(x(t)){let r=k(t);r===35866?this._framebufferTextureLayer(t.glName,n,e,0,0):this._framebufferTexture2D(t.glName,n,r,e)}else if(S(t)){let r=this._context.gl;r.framebufferRenderbuffer(e,n,r.RENDERBUFFER,t.glName)}}),this._depthStencilBuffer){let n=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(e,n,t.RENDERBUFFER,this._depthStencilBuffer.glName)}else if(this._depthStencilTexture){let t=A(this._depthStencilTexture.descriptor.pixelFormat);this._framebufferTexture2D(this._depthStencilTexture.glName,t,k(this._depthStencilTexture),e)}o()&&t.checkFramebufferStatus(e)!==t.FRAMEBUFFER_COMPLETE&&console.error(`Framebuffer is incomplete!`),this._glName=n,this._initialized=!0}_framebufferTexture2D(e,t=r,n=3553,i=36160,a=0){this._context.gl.framebufferTexture2D(i,t,n,e,a)}_framebufferTextureLayer(e,t=r,n=36160,i=0,a=0){this._context.gl.framebufferTextureLayer(n,t,e,i,a)}_disposeDepthStencilAttachments(){let e=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);let t=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(36160,t,e.RENDERBUFFER,null)}this._depthStencilBuffer=c(this._depthStencilBuffer)}this._depthStencilTexture&&=(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,A(this._depthStencilTexture.descriptor.pixelFormat))),c(this._depthStencilTexture))}_validateTextureDescriptor(e){e.target!==3553&&e.target!==34067&&e.target!==35866&&console.error(`Texture type must be TEXTURE_2D, TEXTURE_2D_ARRAY or TEXTURE_CUBE_MAP!`),O(e,this._context.parameters.maxTextureSize),this._validateBufferDimensions(e)}_validateRenderbufferDescriptor(e){O(e,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(e)}_validateBufferDimensions(e){e.width<=0&&(e.width=this.width),e.height<=0&&(e.height=this.height),this.width>0&&this.height>0&&(this.width===e.width&&this.height===e.height||console.error(`Attachment size must match framebuffer size!`))}_getGLAttachmentPoint(e){switch(e.internalFormat){case l.DEPTH_COMPONENT16:case l.DEPTH_COMPONENT24:case l.DEPTH_COMPONENT32F:return u;case t.DEPTH24_STENCIL8:case t.DEPTH32F_STENCIL8:return a;case 36168:return f;default:return r}}_validateColorAttachmentPoint(t){if(e._MAX_COLOR_ATTACHMENTS===-1){let{gl:t}=this._context;e._MAX_COLOR_ATTACHMENTS=t.getParameter(t.MAX_COLOR_ATTACHMENTS)}let n=t-r;n+1>e._MAX_COLOR_ATTACHMENTS&&p.getLogger(`esri.views.webgl.FrameBufferObject`).error(`esri.FrameBufferObject`,`illegal attachment point for color attachment: ${n+1}. Implementation supports up to ${e._MAX_COLOR_ATTACHMENTS} color attachments`)}};function x(e){return E(e)===1}function S(e){return E(e)===2}function C(e){return x(e)||w(e)}function w(e){return E(e)===0}function T(e){return E(e)===3||e!=null&&`samples`in e}function E(e){return e!=null&&`type`in e?e.type:null}function D(e,t){return x(t)||S(t)?t:w(t)?new n(e,t):T(t)?new v(e,t):null}function O(e,t){let n=Math.max(e.width,e.height);if(n>t){y().warnOnce(`Resizing FBO attachment size ${e.width}x${e.height} to device limit ${t}`);let r=t/n;return e.width=Math.round(e.width*r),e.height=Math.round(e.height*r),!1}return!0}function k(e){return e.descriptor.target===34067?34069:e.descriptor.target===35866?35866:3553}function A(e){return e===6402?u:a}export{v as n,h as r,b as t};