import{Cd as e,Nb as t,Ux as n,bD as r,xa as i,ym as a}from"./index-BqmCqmfp.js";var o=4;function s(e){switch(e.type){case`object-id`:case`unique-id-simple`:return`${e.fieldName} ASC`;case`unique-id-composite`:return`${e.fieldNames.join(`,`)} ASC`}}function c(e,r,i){let a=s(i.featureIdInfo);return{returnCentroid:i.serviceGeometryType===`esriGeometryPolygon`&&!e.queryMetadata.supportsCentroidOnDegeneratedQuantizedGeometry&&!e.queryMetadata.supportsDegeneratedQuantizedGeometry,returnGeometry:!0,timeReferenceUnknownClient:i.timeReferenceUnknownClient??void 0,outSpatialReference:n.fromJSON(e.outSpatialReference),orderByFields:e.type===`memory`?[]:[a],where:r.definitionExpression??`1=1`,outFields:r.availableFields,multipatchOption:i.serviceGeometryType===`esriGeometryMultiPatch`?`xyFootprint`:null,gdbVersion:r.gdbVersion,historicMoment:r.historicMoment?new Date(r.historicMoment):null,timeExtent:r.timeExtent?t.fromJSON(r.timeExtent):null}}var l=class t{static create(e,n,r){let i=n.queryScaleRanges,a=n.displayFilterInfo;return new t(c(e,n,r),a,i,r.subtypeField,n.customParameters,r.geometryType,e.queryMetadata)}constructor(e,t,n,r,i,a,o){this._queryParams=e,this._displayFilter=t,this._queryScaleRanges=n,this._subtypeField=r,this._customParameters=i,this._geometryType=a,this._queryMetadata=o}get pageSize(){if(this._queryMetadata==null)throw Error(`InternalError: Service does not support paged queries`);let e=this._queryMetadata.supportsMaxRecordCountFactor?o:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}get objectIdsQueryPageSize(){return this._queryMetadata?.maxRecordCount??2e3}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t,n){if(!t.getSize())return null;let i=e.clone();if(this._queryParams.outFields[0]===`*`){if((i.outFields??[])[0]===`*`)return null;i.outFields=this._queryParams.outFields}else{let e=new Set(this._queryParams.outFields),n=[];for(let r of e)t.hasField(r)||n.push(r);if(n.length===0)return null;i.outFields=n}i.returnGeometry=!1,i.returnCentroid=!1,i.quantizationParameters=null,i.cacheHint=!0;let a={inner:i,customParameters:this._customParameters};if(r(`esri-tiles-debug`)&&n!=null){let e=n.chunkId.toString().replaceAll(`/`,`.`);a.customParameters=a.customParameters?{...a.customParameters,chunkId:e}:{chunkId:e}}return a}createQuery(t={}){if(!this._queryParams)throw Error(`InternalError: queryInfo should be defined`);return{inner:new e({...this._queryParams,...t}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._queryMetadata==null)throw Error(`InternalError: Service does not support tile queries`);let n=this.createQuery(t),s=n.inner;if(this._queryScaleRanges?.length){let t=this._queryScaleRanges.filter(t=>(!t.minScale||t.minScale>=e.maxScale)&&(!t.maxScale||t.maxScale<=e.minScale)).map(e=>e.subtypeCode);if(t.length){let e=`${this._subtypeField} IN (${t})`;s.where=a(s.where,e)}}if(this._displayFilter&&(s.where=a(s.where,i(this._displayFilter,e.minScale,e.maxScale))),s.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),s.resultType=`tile`,s.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType===`esriGeometryPolyline`&&(s.maxAllowableOffset=e.resolution*r(`feature-polyline-generalization-factor`)):this._geometryType!==`esriGeometryPolyline`&&this._geometryType!==`esriGeometryPolygon`||(s.maxAllowableOffset=e.resolution,this._geometryType===`esriGeometryPolyline`&&(s.maxAllowableOffset*=r(`feature-polyline-generalization-factor`))),s.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,s.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(s.maxRecordCountFactor=o),r(`esri-tiles-debug`)){let t=e.id.replaceAll(`/`,`.`);n.customParameters=n.customParameters?{...n.customParameters,tileId:t}:{tileId:t}}return n}createPagedTileQuery(e,t){let n=this.pageSize;return this.createTileQuery(e,{start:n*t,num:n,returnExceededLimitFeatures:!0})}createPagedQuery(e,t){let n=this.pageSize;return this.createQuery({start:n*e,num:n,returnExceededLimitFeatures:!0,maxRecordCountFactor:o,quantizationParameters:t,cacheHint:!0})}createObjectIdsQuery(e){return this.createQuery({objectIds:e,outFields:[`*`]})}};function*u(e){switch(e.type){case`object-id`:case`unique-id-simple`:yield e.fieldName;return;case`unique-id-composite`:yield*e.fieldNames;return}}export{l as n,u as t};