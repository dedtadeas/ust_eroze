import{Mw as e,NT as t,Qw as n,Sw as r,_E as i,_x as a,vx as o}from"./index-BqmCqmfp.js";async function s(t,n){let r=e(t);if(!r)throw new i(`invalid-url`,`Invalid scene service url`);let a={...n,sceneServerUrl:r.url.path,layerId:r.sublayer??void 0};if(a.sceneLayerItem??=await c(a),a.sceneLayerItem==null)return d(a.sceneServerUrl.replace(`/SceneServer`,`/FeatureServer`),a);let o=await f(a);if(!o?.url)throw new i(`related-service-not-found`,`Could not find feature service through portal item relationship`);a.featureServiceItem=o;let s=await d(o.url,a);return s.portalItem=o,s}async function c(e){let t=(await l(e)).serviceItemId;if(!t)return null;let r=new a({id:t,apiKey:e.apiKey}),i=await u(e);i!=null&&(r.portal=new o({url:i}));try{return await r.load({signal:e.signal})}catch(e){return n(e),null}}async function l(e){if(e.rootDocument)return e.rootDocument;let t={query:{f:`json`,...e.customParameters,token:e.apiKey},responseType:`json`,signal:e.signal};try{e.rootDocument=(await r(e.sceneServerUrl,t)).data}catch{e.rootDocument={}}return e.rootDocument}async function u(e){let i=t?.findServerInfo(e.sceneServerUrl);if(i?.owningSystemUrl)return i.owningSystemUrl;let a=e.sceneServerUrl.replace(/(.*\/rest)\/.*/i,`$1`)+`/info`;try{let t=(await r(a,{query:{f:`json`},responseType:`json`,signal:e.signal})).data.owningSystemUrl;if(t)return t}catch(e){n(e)}return null}async function d(t,n){let a=e(t);if(!a)throw new i(`invalid-feature-service-url`,`Invalid feature service url`);let o=a.url.path,s=n.layerId;if(s==null)return{serverUrl:o};let c=l(n),u=n.featureServiceItem?await n.featureServiceItem.fetchData(`json`):null,d=(u?.layers?.[0]||u?.tables?.[0])?.customParameters,f=e=>{let t={query:{f:`json`,...d},responseType:`json`,authMode:e,signal:n.signal};return r(o,t)},p=f(`anonymous`).catch(()=>f(`no-prompt`)),[m,h]=await Promise.all([p,c]),g=h?.layers,_=m.data&&m.data.layers;if(!Array.isArray(_))throw Error(`expected layers array`);if(Array.isArray(g)){for(let e=0;e<Math.min(g.length,_.length);e++)if(g[e].id===s)return{serverUrl:o,layerId:_[e].id}}else if(s!=null&&s<_.length)return{serverUrl:o,layerId:_[s].id};throw Error(`could not find matching associated sublayer`)}async function f({sceneLayerItem:e,signal:t}){if(!e)return null;try{let n=(await e.fetchRelatedItems({relationshipType:`Service2Service`,direction:`reverse`},{signal:t})).find(e=>e.type===`Feature Service`)||null;if(!n)return null;let r=new a({portal:n.portal,id:n.id});return await r.load(),r}catch(e){return n(e),null}}export{s as t};