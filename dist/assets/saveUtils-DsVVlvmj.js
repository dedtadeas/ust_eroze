import{_E as e,_b as t}from"./index-BqmCqmfp.js";async function n(e){let t=[];for(let n of e.allLayers)if(`beforeSave`in n&&typeof n.beforeSave==`function`){let e=n.beforeSave();e&&t.push(e)}await Promise.allSettled(t)}var r=new Set([`layer:unsupported`,`property:unsupported`,`symbol:unsupported`,`symbol-layer:unsupported`,`url:unsupported`]);function i(t,n,i){let a=(t.messages??[]).filter(({type:e})=>e===`error`).map(({name:t,message:n,details:r})=>new e(t,n,r));if(t.blockedRelativeUrls&&(a=a.concat(t.blockedRelativeUrls.map(t=>new e(`url:unsupported`,`Relative url '${t}' is not supported`)))),i){let{ignoreUnsupported:e,supplementalUnsupportedErrors:t=[],requiredPropertyChecksDisabled:n}=i;e&&(a=a.filter(({name:e})=>!(r.has(e)||t.includes(e)))),n&&(a=a.filter(e=>e.name!==`web-document-write:property-required`))}if(a.length>0)throw new e(n.errorName,`Failed to save due to unsupported or invalid content. See 'details.errors' for more detailed information`,{errors:a})}function a(e){return t(e).some(e=>!!e.charts?.length)}export{n,i as r,a as t};