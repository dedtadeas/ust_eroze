import{Bu as e,CD as t,Hx as n,IC as r,MC as i,Sw as a,Vu as o,kC as s,vC as c,zu as l}from"./index-BqmCqmfp.js";import"./quatf64-CJzmL3cc.js";import"./quat-Bk_ZaVz9.js";import"./axisAngleDegrees-Di7q97jx.js";import"./MeshTransform-B2p38eYR.js";import"./editingSupport-z-WY3UuH.js";import"./applyEditsUtils-6Wi1ZwPV.js";import{t as u}from"./utils-HJ2wo1k4.js";var d,f=d=class extends c{static from(e){return r(d,e)}constructor(e){super(e),this.circuits=null,this.moment=null,this.exceededTransferLimit=!1,this.serviceEdits=null}readServiceEdits(e,t){return u(e)}};t([i({json:{type:[Object]}})],f.prototype,`circuits`,void 0),t([i({type:Date})],f.prototype,`moment`,void 0),t([i({type:Boolean,json:{type:Boolean,write:!0}})],f.prototype,`exceededTransferLimit`,void 0),t([i({type:[Object]})],f.prototype,`serviceEdits`,void 0),t([n(`serviceEdits`)],f.prototype,`readServiceEdits`,null),f=d=t([s(`esri.rest.networks.circuits.support.ExportCircuitsResult`)],f);async function p(t,n,r){let i=l(t),s=n.toJSON();n.circuits&&(s.circuits=JSON.stringify(n.circuits));let c={...s,f:`json`},u=o({...i.query,...c}),d=e(u,{...r,method:`post`}),p=`${i.path}/circuits/export`,{data:m}=await a(p,d);return f.fromJSON(m)}export{p as exportCircuits};