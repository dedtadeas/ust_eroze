import{Jg as e,Jl as t,Ml as n,Xg as r,au as i,aw as a,iu as o,xw as s}from"./index-BqmCqmfp.js";import{r as c}from"./Util-3rPi0NfK.js";import{S as l,T as u,a as d,b as f,c as p,f as m,i as h,o as g,s as _}from"./sphere-CicnK0Bn.js";import{l as v}from"./frustum-DNBPrNIX.js";var y=class n{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(e,t){this.objectToBoundingSphere=e,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new b,this._objectCount=0,t&&(t.maximumObjectsPerNode!==void 0&&(this._maximumObjectsPerNode=t.maximumObjectsPerNode),t.maximumDepth!==void 0&&(this._maximumDepth=t.maximumDepth))}destroy(){this._degenerateObjects.clear(),b.clearPool(),z[0]=null,G.prune(),Z.prune()}add(e){let t=Array.from(e);this._grow(t);let n=b.acquire();for(let e of t)++this._objectCount,this._isDegenerate(e)?this._degenerateObjects.add(e):(n.init(this._root),this._add(e,n));b.release(n)}remove(e,t=null){this._objectCount-=e.length;let n=b.acquire();for(let r of e){let e=t??_(this.objectToBoundingSphere(r),K);F(e[3])?(n.init(this._root),C(r,e,n)):this._degenerateObjects.delete(r)}b.release(n),this._shrink()}update(e,t){if(!F(t[3])&&this._isDegenerate(e))return;let n=B(e);this.remove(n,t),this.add(n)}forEachAlongRay(e,t,n){let r=u(e,t);x(this._root,e=>{if(!T(r,e))return!1;let t=e.node;return t.terminals.forAll(e=>{this._intersectsObject(r,e)&&n(e)}),t.residents!==null&&t.residents.forAll(e=>{this._intersectsObject(r,e)&&n(e)}),!0})}forEachAlongRayWithVerticalOffset(e,t,n,r){let i=u(e,t);x(this._root,e=>{if(!E(i,e,r))return!1;let t=e.node;return t.terminals.forAll(e=>{this._intersectsObjectWithOffset(i,e,r)&&n(e)}),t.residents!==null&&t.residents.forAll(e=>{this._intersectsObjectWithOffset(i,e,r)&&n(e)}),!0})}forEach(e){x(this._root,t=>{let n=t.node;return n.terminals.forAll(e),n.residents!==null&&n.residents.forAll(e),!0}),this._degenerateObjects.forEach(e)}forEachDegenerateObject(e){this._degenerateObjects.forEach(e)}findClosest(e,n,r,i=()=>!0,a=1/0){let s=1/0,c=1/0,l=null,u=N(e,n),d=t=>{if(--a,!i(t))return;let o=this.objectToBoundingSphere(t);if(!v(r,o))return;let u=P(e,n,h(o)),d=u-o[3],f=u+o[3];d<s&&(s=d,c=f,l=t)};return S(this._root,i=>{if(a<=0||!v(r,i.bounds)||(t(H,u,i.halfSize),o(H,H,h(i.bounds)),P(e,n,H)>c))return!1;let s=i.node;return s.terminals.forAll(e=>d(e)),s.residents!==null&&s.residents.forAll(e=>d(e)),!0},e,n),l}forEachInDepthRange(e,n,r,i,a,s,c){let l=-1/0,u=1/0,d={setRange:e=>{r===1?(l=Math.max(l,e.near),u=Math.min(u,e.far)):(l=Math.max(l,-e.far),u=Math.min(u,-e.near))}};d.setRange(i);let f=P(n,r,e),p=N(n,r),m=N(n,-r),g=e=>{if(!c(e))return;let t=this.objectToBoundingSphere(e),i=P(n,r,h(t))-f,o=i-t[3],p=i+t[3];o>u||p<l||!v(s,t)||a(e,d)};S(this._root,e=>{if(!v(s,e.bounds)||(t(H,p,e.halfSize),o(H,H,h(e.bounds)),P(n,r,H)-f>u)||(t(H,m,e.halfSize),o(H,H,h(e.bounds)),P(n,r,H)-f<l))return!1;let i=e.node;return i.terminals.forAll(e=>g(e)),i.residents!==null&&i.residents.forAll(e=>g(e)),!0},n,r)}forEachNode(e){x(this._root,t=>e(t.node,t.bounds,t.halfSize,t.depth))}forEachNeighbor(t,n){let r=d(n),a=l(n,e()),o=e=>{let n=this.objectToBoundingSphere(e),o=d(n),s=r+o;return!(i(h(n),a)-s*s<=0)||t(e)},s=!0,c=e=>{s&&=o(e)};x(this._root,e=>{let t=d(e.bounds),n=r+t;if(i(h(e.bounds),a)-n*n>0)return!1;let o=e.node;return o.terminals.forAll(c),s&&o.residents!==null&&o.residents.forAll(c),s}),s&&this.forEachDegenerateObject(c)}_intersectsObject(e,t){let n=this.objectToBoundingSphere(t);return!(n[3]>0)||f(n,e)}_intersectsObjectWithOffset(e,t,n){let r=this.objectToBoundingSphere(t);return!(r[3]>0)||f(n.applyToBoundingSphere(r),e)}_add(e,t){t.advanceTo(this.objectToBoundingSphere(e))?t.node.terminals.push(e):(t.node.residents.push(e),t.node.residents.length>this._maximumObjectsPerNode&&t.depth<this._maximumDepth&&this._split(t))}_split(e){let t=e.node.residents;e.node.residents=null;for(let n=0;n<t.length;n++){let r=b.acquire().init(e);this._add(t.at(n),r),b.release(r)}}_grow(e){if(j(e,e=>this.objectToBoundingSphere(e),q),F(q[3])&&!this._fitsInsideTree(q))if(D(this._root.node))_(q,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{let e=this._rootBoundsForRootAsSubNode(q);this._placingRootViolatesMaxDepth(e)?this._rebuildTree(q,e):this._growRootAsSubNode(e),b.release(e)}}_rebuildTree(e,t){m(J,t.bounds),J[3]=t.halfSize,j([e,J],e=>e,Y);let n=b.acquire().init(this._root);this._root.initFrom(null,Y,Y[3]),this._root.increaseHalfSize(1.25),x(n,e=>(this.add(e.node.terminals.data),e.node.residents!==null&&this.add(e.node.residents.data),!0)),b.release(n)}_placingRootViolatesMaxDepth(e){let t=Math.log(e.halfSize/this._root.halfSize)*Math.LOG2E,n=0;return x(this._root,e=>(n=Math.max(n,e.depth),n+t<=this._maximumDepth)),n+t>this._maximumDepth}_rootBoundsForRootAsSubNode(e){let t=e[3],n=e,r=-1/0,i=this._root.bounds,a=this._root.halfSize;for(let e=0;e<3;e++){let o=i[e]-a-(n[e]-t),s=n[e]+t-(i[e]+a),c=Math.max(0,Math.ceil(o/(2*a))),l=Math.max(0,Math.ceil(s/(2*a)))+1,u=2**Math.ceil(Math.log(c+l)*Math.LOG2E);r=Math.max(r,u),X[e].min=c,X[e].max=l}for(let e=0;e<3;e++){let t=X[e].min,n=X[e].max,o=(r-(t+n))/2;t+=Math.ceil(o),n+=Math.floor(o),V[e]=i[e]-a-t*a*2+(n+t)*a}let o=r*a;return V[3]=o*R,b.acquire().initFrom(null,V,o,0)}_growRootAsSubNode(e){let t=this._root.node;m(q,this._root.bounds),q[3]=this._root.halfSize,this._root.init(e),e.advanceTo(q,null,!0),e.node.children=t.children,e.node.residents=t.residents,e.node.terminals=t.terminals}_shrink(){for(;;){let e=this._findShrinkIndex();if(e===-1)break;this._root.advance(e),this._root.depth=0}}_findShrinkIndex(){if(this._root.node.terminals.length!==0||this._root.isLeaf())return-1;let e=null,t=this._root.node.children,n=0,r=0;for(;r<t.length&&e==null;)n=r++,e=t[n];for(;r<t.length;)if(t[r++])return-1;return n}_isDegenerate(e){return!F(this.objectToBoundingSphere(e)[3])}_fitsInsideTree(e){let t=this._root.bounds,n=this._root.halfSize;return e[3]<=n&&e[0]>=t[0]-n&&e[0]<=t[0]+n&&e[1]>=t[1]-n&&e[1]<=t[1]+n&&e[2]>=t[2]-n&&e[2]<=t[2]+n}toJSON(){let{maximumDepth:e,maximumObjectsPerNode:t,_objectCount:n}=this,r=this._nodeToJSON(this._root.node);return{maximumDepth:e,maximumObjectsPerNode:t,objectCount:n,root:{bounds:this._root.bounds,halfSize:this._root.halfSize,depth:this._root.depth,node:r}}}_nodeToJSON(e){let t=e.children.map(e=>e?this._nodeToJSON(e):null),n=e.residents?.map(e=>this.objectToBoundingSphere(e)),r=e.terminals?.map(e=>this.objectToBoundingSphere(e));return{children:t,residents:n,terminals:r}}static fromJSON(e){let t=new n(e=>e,{maximumDepth:e.maximumDepth,maximumObjectsPerNode:e.maximumObjectsPerNode});return t._objectCount=e.objectCount,t._root.initFrom(e.root.node,e.root.bounds,e.root.halfSize,e.root.depth),t}},b=class e{constructor(){this.bounds=p(),this.halfSize=0,this.initFrom(null,null,0,0)}init(e){return this.initFrom(e.node,e.bounds,e.halfSize,e.depth)}initFrom(t,n,r,i=this.depth){return this.node=t??e.createEmptyNode(),n&&_(n,this.bounds),this.halfSize=r,this.depth=i,this}increaseHalfSize(e){this.halfSize*=e,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*R}advance(t){let n=this.node.children[t];n||(n=e.createEmptyNode(),this.node.children[t]=n),this.node=n,this.halfSize/=2,this.depth++;let r=I[t];return this.bounds[0]+=r[0]*this.halfSize,this.bounds[1]+=r[1]*this.halfSize,this.bounds[2]+=r[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(e,t,n=!1){for(;;){if(this.isTerminalFor(e))return t?.(this,-1),!0;if(this.isLeaf()){if(!n)return t?.(this,-1),!1;this.node.residents=null}let r=this._childIndex(e);t?.(this,r),this.advance(r)}}isLeaf(){return this.node.residents!=null}isTerminalFor(e){return e[3]>this.halfSize/2}_childIndex(e){let t=this.bounds;return(t[0]<e[0]?1:0)+(t[1]<e[1]?2:0)+(t[2]<e[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new a({shrink:!0}),residents:new a({shrink:!0})}}static{this._pool=new s(()=>new e)}static acquire(){return e._pool.acquire()}static release(t){e._pool.release(t)}static clearPool(){e._pool.prune()}};function x(e,t){let n=b.acquire().init(e),r=[n];for(;r.length!==0;){if(n=r.pop(),t(n)&&!n.isLeaf())for(let e=0;e<n.node.children.length;e++)n.node.children[e]&&r.push(b.acquire().init(n).advance(e));b.release(n)}}function S(e,t,n,r=1){let i=b.acquire().init(e),a=[i];for(M(n,r,Q);a.length!==0;){if(i=a.pop(),t(i)&&!i.isLeaf())for(let e=7;e>=0;--e){let t=Q[e];i.node.children[t]&&a.push(b.acquire().init(i).advance(t))}b.release(i)}}function C(e,t,n){G.clear();let r=n.advanceTo(t,(e,t)=>{G.push(e.node),G.push(t)})?n.node.terminals:n.node.residents;if(r.removeUnordered(e),r.length===0)for(let e=G.length-2;e>=0&&w(G.data[e],G.data[e+1]);e-=2);}function w(e,t){return t>=0&&(e.children[t]=null),!!D(e)&&(e.residents===null&&(e.residents=new a({shrink:!0})),!0)}function T(e,t){return A(h(t.bounds),2*-t.halfSize,U),A(h(t.bounds),2*t.halfSize,W),c(e.origin,e.direction,U,W)}function E(e,t,n){return A(h(t.bounds),2*-t.halfSize,U),A(h(t.bounds),2*t.halfSize,W),n.applyToMinMax(U,W),c(e.origin,e.direction,U,W)}function D(e){if(e.terminals.length!==0)return!1;if(e.residents!==null)return e.residents.length===0;for(let t=0;t<e.children.length;t++)if(e.children[t])return!1;return!0}function O(e,t){e[0]=Math.min(e[0],t[0]-t[3]),e[1]=Math.min(e[1],t[1]-t[3]),e[2]=Math.min(e[2],t[2]-t[3])}function k(e,t){e[0]=Math.max(e[0],t[0]+t[3]),e[1]=Math.max(e[1],t[1]+t[3]),e[2]=Math.max(e[2],t[2]+t[3])}function A(e,t,n){n[0]=e[0]+t,n[1]=e[1]+t,n[2]=e[2]+t}function j(e,t,r){U[0]=1/0,U[1]=1/0,U[2]=1/0,W[0]=-1/0,W[1]=-1/0,W[2]=-1/0;for(let n of e){let e=t(n);F(e[3])&&(O(U,e),k(W,e))}g(r,n($,U,W,.5)),r[3]=Math.max(W[0]-U[0],W[1]-U[1],W[2]-U[2])/2}function M(e,t,n){if(!Z.length)for(let e=0;e<8;++e)Z.push({index:0,distance:0});for(let n=0;n<8;++n){let r=I[n];Z.data[n].index=n,Z.data[n].distance=P(e,t,r)}Z.sort((e,t)=>e.distance-t.distance);for(let e=0;e<8;++e)n[e]=Z.data[e].index}function N(e,t){let n,r=1/0;for(let i=0;i<8;++i){let a=P(e,t,L[i]);a<r&&(r=a,n=L[i])}return n}function P(e,t,n){return t*(e[0]*n[0]+e[1]*n[1]+e[2]*n[2])}function F(e){return!isNaN(e)&&e!==-1/0&&e!==1/0&&e>0}var I=[r(-1,-1,-1),r(1,-1,-1),r(-1,1,-1),r(1,1,-1),r(-1,-1,1),r(1,-1,1),r(-1,1,1),r(1,1,1)],L=[r(-1,-1,-1),r(-1,-1,1),r(-1,1,-1),r(-1,1,1),r(1,-1,-1),r(1,-1,1),r(1,1,-1),r(1,1,1)],R=Math.sqrt(3),z=[null];function B(e){return z[0]=e,z}var V=p(),H=e(),U=e(),W=e(),G=new a,K=p(),q=p(),J=p(),Y=p(),X=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],Z=new a,Q=[0,0,0,0,0,0,0,0],$=e();export{y as t};