import{Ad as e,Dg as t,Ux as n,VC as r,vD as i}from"./index-BqmCqmfp.js";import"./memoryEstimations-O7VgDRVG.js";import"./OptimizedFeature-Dx4_lHip.js";import"./OptimizedGeometry-f3I9Z6C1.js";import"./OptimizedFeatureSet-DlHqIhoP.js";import{_ as a,w as o}from"./featureConversionUtils-7vyVIZ6j.js";import"./pbf-CwGh07vG.js";import{t as s}from"./pbfQueryUtils-DOeTJOP2.js";import"./quantizationUtils-C5shine1.js";import"./dehydratedFeatureComparison-Ch8xWl-8.js";import{i as c,o as l,s as u}from"./dehydratedFeatures-DW1qFa9i.js";function d(e,t){return t}function f(e,t,n,r){switch(n){case 0:return g(e,t+r,0);case 1:return e.originPosition===`lowerLeft`?g(e,t+r,1):_(e,t+r,1)}}function p(e,t,n,r){return n===2?g(e,t,2):f(e,t,n,r)}function m(e,t,n,r){return n===2?g(e,t,3):f(e,t,n,r)}function h(e,t,n,r){return n===3?g(e,t,3):p(e,t,n,r)}function g({translate:e,scale:t},n,r){return e[r]+n*t[r]}function _({translate:e,scale:t},n,r){return e[r]-n*t[r]}var v=class{constructor(e){this._options=e,this.geometryTypes=[`point`,`multipoint`,`polyline`,`polygon`],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=d,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{},this._missingAttributes=[]}get missingAttributes(){return this._missingAttributes}createFeatureResult(){return new u}finishFeatureResult(e){if(this._options.applyTransform&&(e.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!e.hasZ)return;let n=t(e.geometryType,this._options.sourceSpatialReference,e.spatialReference);if(n!=null)for(let t of e.features)n(t.geometry)}createSpatialReference(){return new n}addField(t,n){t.fields.push(e.fromJSON(n));let r=t.fields.map(e=>e.name);this._attributesConstructor=function(){for(let e of r)this[e]=null}}addFeature(e,t){let n=this._options.maxStringAttributeLength,r=this._options.maxStringAttributeFields;l(t.attributes,r,n,n=>{let r=t.attributes[e.objectIdFieldName];r!=null&&this._missingAttributes.push({objectId:r,attribute:n})}),e.features.push(t)}addQueryGeometry(e,t){let{queryGeometry:n,queryGeometryType:r}=t,i=this._transform?o(n.clone(),n,!1,!1,this._transform):n.clone(),s=a(i,r,!1,!1);switch(r){case`esriGeometryPoint`:s.type=`point`;break;case`esriGeometryPolygon`:s.type=`polygon`;break;case`esriGeometryPolyline`:s.type=`polyline`;break;case`esriGeometryMultipoint`:s.type=`multipoint`}e.queryGeometryType=r,e.queryGeometry=s}prepareFeatures(e){switch(this._transform=e.transform??null,this._options.applyTransform&&e.transform&&(this._applyTransform=this._deriveApplyTransform(e)),this._vertexDimension=2,e.hasZ&&this._vertexDimension++,e.hasM&&this._vertexDimension++,e.geometryType){case`point`:this.addCoordinate=(e,t,n)=>this.addCoordinatePoint(e,t,n),this.createGeometry=e=>this.createPointGeometry(e);break;case`polygon`:this.addCoordinate=(e,t,n)=>this._addCoordinatePolygon(e,t,n),this.createGeometry=e=>this._createPolygonGeometry(e);break;case`polyline`:this.addCoordinate=(e,t,n)=>this._addCoordinatePolyline(e,t,n),this.createGeometry=e=>this._createPolylineGeometry(e);break;case`multipoint`:this.addCoordinate=(e,t,n)=>this._addCoordinateMultipoint(e,t,n),this.createGeometry=e=>this._createMultipointGeometry(e);break;case`mesh`:case`extent`:break;default:i(e.geometryType)}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,new c(r(),null,new this._attributesConstructor)}allocateCoordinates(){let e=this._lengths.reduce((e,t)=>e+t,0);this._coordinateBuffer=new Float64Array(e*this._vertexDimension),this._coordinateBufferPtr=0}addLength(e,t){this._lengths.length===0&&(this._toAddInCurrentPath=t),this._lengths.push(t)}createPointGeometry(e){let t={type:`point`,x:0,y:0,spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM};return t.hasZ&&(t.z=0),t.hasM&&(t.m=0),t}addCoordinatePoint(e,t,n){let r=this._transform?this._applyTransform(this._transform,t,n,0):t;if(r!=null)switch(n){case 0:e.x=r;break;case 1:e.y=r;break;case 2:e.hasZ?e.z=r:e.m=r;break;case 3:e.m=r}}_transformPathLikeValue(e,t){let n=0;return t<=1&&(n=this._previousCoordinate[t],this._previousCoordinate[t]+=e),this._transform?this._applyTransform(this._transform,e,t,n):e}_addCoordinatePolyline(e,t,n){this._dehydratedAddPointsCoordinate(e.paths,t,n)}_addCoordinatePolygon(e,t,n){this._dehydratedAddPointsCoordinate(e.rings,t,n)}_addCoordinateMultipoint(e,t,n){n===0&&e.points.push([]);let r=this._transformPathLikeValue(t,n);e.points[e.points.length-1].push(r)}_createPolygonGeometry(e){return{type:`polygon`,rings:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createPolylineGeometry(e){return{type:`polyline`,paths:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createMultipointGeometry(e){return{type:`multipoint`,points:[],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_dehydratedAddPointsCoordinate(e,t,n){n===0&&this._toAddInCurrentPath--===0&&(e.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);let r=this._transformPathLikeValue(t,n),i=e[e.length-1],a=this._coordinateBuffer;if(a){if(n===0){let e=this._coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT;i.push(new Float64Array(a.buffer,e,this._vertexDimension))}a[this._coordinateBufferPtr++]=r}}_deriveApplyTransform(e){let{hasZ:t,hasM:n}=e;return t&&n?h:t?p:n?m:f}},y=class{_parseFeatureQuery(e){let t=new v(e.options),n=s(e.buffer,t),r={...n,spatialReference:n.spatialReference?.toJSON(),fields:n.fields?n.fields.map(e=>e.toJSON()):void 0,missingAttributes:t.missingAttributes};return Promise.resolve(r)}};function b(){return new y}export{b as default};