import{IS as e,Un as t,Zw as n,_E as r,ab as i,fC as a,iT as o,jC as s,mm as c,mx as l,vE as u}from"./index-BqmCqmfp.js";import"./memoryEstimations-O7VgDRVG.js";import"./OptimizedFeature-Dx4_lHip.js";import"./OptimizedGeometry-f3I9Z6C1.js";import"./OptimizedFeatureSet-DlHqIhoP.js";import{C as d,_ as f}from"./featureConversionUtils-7vyVIZ6j.js";import"./WhereClause-h6PJ6gjs.js";import"./WhereClauseCache-BuGDygNN.js";import"./PooledRBush-DKfG2PAm.js";import"./QueryEngineCapabilities-DPTJ40n4.js";import"./generateRendererUtils-BgK3c0Qk.js";import"./utils-BcHO3hev.js";import"./BoundsStore-C1JqKB7k.js";import"./timeSupport-DheFkvFH.js";import"./optimizedFeatureQueryEngineAdapter-8HKICOsa.js";import{t as p}from"./FeatureStore-qdIVrmQw.js";import{t as m}from"./QueryEngine-DjyUd3-5.js";import{c as h,l as g}from"./queryUtils-BA7HiGeg.js";import"./quantizationUtils-C5shine1.js";import"./utils-DD1PtgG7.js";import"./utils-C2AeUOnb.js";import"./SnappingCandidate-B_1Ysqys.js";import"./FixedIntervalBinParameters-BO-nZFQ3.js";import"./date-DKxAu4UK.js";import{r as _,t as v}from"./geojson-HXfjj8c5.js";import{r as y}from"./sourceUtils-DtMoGpXR.js";import"./xmlUtils-HEdXfQxd.js";import{a as b,n as x,o as S}from"./wfsUtils-BPCk15Sc.js";var C=`esri.layers.WFSLayer`,w=class{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,n={}){let{getFeatureUrl:i,getFeatureOutputFormat:a,fields:s,geometryType:c,featureType:l,maxRecordCount:u,maxTotalRecordCount:d,maxPageCount:f,objectIdField:g,customParameters:_}=e,{spatialReference:v,getFeatureSpatialReference:y}=S(i,l,e.spatialReference);try{await h(y,v)}catch{throw new r(`unsupported-projection`,`Projection not supported`,{inSpatialReference:y,outSpatialReference:v})}o(n),this._customParameters=_,this._featureType=l,this._fieldsIndex=t.fromLayerJSON({fields:s,dateFieldsTimeReference:s.some(e=>e.type===`esriFieldTypeDate`)?{timeZoneIANA:`UTC`}:null}),this._geometryType=c,this._getFeatureUrl=i,this._getFeatureOutputFormat=a,this._getFeatureSpatialReference=y,this._maxRecordCount=u,this._maxTotalRecordCount=d,this._maxPageCount=f,this._objectIdField=g,this._spatialReference=v;let b=await this._snapshotFeatures(n);if(b.errors.length>0&&(this._supportsPagination=!1,b=await this._snapshotFeatures(n),b.errors.length>0))throw b.errors[0];let x={type:`object-id`,fieldName:g};return this._queryEngine=new m({fieldsIndex:this._fieldsIndex,geometryType:c,hasM:!1,hasZ:!1,featureIdInfo:x,spatialReference:v,timeInfo:null,featureStore:new p({geometryType:c,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(b.features),{warnings:D(b),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new r(`wfs-source:editing-not-supported`,`applyEdits() is not supported on WFSLayer`)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(e,t.signal)).filter(c)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),await this._queryEngine.executeQueryForSnapping(e,t.signal)}async queryAttributeBins(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(e,t.signal)}async refresh(e){return this._customParameters=e.customParameters,this._maxRecordCount=e.maxRecordCount,this._maxTotalRecordCount=e.maxTotalRecordCount,this._maxPageCount=e.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=a(e=>this._snapshotFeatures({signal:e})),this._snapshotTask.promise.then(e=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(e.features);for(let t of D(e))u.getLogger(C).warn(new s(`wfs-layer:refresh-warning`,t.message,t.details));e.errors?.length&&u.getLogger(C).warn(new s(`wfs-layer:refresh-error`,`Refresh completed with errors`,{errors:e.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(e){let t=e?.signal,r=this._maxTotalRecordCount,a=this._maxPageCount,s=this._supportsPagination&&a>1?await b(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:t}):void 0,c=[],l=[];if(s==null)try{c=await this._singleQuery(t)}catch(e){n(e)||l.push(e)}else{let e=Math.min(s,r),n=T(this,i(Math.ceil(e/this._maxRecordCount),1,a),t);await Promise.allSettled(Array.from({length:10}).map(()=>E(n,c,l)))}return o(t),{features:c,totalRecordCount:s,maxTotalRecordCount:r,maxPageCount:a,errors:l}}async _singleQuery(e){let t=Number.isFinite(this._maxRecordCount)&&this._maxRecordCount>0?this._maxRecordCount:void 0,n=await x(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,count:t,signal:e});return this._processGeoJSON(n,{signal:e})}async _pageQuery(e,t){let n=e*this._maxRecordCount,r=await x(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:n,count:this._maxRecordCount,signal:t});return this._processGeoJSON(r,{startIndex:n,signal:t})}_processGeoJSON(t,n){v(t,this._getFeatureSpatialReference.wkid);let{startIndex:r,signal:i}=n;o(i);let a=_(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!e(this._spatialReference,this._getFeatureSpatialReference))for(let e of a)e.geometry!=null&&(e.geometry=d(g(f(e.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let s=r??1;for(let e of a){let t={};y(this._fieldsIndex,t,e.attributes,!0),e.attributes=t,t[this._objectIdField]??(e.objectId=t[this._objectIdField]=s++)}return a}};function*T(e,t,n){for(let r=0;r<t;r++)yield e._pageQuery(r,n)}async function E(e,t,r){let i=e.next();for(;!i.done;){try{let e=await i.value;t.push(...e)}catch(e){n(e)||r.push(e)}i=e.next()}}function D(e){let t=[];return e.totalRecordCount!=null&&(e.features.length<e.totalRecordCount&&t.push({name:`wfs-layer:maxRecordCount-too-low`,message:`Could only fetch ${e.features.length} of ${e.totalRecordCount} in ${e.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:e.features.length,totalRecordCount:e.totalRecordCount}}),e.totalRecordCount>e.maxTotalRecordCount&&t.push({name:`wfs-layer:large-dataset`,message:`The number of ${e.totalRecordCount} features exceeds the maximum allowed of ${e.maxTotalRecordCount}.`,details:{recordCount:e.features.length,totalRecordCount:e.totalRecordCount,maxTotalRecordCount:e.maxTotalRecordCount}})),t}export{w as default};