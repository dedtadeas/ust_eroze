import{Am as e,CD as t,Kb as n,MC as r,OC as i,Pd as a,bD as o,kC as s,mT as c}from"./index-BqmCqmfp.js";var l=8388607,u=8388608,d=e=>e&l;function f(e,t){return((t?u:0)|e)>>>0}var p=class{generateSource(e){let t=[];for(let n=1;n<this.length;n++)t.push(`vec4 atom${n} = texture(${e.animationTexture}, (pointer + 0.5) / size);`),t.push(`pointer.x += 1.0;`);for(let e=0;e<this.ins;e++)t.push(`top--;`),t.push(`vec4 in${this.ins-e-1} = stack[top];`);for(let e=0;e<this.outs;e++)t.push(`vec4 out${e};`);let{microcode:n}=this;for(let e of n)t.push(e);for(let e=0;e<this.outs;e++)t.push(`stack[top] = out${e};`),t.push(`top++;`),t.push(`if (top >= ${k}) { top = ${k-1}; }`);return t}},m=128,h=class extends p{constructor(){super(...arguments),this.opcode=++m,this.length=1,this.ins=0,this.outs=0,this.microcode=[`break;`]}encode(){return[[this.opcode,0,0,0]]}},g=class extends p{constructor(){super(...arguments),this.opcode=++m,this.length=1,this.ins=0,this.outs=1,this.microcode=[`out0 = vec4(atom0.y, atom0.y, atom0.y, atom0.y);`]}encode(e){return[[this.opcode,e,0,0]]}},_=class extends p{constructor(){super(...arguments),this.opcode=++m,this.length=1,this.ins=0,this.outs=1,this.microcode=[`out0 = vec4(atom0.yzw, 0.0);`]}encode(e){return[[this.opcode,e[0]||0,e[1]||0,e[2]||0]]}},v=class extends p{constructor(){super(...arguments),this.opcode=++m,this.length=2,this.ins=0,this.outs=1,this.microcode=[`out0 = atom1;`]}encode(e){return[[this.opcode,0,0,0],e]}};function y(e){return[`float duration = clamp(${e.duration}, 0.05, 3600.0);`,`float startTimeOffset = ${e.startTimeOffset};`,`float repeatDelay = ${e.repeatDelay};`,`float timeOriginSelector = ${e.timeOriginSelector};`,`float repeatType = ${e.repeatType};`,`float easing = ${e.easing};`,`float playAnimation = ${e.playAnimation} * (1.0 - step(0.0, -${e.duration}));`,`float reverseAnimation = ${e.reverseAnimation};`,`float time = globalTime - (timeOriginSelector == 1.0 ? localTimeOrigin : 0.0);`,`time *= playAnimation;`,`time *= 1.0 - reverseAnimation * 2.0;`,`float period = duration + repeatDelay;`,`time += reverseAnimation == 1.0 ? (period - startTimeOffset - 0.001) : startTimeOffset + 0.001;`,`float omega = time / period;`,`float oi = floor(omega);`,`omega = repeatType == 1.0 || repeatType == 3.0 ? omega - oi : omega;`,`float of = omega * period;`,`of = (clamp(of, reverseAnimation * repeatDelay, period - (1.0 - reverseAnimation) * repeatDelay) - reverseAnimation * repeatDelay) / duration;`,`of = easing == 2.0 ? pow(of, 3.0) : of;`,`of = easing == 3.0 ? 1.0 - pow(1.0 - of, 3.0) : of;`,`of = easing == 4.0 ? of < 0.5 ? 4.0 * pow(of, 3.0) : 1.0 - pow(-2.0 * of + 2.0, 3.0) / 2.0 : of;`,`bool oscillate = repeatType == 3.0 && mod(oi, 2.0) == 1.0;`,`${e.out} = oscillate ? 1.0 - of : of;`]}var b={Linear:1,EaseIn:2,EaseOut:3,EaseInOut:4},x={Loop:1,None:2,Oscillate:3},S={Local:1,Global:2};function C(e){let t=b[e.easing],n=x[e.repeatType],r=S[e.timeOriginSelector];return[[e.duration,e.startTimeOffset,e.repeatDelay,r],[n,t,e.playAnimation,e.reverseAnimation]]}var w=class extends p{constructor(){super(...arguments),this.opcode=++m,this.length=10,this.ins=1,this.outs=1,this.microcode=[`vec2 fromTranslation = atom1.xy;`,`vec2 toTranslation = atom1.zw;`,`float fromRotation = atom2.x;`,`float toRotation = atom2.y;`,`float fromScale = atom2.z;`,`float toScale = atom2.w;`,`bool relativeTranslation = atom9.x == 1.0;`,`bool absoluteScale = atom9.y == 1.0;`,`vec2 translationMultiplier = relativeTranslation ? pixelDimensions : vec2(1.0, 1.0);`,`float scaleDivisor = absoluteScale ? pixelDimensions.y : 1.0;`,`float fTranslation;`,`{`,...y({duration:`atom3.x`,startTimeOffset:`atom3.y`,repeatDelay:`atom3.z`,timeOriginSelector:`atom3.w`,repeatType:`atom4.x`,easing:`atom4.y`,playAnimation:`atom4.z`,reverseAnimation:`atom4.w`,out:`fTranslation`}),`}`,`float fRotation;`,`{`,...y({duration:`atom5.x`,startTimeOffset:`atom5.y`,repeatDelay:`atom5.z`,timeOriginSelector:`atom5.w`,repeatType:`atom6.x`,easing:`atom6.y`,playAnimation:`atom6.z`,reverseAnimation:`atom6.w`,out:`fRotation`}),`}`,`float fScale;`,`{`,...y({duration:`atom7.x`,startTimeOffset:`atom7.y`,repeatDelay:`atom7.z`,timeOriginSelector:`atom7.w`,repeatType:`atom8.x`,easing:`atom8.y`,playAnimation:`atom8.z`,reverseAnimation:`atom8.w`,out:`fScale`}),`}`,`vec2 aTranslation = mix(fromTranslation, toTranslation, fTranslation);`,`float aRotation = mix(fromRotation, toRotation, fRotation);`,`float aScale = mix(fromScale, toScale, fScale);`,`vec2 pTranslation = in0.xy;`,`float pRotation = in0.z;`,`float pScale = in0.w;`,`aTranslation *= translationMultiplier;`,`aScale /= scaleDivisor;`,`float rotation = pRotation + aRotation;`,`float scale = pScale * aScale;`,`float sin1 = sin(pRotation);`,`float cos1 = cos(pRotation);`,`float s1 = pScale;`,`float x1 = pTranslation.x;`,`float y1 = pTranslation.y;`,`float x2 = aTranslation.x;`,`float y2 = aTranslation.y;`,`
    vec2 translation = vec2(
      cos1 * s1 * x2 - sin1 * s1 * y2 + x1,
      sin1 * s1 * x2 + cos1 * s1 * y2 + y1
    );
    `,`out0 = vec4(translation, rotation, scale);`]}encode(e){return[[this.opcode,0,0,0],[e.translation.from[0],e.translation.from[1],e.translation.to[0],e.translation.to[1]],[e.rotation.from,e.rotation.to,e.scale.from,e.scale.to],...C(e.translation.timing),...C(e.rotation.timing),...C(e.scale.timing),[e.relativeTranslation?1:0,e.absoluteScale?1:0,0,0]]}},T=class extends p{constructor(){super(...arguments),this.opcode=++m,this.length=7,this.ins=1,this.outs=1,this.microcode=[`float fromOpacity = atom0.y;`,`float toOpacity = atom0.z;`,`vec4 fromColor = atom1;`,`vec4 toColor = atom2;`,`float fColor;`,`{`,...y({duration:`atom3.x`,startTimeOffset:`atom3.y`,repeatDelay:`atom3.z`,timeOriginSelector:`atom3.w`,repeatType:`atom4.x`,easing:`atom4.y`,playAnimation:`atom4.z`,reverseAnimation:`atom4.w`,out:`fColor`}),`}`,`float fOpacity;`,`{`,...y({duration:`atom5.x`,startTimeOffset:`atom5.y`,repeatDelay:`atom5.z`,timeOriginSelector:`atom5.w`,repeatType:`atom6.x`,easing:`atom6.y`,playAnimation:`atom6.z`,reverseAnimation:`atom6.w`,out:`fOpacity`}),`}`,`vec4 aColor = mix(fromColor, toColor, fColor);`,`aColor.a *= mix(fromOpacity, toOpacity, fOpacity);`,`vec4 pColor = in0;`,`out0 = aColor * pColor;`]}encode(e){return[[this.opcode,e.opacity.from,e.opacity.to,0],[e.color.from[0],e.color.from[1],e.color.from[2],e.color.from[3]],[e.color.to[0],e.color.to[1],e.color.to[2],e.color.to[3]],...C(e.color.timing),...C(e.opacity.timing)]}},E=class extends p{constructor(){super(...arguments),this.opcode=++m,this.length=4,this.ins=1,this.outs=1,this.microcode=[`float fromShift = atom0.y;`,`float toShift = atom0.z;`,`float duration = atom1.x;`,`bool multiplyByLineLength = atom3.x == 1.0;`,`float fShift;`,`{`,...y({duration:`duration`,startTimeOffset:`atom1.y`,repeatDelay:`atom1.z`,timeOriginSelector:`atom1.w`,repeatType:`atom2.x`,easing:`atom2.y`,playAnimation:`atom2.z`,reverseAnimation:`atom2.w`,out:`fShift`}),`}`,`toShift *= multiplyByLineLength ? lineLength : 1.0;`,`float aShift = mix(fromShift, toShift, fShift);`,`vec4 pShift = in0;`,`out0 = mod(aShift + pShift, lineLength);`]}encode(e){return[[this.opcode,e.shift.from,e.shift.to,0],...C(e.shift.timing),[e.multiplyByLineLength?1:0,0,0,0]]}},D={scalar:new g,vector3:new _,vector4:new v,animatedTransform:new w,animatedColor:new T,animatedShift:new E,ret:new h},O=40,k=4;function A(e){let t=[];for(let n in t.push(`float globalTime = ${e.globalTime};`),t.push(`float localTimeOrigin = ${e.localTimeOrigin};`),t.push(`float lineLength = ${e.lineLength};`),t.push(`vec2 pointer = ${e.animationPointer};`),t.push(`vec2 size = ${e.animationTextureSize};`),t.push(`int top = 0;`),t.push(`vec4 stack[${k}];`),t.push(`for (int counter = 0; counter < ${O}; counter++) {`),t.push(`vec4 atom0 = texture(${e.animationTexture}, (pointer + 0.5) / size);`),t.push(`pointer.x += 1.0;`),t.push(`vec2 pixelDimensions = ${e.pixelDimensions};`),t.push(`if (false) {`),D){let r=D[n];t.push(`} else if (int(atom0.x) == ${r.opcode}) {`);for(let n of r.generateSource(e))t.push(n)}return t.push(`} // End if-else.`),t.push(`} // End for.`),t.push(`${e.out} = top > 0 ? stack[top - 1] : vec4(0.0);`),t.join(`
`)}var j={bitset:{isSDF:0,isMapAligned:1,scaleSymbolsProportionally:2,overrideOutlineColor:3,colorLocked:4,isStroke:5}},M={linear:0,rectangular:1,circular:2},N={isAbsolute:0,isDiscrete:1},P={isAlongLine:0,isAbsoluteSize:1,isDiscrete:2},F=class extends i{constructor(t){super(t),this.debugName=``,this._updatingHandles=new e,this._idToUpdatingState=new a}destroy(){this._updatingHandles=c(this._updatingHandles),this._idToUpdatingState.clear()}get updating(){let e=!this.destroyed&&(this._updatingHandles?.updating||Array.from(this._idToUpdatingState.values()).some(e=>e));if(o(`esri-2d-log-updating`)){let t=Array.from(this._idToUpdatingState.entries()).map(([e,t])=>`-> ${e}: ${t}`).join(`
`);console.log(`${this.debugName}: Updating: ${e}\n-> Handles: ${this._updatingHandles.updating}\n${t}`)}return e}addUpdateTracking(e,t){let r=n(()=>t.updating,t=>this._idToUpdatingState.set(e,t),{sync:!0});this.addHandles(r)}addPromise(e){return this._updatingHandles.addPromise(e)}};t([r({constructOnly:!0})],F.prototype,`debugName`,void 0),t([r({readOnly:!0})],F.prototype,`updating`,null),F=t([s(`esri.views.2d.layers.support.UpdateTracking2D`)],F);export{j as a,l as c,M as i,d as l,P as n,A as o,N as r,D as s,F as t,f as u};