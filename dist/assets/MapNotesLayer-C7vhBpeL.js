import{AE as e,Ad as t,CD as n,EE as r,Fu as i,Gd as a,Hv as o,Hx as s,I as c,IS as l,Id as u,Kd as d,Kv as f,La as p,MC as m,Mb as h,Q as g,Ra as _,SC as v,Sx as y,Uv as b,Ux as x,Vv as S,Wd as C,Wv as w,X as T,Yd as E,_E as D,ao as O,bg as k,hg as A,jC as j,kC as M,ka as N,oC as P,pg as F,rt as I,ug as L,yg as R}from"./index-BqmCqmfp.js";import{t as z}from"./GraphicsLayer-BGvt7_Y1.js";import{t as B}from"./objectIdUtils-CDGh-k0K.js";var V=Symbol(`isMapNotesGraphicOriginSymbol`),H,U=class extends p{get[(H=V,_)](){return this.layer}constructor(e,t){super(),this[H]=!0,this.type=`map-notes`,this.layer=e,this.sublayer=t}get id(){return`${this.layer.id}:__${this.sublayer.id}__`}};function W(e){return e.featureCollectionType===`markup`||e.layers.some(e=>e.layerDefinition.visibilityField!=null||!G(e))}function G({layerDefinition:e,featureSet:t}){let n=e.geometryType??t.geometryType;return Y.find(t=>n===t.geometryTypeJSON&&e.drawingInfo?.renderer?.symbol?.type===t.identifyingSymbol.type)}function K(){return new y({xmin:-180,ymin:-90,xmax:180,ymax:90})}var q=new t({name:`OBJECTID`,alias:`OBJECTID`,type:`oid`,nullable:!1,editable:!1}),J=new t({name:`title`,alias:`Title`,type:`string`,nullable:!0,editable:!0,length:255}),Y=[{geometryType:`polygon`,geometryTypeJSON:`esriGeometryPolygon`,id:`polygonLayer`,layerId:0,title:`Polygons`,identifyingSymbol:new d().toJSON()},{geometryType:`polyline`,geometryTypeJSON:`esriGeometryPolyline`,id:`polylineLayer`,layerId:1,title:`Polylines`,identifyingSymbol:new E().toJSON()},{geometryType:`multipoint`,geometryTypeJSON:`esriGeometryMultipoint`,id:`multipointLayer`,layerId:2,title:`Multipoints`,identifyingSymbol:new a().toJSON()},{geometryType:`point`,geometryTypeJSON:`esriGeometryPoint`,id:`pointLayer`,layerId:3,title:`Points`,identifyingSymbol:new a().toJSON()},{geometryType:`point`,geometryTypeJSON:`esriGeometryPoint`,id:`textLayer`,layerId:4,title:`Text`,identifyingSymbol:new C().toJSON()}],X=class extends N(T(I(g(O(h))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType=`notes`,this.legendEnabled=!1,this.listMode=`hide-children`,this.minScale=0,this.maxScale=0,this.spatialReference=x.WGS84,this.sublayers=new v(Y.map(e=>new Z({id:e.id,layerId:e.layerId,title:e.title,layer:this}))),this.title=`Map Notes`,this.type=`map-notes`,this.visibilityMode=`inherited`}readCapabilities(e,t,n){return{operations:{supportsMapNotesEditing:!W(t)&&n?.origin!==`portal-item`}}}readFeatureCollections(e,t,n){if(!W(t))return null;let r=t.layers.map(e=>{let t=new c;return t.read(e,n),t});return new v({items:r})}readLegacyfeatureCollectionJSON(t,n){return W(n)?e(n.featureCollection):null}get fullExtent(){let e=this.spatialReference,t=S();return this.sublayers==null?this.featureCollectionJSON?.layers.some(e=>e.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(n=>{let r=k(n.layerDefinition.extent,e).geometry;r!=null&&o(t,r,t)}):this.sublayers.forEach(({fullBounds:e})=>e==null?t:o(t,e,t),t),b(t,w)?k(K(),e).geometry:f(t,e)}readMinScale(e,t){for(let e of t.layers)if(e.layerDefinition.minScale!=null)return e.layerDefinition.minScale;return 0}readMaxScale(e,t){for(let e of t.layers)if(e.layerDefinition.maxScale!=null)return e.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer(`multipointLayer`)}get pointLayer(){return this._findSublayer(`pointLayer`)}get polygonLayer(){return this._findSublayer(`polygonLayer`)}get polylineLayer(){return this._findSublayer(`polylineLayer`)}readSpatialReference(e,t){return t.layers.length?x.fromJSON(t.layers[0].layerDefinition.spatialReference):x.WGS84}readSublayers(e,t,n){if(W(t))return null;let r=[],i=t.layers.reduce((e,t)=>Math.max(e,t.layerDefinition.id??-1),-1)+1;for(let e of t.layers){let{layerDefinition:t,featureSet:n}=e,a=t.id??i++,o=G(e);if(o!=null){let e=new Z({id:o.id,title:t.name,layerId:a,layer:this,graphics:n.features.map(({geometry:e,symbol:t,attributes:n,popupInfo:r})=>u.fromJSON({attributes:n,geometry:e,symbol:t,popupTemplate:r}))});r.push(e)}}return new v(r)}writeSublayers(e,t,n,i){let{minScale:a,maxScale:o}=this;if(e==null)return;let s=e.some(e=>e.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing)return void(s&&i?.messages?.push(new D(`map-notes-layer:editing-not-supported`,`New map notes cannot be added to this layer`)));let c=[],l=this.spatialReference.toJSON();e:for(let t of e)for(let e of t.graphics)if(e.geometry!=null){l=e.geometry.spatialReference.toJSON();break e}for(let t of Y){let n=e.find(e=>t.id===e.id);this._writeMapNoteSublayer(c,n,t,a,o,l,i)}r(`featureCollection.layers`,c,t)}get textLayer(){return this._findSublayer(`textLayer`)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[`Feature Collection`]},e)),Promise.resolve(this)}read(t,n){`featureCollection`in t&&(t=e(t),Object.assign(t,t.featureCollection)),super.read(t,n)}async beforeSave(){if(this.sublayers==null)return;let e=null,t=[];for(let n of this.sublayers)for(let r of n.graphics)if(r.geometry!=null){let n=r.geometry;e?l(n.spatialReference,e)||(F(n.spatialReference,e)||L()||await A(),r.geometry=R(n,e)):e=n.spatialReference,t.push(r)}let n=await i(t.map(e=>e.geometry));t.forEach((e,t)=>e.geometry=n[t])}_findSublayer(e){return this.sublayers==null?null:this.sublayers?.find(t=>t.id===e)??null}_writeMapNoteSublayer(t,n,r,i,a,o,s){let c=[];if(n!=null){for(let e of n.graphics)this._writeMapNote(c,e,r.geometryType,s);this._normalizeObjectIds(c,q),t.push({layerDefinition:{name:n.title,drawingInfo:{renderer:{type:`simple`,symbol:e(r.identifyingSymbol)}},id:n.layerId,geometryType:r.geometryTypeJSON,minScale:i,maxScale:a,objectIdField:`OBJECTID`,fields:[q.toJSON(),J.toJSON()],spatialReference:o},featureSet:{features:c,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,n,r){if(t==null)return;let{geometry:i,symbol:a,popupTemplate:o}=t;if(i==null)return;if(i.type!==n)return void r?.messages?.push(new j(`map-notes-layer:invalid-geometry-type`,`Geometry "${i.type}" cannot be saved in "${n}" layer`,{graphic:t}));if(a==null)return void r?.messages?.push(new j(`map-notes-layer:no-symbol`,`Skipping map notes with no symbol`,{graphic:t}));let s={attributes:{...t.attributes},geometry:i.toJSON(),symbol:a.toJSON()};o!=null&&(s.popupInfo=o.toJSON()),e.push(s)}_normalizeObjectIds(e,t){let n=t.name,r=B(n,e)+1,i=new Set;for(let t of e){t.attributes||={};let{attributes:e}=t;(e[n]==null||i.has(e[n]))&&(e[n]=r++),i.add(e[n])}}};n([m({readOnly:!0})],X.prototype,`capabilities`,void 0),n([s([`portal-item`,`web-map`],`capabilities`,[`layers`])],X.prototype,`readCapabilities`,null),n([m({readOnly:!0})],X.prototype,`featureCollections`,void 0),n([s([`web-map`,`portal-item`],`featureCollections`,[`layers`])],X.prototype,`readFeatureCollections`,null),n([m({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:`featureCollection`}}}}})],X.prototype,`featureCollectionJSON`,void 0),n([s([`web-map`,`portal-item`],`featureCollectionJSON`,[`featureCollection`])],X.prototype,`readLegacyfeatureCollectionJSON`,null),n([m({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],X.prototype,`featureCollectionType`,void 0),n([m({readOnly:!0})],X.prototype,`fullExtent`,null),n([m({readOnly:!0,json:{origins:{"web-map":{write:{target:`featureCollection.showLegend`,overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],X.prototype,`legendEnabled`,void 0),n([m({type:[`show`,`hide`,`hide-children`]})],X.prototype,`listMode`,void 0),n([m({type:Number,nonNullable:!0,json:{write:!1}})],X.prototype,`minScale`,void 0),n([s([`web-map`,`portal-item`],`minScale`,[`layers`])],X.prototype,`readMinScale`,null),n([m({type:Number,nonNullable:!0,json:{write:!1}})],X.prototype,`maxScale`,void 0),n([s([`web-map`,`portal-item`],`maxScale`,[`layers`])],X.prototype,`readMaxScale`,null),n([m({readOnly:!0})],X.prototype,`multipointLayer`,null),n([m({value:`ArcGISFeatureLayer`,type:[`ArcGISFeatureLayer`]})],X.prototype,`operationalLayerType`,void 0),n([m({readOnly:!0})],X.prototype,`pointLayer`,null),n([m({readOnly:!0})],X.prototype,`polygonLayer`,null),n([m({readOnly:!0})],X.prototype,`polylineLayer`,null),n([m({type:x})],X.prototype,`spatialReference`,void 0),n([s([`web-map`,`portal-item`],`spatialReference`,[`layers`])],X.prototype,`readSpatialReference`,null),n([m({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],X.prototype,`sublayers`,void 0),n([s(`web-map`,`sublayers`,[`layers`])],X.prototype,`readSublayers`,null),n([P(`web-map`,`sublayers`)],X.prototype,`writeSublayers`,null),n([m({readOnly:!0})],X.prototype,`textLayer`,null),n([m()],X.prototype,`title`,void 0),n([m({readOnly:!0,json:{read:!1}})],X.prototype,`type`,void 0),X=n([M(`esri.layers.MapNotesLayer`)],X);var Z=class extends z{constructor(e){super(e),this.visibilityMode=`inherited`}initialize(){for(let e of this.graphics)e.sourceLayer=this.layer;this.graphics.on(`after-add`,e=>{e.item.sourceLayer=this.layer,e.item.origin=this.graphicOrigin}),this.graphics.on(`after-remove`,e=>{e.item.sourceLayer=null,e.item.origin=null})}get fullExtent(){let e=this.layer?.spatialReference,t=this.fullBounds;return e?t==null?k(K(),e).geometry:f(t,e):null}get fullBounds(){let e=this.layer?.spatialReference;if(!e)return null;let t=S();return this.graphics.forEach(n=>{let r=n.geometry==null?null:k(n.geometry,e).geometry;r!=null&&o(t,r.type===`point`?r:r.extent,t)}),b(t,w)?null:t}get graphicOrigin(){return new U(this.layer,this)}get sublayers(){return this.graphics}};n([m({readOnly:!0})],Z.prototype,`fullExtent`,null),n([m({readOnly:!0})],Z.prototype,`fullBounds`,null),n([m({readOnly:!0})],Z.prototype,`graphicOrigin`,null),n([m({readOnly:!0})],Z.prototype,`sublayers`,null),n([m()],Z.prototype,`layer`,void 0),n([m()],Z.prototype,`layerId`,void 0),n([m({readOnly:!0})],Z.prototype,`visibilityMode`,void 0),Z=n([M(`esri.layers.MapNotesLayer.MapNotesSublayer`)],Z);var Q=X;export{Q as default};