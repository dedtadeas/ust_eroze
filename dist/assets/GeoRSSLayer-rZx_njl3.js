import{CD as e,Gd as t,Gi as n,Hx as r,Jd as i,Kd as a,MC as o,MS as s,Mb as c,Q as l,Qi as u,Qw as d,Sw as f,Sx as p,TE as m,X as h,Yd as g,Z as _,ao as v,kC as y,ka as b,lE as x,rt as S,ta as C,up as w}from"./index-BqmCqmfp.js";var T=[`atom`,`xml`],E={base:w,key:`type`,typeMap:{"simple-line":g},errorContext:`symbol`},D={base:w,key:`type`,typeMap:{"picture-marker":i,"simple-marker":t},errorContext:`symbol`},O={base:w,key:`type`,typeMap:{"simple-fill":a},errorContext:`symbol`},k=class extends b(_(S(l(h(v(c)))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType=`GeoRSS`,this.url=null,this.type=`geo-rss`}normalizeCtorArgs(e,t){return typeof e==`string`?{url:e,...t}:e}readFeatureCollections(e,t){return t.featureCollection.layers.forEach(e=>{let t=e.layerDefinition.drawingInfo.renderer.symbol;t&&t.type===`esriSFS`&&t.outline?.style.includes(`esriSFS`)&&(t.outline.style=`esriSLSSolid`)}),t.featureCollection.layers}get hasPoints(){return this._hasGeometry(`esriGeometryPoint`)}get hasPolylines(){return this._hasGeometry(`esriGeometryPolyline`)}get hasPolygons(){return this._hasGeometry(`esriGeometryPolygon`)}get title(){let e=this._get(`title`);return e&&this.originOf(`title`)!==`defaults`?e:this.url?x(this.url,T)||`GeoRSS`:e}set title(e){this._set(`title`,e)}load(e){let t=e==null?null:e.signal;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[`Map Service`,`Feature Service`,`Feature Collection`,`Scene Service`]},e).catch(d).then(()=>this._fetchService(t)).then(e=>{this.read(e,{origin:`service`})})),Promise.resolve(this)}async hasDataChanged(){let e=await this._fetchService();return this.read(e,{origin:`service`,ignoreDefaults:!0}),!0}async _fetchService(e){let t=this.spatialReference,{data:n}=await f(m.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:s(t)?void 0:t.wkid??JSON.stringify(t)},signal:e});return n}_hasGeometry(e){return this.featureCollections?.some(t=>t.featureSet?.geometryType===e&&t.featureSet.features?.length>0)??!1}};e([o()],k.prototype,`description`,void 0),e([o()],k.prototype,`featureCollections`,void 0),e([r(`service`,`featureCollections`,[`featureCollection.layers`])],k.prototype,`readFeatureCollections`,null),e([o({type:p,json:{name:`lookAtExtent`}})],k.prototype,`fullExtent`,void 0),e([o(u)],k.prototype,`id`,void 0),e([o(n)],k.prototype,`legendEnabled`,void 0),e([o({types:E,json:{write:!0}})],k.prototype,`lineSymbol`,void 0),e([o({type:[`show`,`hide`]})],k.prototype,`listMode`,void 0),e([o({types:D,json:{write:!0}})],k.prototype,`pointSymbol`,void 0),e([o({types:O,json:{write:!0}})],k.prototype,`polygonSymbol`,void 0),e([o({type:[`GeoRSS`]})],k.prototype,`operationalLayerType`,void 0),e([o(C)],k.prototype,`url`,void 0),e([o({json:{origins:{service:{read:{source:`name`,reader:e=>e||void 0}}}}})],k.prototype,`title`,null),e([o({readOnly:!0,json:{read:!1},value:`geo-rss`})],k.prototype,`type`,void 0),k=e([y(`esri.layers.GeoRSSLayer`)],k);var A=k;export{A as default};