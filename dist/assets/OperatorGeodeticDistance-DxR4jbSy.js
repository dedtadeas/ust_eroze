import{wD as e,xD as t}from"./index-BqmCqmfp.js";import"./SimpleGeometryCursor-CI9GIWKa.js";import{in as n,mn as r}from"./Point2D-UYEfE6HP.js";import"./Envelope2D-BNwQDrOT.js";import"./UnitFactory-J9WMNXdY.js";import"./Transformation2D-DVoPQwGC.js";import"./OperatorDefinitions-DQQu7-BK.js";import"./Distance2DCalculator-CXhBP-8I-Xmr2hQVp.js";import"./OperatorGeodeticDensifyByLength-TfdsZEIz.js";import{n as i,r as a}from"./GeodeticDistanceCalculator-Ce-woMPw-uveBDVYW.js";var o=class{getOperatorType(){return 10316}supportsCurves(){return!0}accelerateGeometry(e,t,n){return!1}canAccelerateGeometry(e){return!1}execute(e,t,n,r,i){return this.executeEx(e,t,n,r,i,null,null,NaN)}executeEx(o,s,c,l,u,d,f,p){let m={stack:[],error:void 0,hasError:!1};try{if(c.getCoordinateSystemType()===0&&n(``),r(o),r(s),o.isEmpty()||s.isEmpty())return NaN;Number.isNaN(p)&&(p=Number.MAX_VALUE);let e=t(m,new i(c,l,u,p,1),!1),h=a(),g=a(),_=e.calculate(o,s,h,g);return d&&d.outPoint.assign(h.outPoint),f&&f.outPoint.assign(g.outPoint),_}catch(e){m.error=e,m.hasError=!0}finally{e(m)}}};export{o as OperatorGeodeticDistance,a as makeOutput};