import{Ay as e,CD as t,Ea as n,Hb as r,Hx as i,Jb as a,MC as o,Ma as s,Mb as c,Na as l,Q as u,Qw as d,Rw as f,Vb as p,X as m,Yi as h,_E as g,ao as _,kC as v,rt as y,vE as b,zy as x}from"./index-BqmCqmfp.js";import{n as S}from"./SceneService-D87lJ-9p.js";import{i as C,n as w,r as T,t as E}from"./I3SLayerDefinitions-CBsRawSe.js";import"./originUtils-Xpg5-Q2D.js";import"./resourceUtils-CEABprin.js";import"./resourceUtils-Dtqy_ILo.js";import"./saveUtils-DsVVlvmj.js";import{a as D,p as O,y as k}from"./elevationInfoUtils-Df_uYU_q.js";import{t as A}from"./SceneModifications-DhsqkFfg.js";var j=class extends S(s(y(u(m(_(n(l(x(c))))))))){constructor(...e){super(...e),this.geometryType=`mesh`,this.operationalLayerType=`IntegratedMeshLayer`,this.type=`integrated-mesh`,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile=`mesh-pyramids`,this.modifications=null,this.path=null,this.definitionExpression=null,this._canReplaceTerrain=!1}initialize(){this.addHandles(r(()=>this.modifications,`after-changes`,()=>this.modifications=this.modifications,p))}normalizeCtorArgs(e,t){return typeof e==`string`?{url:e,...t}:e}readModifications(e,t,n){this._modificationsSource={url:f(e,n),context:n}}set elevationInfo(e){e!=null&&e.mode!==`absolute-height`||this._set(`elevationInfo`,e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){let t=e?.signal;try{await this.loadFromPortal({supportedTypes:[`Scene Service`]},e)}catch(e){d(e)}if(await this._fetchService(t),this._modificationsSource!=null){let t=await A.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin(`modifications`,t,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:`integrated-mesh`},e)}async save(){return this._debouncedSaveOperations(0,{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:`integrated-mesh`})}validateLayer(e){if(e.layerType&&e.layerType!==`IntegratedMesh`)throw new g(`integrated-mesh-layer:layer-type-not-supported`,`IntegratedMeshLayer does not support this layer type`,{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new g(`layer:service-version-not-supported`,`Service version is not supported.`,{serviceVersion:this.version.versionString,supportedVersions:`1.x`});if(this.version.major>1)throw new g(`layer:service-version-too-new`,`Service version is too new.`,{serviceVersion:this.version.versionString,supportedVersions:`1.x`})}_getTypeKeywords(){return[`IntegratedMeshLayer`]}_validateElevationInfo(e){let t=`Integrated mesh layers`;O(b.getLogger(this),k(t,`absolute-height`,e)),O(b.getLogger(this),D(t,e))}get replacesTerrain(){return this._canReplaceTerrain&&this._isUsedAsGroundLayer}get _isUsedAsGroundLayer(){return a(this.parent)}};t([o({type:String,readOnly:!0})],j.prototype,`geometryType`,void 0),t([o({type:[`show`,`hide`]})],j.prototype,`listMode`,void 0),t([o({type:[`IntegratedMeshLayer`]})],j.prototype,`operationalLayerType`,void 0),t([o({json:{read:!1},readOnly:!0})],j.prototype,`type`,void 0),t([o({type:T,readOnly:!0,clonable:!1})],j.prototype,`nodePages`,void 0),t([o({type:[E],readOnly:!0,clonable:!1})],j.prototype,`materialDefinitions`,void 0),t([o({type:[C],readOnly:!0,clonable:!1})],j.prototype,`textureSetDefinitions`,void 0),t([o({type:[w],readOnly:!0,clonable:!1})],j.prototype,`geometryDefinitions`,void 0),t([o({readOnly:!0})],j.prototype,`serviceUpdateTimeStamp`,void 0),t([o({type:A,clonable:e=>e?.clone()??e}),e({origins:[`web-scene`,`portal-item`],type:`resource`,prefix:`modifications`})],j.prototype,`modifications`,void 0),t([i([`web-scene`,`portal-item`],`modifications`)],j.prototype,`readModifications`,null),t([o(h)],j.prototype,`elevationInfo`,null),t([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],j.prototype,`path`,void 0),t([o()],j.prototype,`replacesTerrain`,null),t([o()],j.prototype,`_isUsedAsGroundLayer`,null),t([o()],j.prototype,`_canReplaceTerrain`,void 0),j=t([v(`esri.layers.IntegratedMeshLayer`)],j);var M=j;export{M as default};