import{$m as e,IS as t,NS as n,Sw as r,Un as i,Yp as a,Zw as o,_E as s,em as c,fC as l,jd as u,mx as d,vE as f}from"./index-BqmCqmfp.js";import"./memoryEstimations-O7VgDRVG.js";import"./OptimizedFeature-Dx4_lHip.js";import"./OptimizedGeometry-f3I9Z6C1.js";import"./OptimizedFeatureSet-DlHqIhoP.js";import{C as p,_ as m,b as h,x as g,y as _}from"./featureConversionUtils-7vyVIZ6j.js";import"./WhereClause-h6PJ6gjs.js";import"./WhereClauseCache-BuGDygNN.js";import"./PooledRBush-DKfG2PAm.js";import"./QueryEngineCapabilities-DPTJ40n4.js";import{n as v,r as y,t as b}from"./clientSideDefaults-CpyaF_rm.js";import"./generateRendererUtils-BgK3c0Qk.js";import"./utils-BcHO3hev.js";import"./BoundsStore-C1JqKB7k.js";import"./timeSupport-DheFkvFH.js";import"./optimizedFeatureQueryEngineAdapter-8HKICOsa.js";import{t as x}from"./FeatureStore-qdIVrmQw.js";import{t as S}from"./QueryEngine-DjyUd3-5.js";import{c as C,l as w}from"./queryUtils-BA7HiGeg.js";import"./quantizationUtils-C5shine1.js";import"./utils-DD1PtgG7.js";import"./utils-C2AeUOnb.js";import"./SnappingCandidate-B_1Ysqys.js";import"./FixedIntervalBinParameters-BO-nZFQ3.js";import"./date-DKxAu4UK.js";import{n as T,r as E,t as D}from"./geojson-HXfjj8c5.js";import{a as O,i as k,n as A,o as j,r as M,t as N}from"./sourceUtils-DtMoGpXR.js";var P={hasAttachments:!1,capabilities:`query, editing, create, delete, update`,useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsQueryAttachmentOrderByFields:!1,supportsQueryAttachmentWithTypeWildcard:!1,supportsQueryBins:!0,supportsQueryPivot:!1,supportsQueryWithCacheHint:!0,supportsQueryWithDistance:!0,supportsQueryWithResultType:!0,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0},queryBinsCapabilities:A},F=class{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{let t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};let r=[],[o]=await Promise.all([e.url?this._fetch(t?.signal):null,this._checkProjection(e.spatialReference)]),l=T(o,{geometryType:e.geometryType}),d=e.fields||l.fields||[],f=e.hasZ==null?l.hasZ:e.hasZ,p=l.geometryType,m=e.objectIdField||l.objectIdFieldName||`__OBJECTID`,h=e.spatialReference||n,g=e.timeInfo;d===l.fields&&l.unknownFields.length>0&&r.push({name:`geojson-layer:unknown-field-types`,message:`Some fields types couldn't be inferred from the features and were dropped`,details:{unknownFields:l.unknownFields}});let _=new i(d),C=_.get(m);C?(C.type!==`esriFieldTypeString`&&(C.type=`esriFieldTypeOID`),C.editable=!1,C.nullable=!1,m=C.name):(C={alias:m,name:m,type:l.objectIdFieldType===`string`?`esriFieldTypeString`:`esriFieldTypeOID`,editable:!1,nullable:!1},d.unshift(C));let w={};for(let e of d){if(e.name??=e.alias,e.alias??=e.name,!e.name)throw new s(`geojson-layer:invalid-field-name`,`field name is missing`,{field:e});if(!u.jsonValues.includes(e.type))throw new s(`geojson-layer:invalid-field-type`,`invalid type for field "${e.name}"`,{field:e});if(e.name!==C.name){let t=a(e);t!==void 0&&(w[e.name]=t)}e.length??=c(e)}if(g){if(g.startTimeField){let e=_.get(g.startTimeField);e?(g.startTimeField=e.name,e.type=`esriFieldTypeDate`):g.startTimeField=null}if(g.endTimeField){let e=_.get(g.endTimeField);e?(g.endTimeField=e.name,e.type=`esriFieldTypeDate`):g.endTimeField=null}if(g.trackIdField){let e=_.get(g.trackIdField);e?g.trackIdField=e.name:(g.trackIdField=null,r.push({name:`geojson-layer:invalid-timeInfo-trackIdField`,message:`trackIdField is missing`,details:{timeInfo:g}}))}g.startTimeField||g.endTimeField||(r.push({name:`geojson-layer:invalid-timeInfo`,message:`startTimeField and endTimeField are missing`,details:{timeInfo:g}}),g=null)}let E=p?y(p):void 0,D=_.dateFields.length?{timeZoneIANA:`UTC`}:null,O={warnings:r,featureErrors:[],layerDefinition:{...P,drawingInfo:E??void 0,templates:v(w),extent:void 0,geometryType:p,objectIdField:m,fields:d,hasZ:!!f,timeInfo:g,dateFieldsTimeReference:D}},k={type:`object-id`,fieldName:m};this._queryEngine=new S({fieldsIndex:i.fromLayerJSON({fields:d,timeInfo:g,dateFieldsTimeReference:D}),geometryType:p,hasM:!1,hasZ:f,featureIdInfo:k,spatialReference:h,timeInfo:g,featureStore:new x({geometryType:p,hasM:!1,hasZ:f})});let A=this._queryEngine.fieldsIndex.requiredFields.indexOf(C);A>-1&&this._queryEngine.fieldsIndex.requiredFields.splice(A,1),this._createDefaultAttributes=b(w,m);let j=this._createFeatures(o);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,j);let M=this._normalizeFeatures(j,O.featureErrors);this._queryEngine.featureStore.addMany(M);let{fullExtent:N,timeExtent:F}=await this._queryEngine.fetchRecomputedExtents();if(O.layerDefinition.extent=N,F){let{start:e,end:t}=F;O.layerDefinition.timeInfo.timeExtent=[e,t]}return O}async applyEdits(e){let{spatialReference:t,geometryType:n}=this._queryEngine;return await Promise.all([N(t,n),C(e.adds,t),C(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),await this._queryEngine.executeQueryForSnapping(e,t.signal)}async queryAttributeBins(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=l(this._snapshotFeatures),this._snapshotTask.promise.then(e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);let t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)},e=>{this._queryEngine.featureStore.clear(),o(e)||f.getLogger(`esri.layers.GeoJSONLayer`).error(new s(`geojson-layer:refresh`,`An error occurred during refresh`,{error:e}))}),await this._waitSnapshotComplete();let{fullExtent:t,timeExtent:n}=await this._queryEngine.fetchRecomputedExtents();return{extent:t,timeExtent:n}}_createFeatures(e){if(e==null)return[];let{geometryType:r,hasZ:i,objectIdField:a}=this._queryEngine,o=E(e,{geometryType:r,hasZ:i,objectIdField:a});if(!t(this._queryEngine.spatialReference,n))for(let e of o)e.geometry!=null&&(e.geometry=p(w(m(e.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),n,this._queryEngine.spatialReference)));return o}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(e){let{url:t,customParameters:n}=this._loadOptions,i=(await r(t??``,{responseType:`json`,query:{...n},signal:e})).data;return D(i),i}_normalizeFeatures(e,t){let{objectIdField:n,fieldsIndex:r}=this._queryEngine,i=[];for(let a of e){let e=this._createDefaultAttributes(),o=M(r,e,a.attributes,!0);o?t?.push(o):(this._assignObjectId(e,a.attributes,!0),a.attributes=e,a.objectId=e[n],i.push(a))}return i}async _applyEdits(e){let{adds:t,updates:n,deletes:r}=e,i={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t?.length&&this._applyAddEdits(i,t),n?.length&&this._applyUpdateEdits(i,n),r?.length){for(let e of r)i.deleteResults.push(k(e));this._queryEngine.featureStore.removeManyById(r)}let{fullExtent:a,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();return{extent:a,timeExtent:o,featureEditResults:i}}_applyAddEdits(t,n){let{addResults:r}=t,{geometryType:i,hasM:a,hasZ:o,objectIdField:s,spatialReference:c,featureStore:l,fieldsIndex:u}=this._queryEngine,d=[],f={type:`object-id`,fieldName:s};for(let a of n){if(a.geometry&&i!==e(a.geometry)){r.push(j(`Incorrect geometry type.`));continue}let n=this._createDefaultAttributes(),o=M(u,n,a.attributes);if(o)r.push(o);else{if(this._assignObjectId(n,a.attributes),a.attributes=n,a.uid!=null){let e=a.attributes[s];t.uidToObjectId[a.uid]=e}if(a.geometry!=null){let e=a.geometry.spatialReference??c;a.geometry=w(O(a.geometry,e),e,c)}d.push(a),r.push(k(a.attributes[s]))}}l.addMany(h([],d,i,o,a,f))}_applyUpdateEdits({updateResults:t},n){let{geometryType:r,hasM:i,hasZ:a,objectIdField:o,spatialReference:s,featureStore:c,fieldsIndex:l}=this._queryEngine,u={type:`object-id`,fieldName:o};for(let d of n){let{attributes:n,geometry:f}=d,p=n?.[o];if(p==null){t.push(j(`Identifier field ${o} missing`));continue}if(!c.has(p)){t.push(j(`Feature with object id ${p} missing`));continue}let m=g(c.getFeature(p),r,a,i);if(f!=null){if(r!==e(f)){t.push(j(`Incorrect geometry type.`));continue}let n=f.spatialReference??s;m.geometry=w(O(f,n),n,s)}if(n){let e=M(l,m.attributes,n);if(e){t.push(e);continue}}c.add(_(m,r,a,i,u)),t.push(k(p))}}_createObjectIdGenerator(e,t){let n=e.fieldsIndex.get(e.objectIdField);if(n.type===`esriFieldTypeString`)return()=>n.name+`-`+Date.now().toString(16);let r=-1/0;for(let e of t)e.objectId&&(r=Math.max(r,e.objectId));return r=Math.max(0,r)+1,()=>r++}_assignObjectId(e,t,n=!1){let r=this._queryEngine.objectIdField;e[r]=n&&r in t?t[r]:this._objectIdGenerator()}async _checkProjection(e){try{await C(n,e)}catch{throw new s(`geojson-layer`,`Projection not supported`)}}};export{F as default};