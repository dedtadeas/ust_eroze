import{Ay as e,CD as t,Ea as n,Hb as r,Hx as i,Jb as a,MC as o,Ma as s,Mb as c,Na as l,Q as u,Qw as d,Rw as f,Sw as p,Sx as m,Ux as h,Vb as g,X as _,Yi as v,_E as y,ao as b,kC as x,rt as S,ta as C,vE as w,vx as T}from"./index-BqmCqmfp.js";import{a as E,p as D,y as O}from"./elevationInfoUtils-Df_uYU_q.js";import{t as k}from"./tiles3DUtils-D7dM2RmX.js";import{t as A}from"./SceneModifications-DhsqkFfg.js";var j=class extends s(S(u(_(b(n(l(c))))))){readModifications(e,t,n){this._modificationsSource={url:f(e,n),context:n}}initialize(){this.addHandles(r(()=>this.modifications,`after-changes`,()=>this.modifications=this.modifications,g))}constructor(e){super(e),this.operationalLayerType=`IntegratedMesh3DTilesLayer`,this.modifications=null,this._modificationsSource=null,this.spatialReference=new h({wkid:4326,vcsWkid:115700}),this.fullExtent=new m(-180,-90,180,90,this.spatialReference),this.url=null,this.type=`integrated-mesh-3dtiles`,this.path=null,this.minScale=0,this.maxScale=0,this._rootTilesetJSON=null,this._rootTileset=null,this._key=null,this._session=null,this._rootRequestPromise=null}set elevationInfo(e){e!=null&&e.mode!==`absolute-height`||this._set(`elevationInfo`,e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}get rootTilesetJSON(){return this._rootTilesetJSON}get rootTileset(){return this._rootTileset}get key(){return this._key}get session(){return this._session}_findSessionParameter(e){let t=[e];for(;t?.length>0;){let e=t.pop();if(!e)return;for(let[n,r]of Object.entries(e)){if(n===`uri`)try{let e=new URL(`https://tmp`+r).searchParams.get(`session`);if(e)return e}catch{}typeof r==`object`&&r&&t.push(r)}}return null}async requestRootAndSession(e){let t=(e,t)=>new y(`3dtiles-init:`+e,t);return this._rootRequestPromise||=new Promise((n,r)=>{this.url||r(t(`url-missing`,`Layer url missing`)),this._key=this.customParameters?this.customParameters.key:null,new Promise((e,n)=>{if(this.replacesTerrain&&!this._key){let r=this.portalItem?.portal||this.parent?.portalItem?.portal||T.getDefault();r.signIn().then(()=>{r.g3dTilesEnabled?p(r.restUrl+`/portals/self/modules/g3dtiles`,{responseType:`json`,query:{f:`json`}}).then(t=>{this._key=t.data.keyString,e()},()=>n(t(`g3dtiles-key-error`,`Error fetching Google 3D Tiles key from portal`))):n(t(`g3dTilesEnabled-false`,`Google 3D Tiles are not enabled on Portal `+r.url))},()=>n(t(`sign-in-failed`,`Error signing in to Portal`)))}else e()}).then(()=>{p(this.url,{query:this._key?{key:this._key,token:this.apiKey}:{token:this.apiKey},responseType:`array-buffer`,signal:e}).then(e=>{try{this._rootTilesetJSON=JSON.parse(new TextDecoder().decode(e.data))}catch(e){r(t(`root-parse-failed`,`Error parsing root tile, details: `+e));return}this._rootTilesetJSON?(this._session=this._findSessionParameter(this._rootTilesetJSON),this._rootTileset=e.data,this.fullExtent=k(this._rootTilesetJSON),n(),this._rootRequestPromise=null):r(t(`root-is-null`,`Root tile is null.`))},e=>{d(e),r(t(`root-load-failed`,`Error loading root tile`)),this._rootRequestPromise=null,w.getLogger(`IntegratedMesh3DTilesLayer`).error(`Layer loading failed`,e)})},e=>r(e))}),this._rootRequestPromise}async _doLoad(e){let t=e==null?null:e.signal;if(this._isUsedAsGroundLayer)throw new y(`3dtiles-init:not-supported-in-groundlayers`,`Layer is not supported in basemap.`);try{await this.loadFromPortal({supportedTypes:[`3DTiles Service`],validateItem:e=>{if(e.typeKeywords?.includes(`IntegratedMesh`))return!0;throw new y(`portal:invalid-layer-item-type`,"Invalid layer item, expected '${expectedType}' ",{expectedType:`3DTiles Service containing IntegratedMesh`})}},e)}catch(e){d(e)}if(this._modificationsSource!=null){let t=await A.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin(`modifications`,t,this._modificationsSource.context.origin),this._modificationsSource=null}await this.requestRootAndSession(t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}get hasAttributionData(){return!1}async fetchAttributionData(){return{}}_validateElevationInfo(e){let t=`Integrated mesh 3d tiles layers`;D(w.getLogger(this),O(t,`absolute-height`,e)),D(w.getLogger(this),E(t,e))}get replacesTerrain(){return!1}get _isUsedAsGroundLayer(){return a(this.parent)}get hasGoogleUrl(){return!!this.url?.match(/.+\.googleapis.com/)}};t([o({type:[`IntegratedMesh3DTilesLayer`]})],j.prototype,`operationalLayerType`,void 0),t([o({type:A,clonable:e=>e.clone()}),e({origins:[`web-scene`,`portal-item`],type:`resource`,prefix:`modifications`})],j.prototype,`modifications`,void 0),t([i([`web-scene`,`portal-item`],`modifications`)],j.prototype,`readModifications`,null),t([o({type:h})],j.prototype,`spatialReference`,void 0),t([o({type:m})],j.prototype,`fullExtent`,void 0),t([o(v)],j.prototype,`elevationInfo`,null),t([o({type:[`show`,`hide`]})],j.prototype,`listMode`,void 0),t([o(C)],j.prototype,`url`,void 0),t([o({readOnly:!0})],j.prototype,`type`,void 0),t([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],j.prototype,`path`,void 0),t([o({type:Number,json:{name:`layerDefinition.minScale`,write:!0,origins:{service:{read:!1,write:!1}}}})],j.prototype,`minScale`,void 0),t([o({type:Number,json:{name:`layerDefinition.maxScale`,write:!0,origins:{service:{read:!1,write:!1}}}})],j.prototype,`maxScale`,void 0),t([o()],j.prototype,`replacesTerrain`,null),t([o()],j.prototype,`_isUsedAsGroundLayer`,null),t([o()],j.prototype,`hasGoogleUrl`,null),j=t([x(`esri.layers.IntegratedMesh3DTilesLayer`)],j);var M=j;export{M as default};