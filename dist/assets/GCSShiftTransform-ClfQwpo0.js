import{Ax as e,CD as t,Hx as n,Hy as r,MC as i,Sx as a,kC as o,oC as s,vC as c}from"./index-BqmCqmfp.js";var l=class extends c{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};t([i()],l.prototype,`affectsPixelSize`,null),t([i({json:{write:!0}})],l.prototype,`spatialReference`,void 0),l=t([o(`esri.layers.support.rasterTransforms.BaseRasterTransform`)],l);var u;function d(e,t,n){let{x:r,y:i}=t;if(n<2)return{x:e[0]+r*e[2]+i*e[4],y:e[1]+r*e[3]+i*e[5]};if(n===2){let t=r*r,n=i*i,a=r*i;return{x:e[0]+r*e[2]+i*e[4]+t*e[6]+a*e[8]+n*e[10],y:e[1]+r*e[3]+i*e[5]+t*e[7]+a*e[9]+n*e[11]}}let a=r*r,o=i*i,s=r*i,c=a*r,l=a*i,u=r*o,d=i*o;return{x:e[0]+r*e[2]+i*e[4]+a*e[6]+s*e[8]+o*e[10]+c*e[12]+l*e[14]+u*e[16]+d*e[18],y:e[1]+r*e[3]+i*e[5]+a*e[7]+s*e[9]+o*e[11]+c*e[13]+l*e[15]+u*e[17]+d*e[19]}}function f(e,t,n){let{xmin:r,ymin:i,xmax:o,ymax:s,spatialReference:c}=t,l=[];if(n<2)l.push({x:r,y:s}),l.push({x:o,y:s}),l.push({x:r,y:i}),l.push({x:o,y:i});else{let e=10;for(let t=0;t<e;t++)l.push({x:r,y:i+(s-i)*t/(e-1)}),l.push({x:o,y:i+(s-i)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:r+(o-r)*t/e,y:i}),l.push({x:r+(o-r)*t/e,y:s})}l=l.map(t=>d(e,t,n));let u=l.map(e=>e.x),f=l.map(e=>e.y);return new a({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,f),ymax:Math.max.apply(null,f),spatialReference:c})}function p(e){let[t,n,r,i,a,o]=e,s=r*o-a*i,c=a*i-r*o;return[(a*n-t*o)/s,(r*n-t*i)/c,o/s,i/c,-a/s,-r/c]}var m=u=class extends l{constructor(){super(...arguments),this.polynomialOrder=1,this.type=`polynomial`}readForwardCoefficients(e,t){let{coeffX:n,coeffY:r}=t;if(!n?.length||!r?.length||n.length!==r.length)return null;let i=[];for(let e=0;e<n.length;e++)i.push(n[e]),i.push(r[e]);return i}writeForwardCoefficients(e,t,n){let r=[],i=[];for(let t=0;t<e?.length;t++)t%2==0?r.push(e[t]):i.push(e[t]);t.coeffX=r,t.coeffY=i}get inverseCoefficients(){let e=this._get(`inverseCoefficients`),t=this._get(`forwardCoefficients`);return!e&&t&&this.polynomialOrder<2&&(e=p(t)),e}set inverseCoefficients(e){this._set(`inverseCoefficients`,e)}readInverseCoefficients(e,t){let{inverseCoeffX:n,inverseCoeffY:r}=t;if(!n?.length||!r?.length||n.length!==r.length)return null;let i=[];for(let e=0;e<n.length;e++)i.push(n[e]),i.push(r[e]);return i}writeInverseCoefficients(e,t,n){let r=[],i=[];for(let t=0;t<e?.length;t++)t%2==0?r.push(e[t]):i.push(e[t]);t.inverseCoeffX=r,t.inverseCoeffY=i}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if(t.type===`point`){let n=d(this.forwardCoefficients,t,this.polynomialOrder);return new e({x:n.x,y:n.y,spatialReference:t.spatialReference})}return f(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if(t.type===`point`){let n=d(this.inverseCoefficients,t,this.polynomialOrder);return new e({x:n.x,y:n.y,spatialReference:t.spatialReference})}return f(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new u({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};t([i({json:{write:!0}})],m.prototype,`polynomialOrder`,void 0),t([i()],m.prototype,`forwardCoefficients`,void 0),t([n(`forwardCoefficients`,[`coeffX`,`coeffY`])],m.prototype,`readForwardCoefficients`,null),t([s(`forwardCoefficients`)],m.prototype,`writeForwardCoefficients`,null),t([i({json:{write:!0}})],m.prototype,`inverseCoefficients`,null),t([n(`inverseCoefficients`,[`inverseCoeffX`,`inverseCoeffY`])],m.prototype,`readInverseCoefficients`,null),t([s(`inverseCoefficients`)],m.prototype,`writeInverseCoefficients`,null),t([i()],m.prototype,`affectsPixelSize`,null),t([r({PolynomialXform:`polynomial`})],m.prototype,`type`,void 0),m=u=t([o(`esri.layers.support.rasterTransforms.PolynomialTransform`)],m);var h,g=h=class extends l{constructor(){super(...arguments),this.type=`gcs-shift`,this.tolerance=1e-8}forwardTransform(e){return(e=e.clone()).type===`point`?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return(e=e.clone()).type===`point`?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new h({tolerance:this.tolerance})}};t([r({GCSShiftXform:`gcs-shift`})],g.prototype,`type`,void 0),t([i()],g.prototype,`tolerance`,void 0),g=h=t([o(`esri.layers.support.rasterTransforms.GCSShiftTransform`)],g);export{m as n,l as r,g as t};