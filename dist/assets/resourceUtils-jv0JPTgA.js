import{bD as e}from"./index-BqmCqmfp.js";var t=class{constructor(e){this.data=e,this.type=`encoded-mesh-texture`,this.encoding=`image/ktx2`}};function n(e){return e?.type===`encoded-mesh-texture`}async function r(e){let t=await new Blob([e]).text();return JSON.parse(t)}async function i(n,r){if(r===`image/ktx2`)return new t(n);let i=new Blob([n],{type:r}),a=URL.createObjectURL(i);switch(r){case`image/jpeg`:a+=`#.jpg`;break;case`image/png`:a+=`#.png`}let o=new Image;if(e(`esri-iPhone`))return new Promise((e,t)=>{let n=()=>{i(),e(o)},r=e=>{i(),t(e)},i=()=>{URL.revokeObjectURL(a),o.removeEventListener(`load`,n),o.removeEventListener(`error`,r)};o.addEventListener(`load`,n),o.addEventListener(`error`,r),o.src=a});try{o.src=a,await o.decode()}catch{console.warn(`Failed decoding HTMLImageElement`)}return URL.revokeObjectURL(a),o}export{n as i,r as n,i as r,t};