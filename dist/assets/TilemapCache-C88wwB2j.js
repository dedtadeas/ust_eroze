import{AE as e,CD as t,IT as n,Kb as r,MC as i,Mm as a,OC as o,QC as s,Sw as c,Wb as l,XE as u,Xw as d,Zw as f,_E as p,aT as m,aw as h,kC as g,oT as _,qn as v,vT as y}from"./index-BqmCqmfp.js";import{r as b}from"./memoryEstimations-O7VgDRVG.js";function x(e,t=!1){return e<=1024?t?Array(e).fill(0):Array(e):new Uint32Array(e)}var S=class t{constructor(t){T(t);let{location:n,data:r}=t;this.location=Object.freeze(e(n));let i=this.location.width,a=this.location.height,o=!0,s=!0,c=Math.ceil(i*a/32),l=x(c),u=0;for(let e=0;e<r.length;e++){let t=e%32;r[e]?(s=!1,l[u]|=1<<t):o=!1,t===31&&++u}s?(this._availability=`unavailable`,this.byteSize=40):o?(this._availability=`available`,this.byteSize=40):(this._availability=l,this.byteSize=40+b(l))}getAvailability(e,t){if(this._availability===`unavailable`||this._availability===`available`)return this._availability;let n=(e-this.location.top)*this.location.width+(t-this.location.left),r=n%32,i=n>>5,a=this._availability;return i<0||i>a.length?`unknown`:a[i]&1<<r?`available`:`unavailable`}static fromDefinition(e,n){let r=e.service.request||c,{row:i,col:a,width:o,height:s}=e,l={query:{f:`json`}};return n=n?{...l,...n}:l,r(w(e),n).then(e=>e.data).catch(e=>{if(e?.details?.httpStatus===422)return{location:{top:i,left:a,width:o,height:s},valid:!0,data:Array(o*s).fill(0)};throw e}).then(e=>{if(e.location&&(e.location.top!==i||e.location.left!==a||e.location.width!==o||e.location.height!==s))throw new p(`tilemap:location-mismatch`,`Tilemap response for different location than requested`,{response:e,definition:{top:i,left:a,width:o,height:s}});return t.fromJSON(e)})}static fromJSON(e){return Object.freeze(new t(e))}};function C(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}function w(e){let t;if(e.service.tileServers?.length){let n=e.service.tileServers;t=`${n&&n.length?n[e.row%n.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}else t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;let n=e.service.query;return n&&(t=`${t}?${n}`),t}function T(e){if(!e?.location)throw new p(`tilemap:missing-location`,`Location missing from tilemap response`);if(!1===e.valid)throw new p(`tilemap:invalid`,`Tilemap response was marked as invalid`);if(!e.data)throw new p(`tilemap:missing-data`,`Data missing from tilemap response`);if(!Array.isArray(e.data))throw new p(`tilemap:data-mismatch`,`Data must be an array of numbers`);if(e.data.length!==e.location.width*e.location.height)throw new p(`tilemap:data-mismatch`,`Number of data items does not match width/height of tilemap`)}var E;function D(e,t,n){return new p(`tile-map:tile-unavailable`,`Tile is not available`,{level:e,row:t,col:n})}var O=class extends o{static{E=this}constructor(e){super(e),this._pendingTilemapRequests={},this.request=c,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new v(2097152),this.addHandles(r(()=>{let{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]},()=>this._initializeTilemapDefinition(),l))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,n){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return`unavailable`;let r=this._tilemapFromCache(e,t,n,this._tmpTilemapDefinition);return r?r.getAvailability(t,n):`unknown`}fetchAvailability(e,t,n,r){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(D(e,t,n)):this._fetchTilemap(e,t,n,r).catch(e=>e).then(r=>{if(r instanceof S){let i=r.getAvailability(t,n);if(i===`unavailable`)throw D(e,t,n);return i}if(f(r))throw r;return`unknown`})}fetchAvailabilityUpsample(e,t,n,r,i){r.level=e,r.row=t,r.col=n;let a=this.layer.tileInfo;a.updateTileInfo(r);let o=this.fetchAvailability(e,t,n,i).catch(e=>{if(f(e))throw e;if(a.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r,i);throw e});return this._fetchAvailabilityUpsamplePrefetch(e,t,n,i,o),o}async _fetchAvailabilityUpsamplePrefetch(e,t,n,r,i){if(!this._prefetchingEnabled)return;let o=`prefetch-${e}-${t}-${n}`;if(this.hasHandles(o))return;let c=new AbortController;i.then(()=>c.abort(),()=>c.abort());let l=!1,u=y(()=>{l||(l=!0,c.abort())});if(this.addHandles(u,o),await s(10,c.signal).catch(()=>{}),l||(l=!0,this.removeHandles(o)),d(c))return;let f=new a(e,t,n),p={...r,signal:c.signal},m=this.layer.tileInfo;for(let e=0;E._prefetches.length<E._maxPrefetch&&m.upsampleTile(f);++e){let e=this.fetchAvailability(f.level,f.row,f.col,p);E._prefetches.push(e);let t=()=>{E._prefetches.removeUnordered(e)};e.then(t,t)}}static{this._maxPrefetch=4}static{this._prefetches=new h({initialSize:E._maxPrefetch})}static cleanupTilemapCache(){this._prefetches.prune()}_fetchTilemap(e,t,n,r){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new p(`tilemap-cache:level-unavailable`,`Level ${e} is unavailable in the service`));let i=this._tmpTilemapDefinition,a=this._tilemapFromCache(e,t,n,i);if(a)return Promise.resolve(a);let o=r?.signal;return r={...r,signal:null},new Promise((e,t)=>{_(o,()=>t(m()));let n=C(i),a=this._pendingTilemapRequests[n];if(!a){a=S.fromDefinition(i,r).then(e=>(this._tilemapCache.put(n,e,e.byteSize),e));let e=()=>{delete this._pendingTilemapRequests[n]};this._pendingTilemapRequests[n]=a,a.then(e,e)}a.then(e,t)})}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;let{parsedUrl:e,apiKey:t,customParameters:r}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:n({...e.query,...r,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,n,r){r.level=e,r.row=t-t%this.size,r.col=n-n%this.size;let i=C(r);return this._tilemapCache.get(i)}get test(){}};t([i({constructOnly:!0})],O.prototype,`layer`,void 0),t([i({constructOnly:!0})],O.prototype,`minLOD`,void 0),t([i({constructOnly:!0})],O.prototype,`maxLOD`,void 0),t([i({constructOnly:!0})],O.prototype,`request`,void 0),t([i({constructOnly:!0})],O.prototype,`size`,void 0),O=E=t([g(`esri.layers.support.TilemapCache`)],O);export{O as t};