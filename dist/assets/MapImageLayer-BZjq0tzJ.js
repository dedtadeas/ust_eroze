const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/mapImageLayerUtils-W0btkshE.js","assets/index-BqmCqmfp.js","assets/index-kIqmb12G.css","assets/originUtils-Xpg5-Q2D.js","assets/utils-yJnMCzaE.js","assets/saveUtils-DsVVlvmj.js"])))=>i.map(i=>d[i]);
import{CD as e,Cw as t,Ea as n,Hx as r,J as i,Kw as a,MC as o,Ma as s,Mb as c,Na as l,Nb as u,OS as d,Q as f,Qw as p,Sw as m,Sx as h,X as g,Z as _,Zw as v,_E as y,aS as b,ao as x,cC as S,kC as C,ka as w,mS as T,oC as E,ra as D,rt as O,sw as k,sx as A,ta as j,wa as M,z as N,zC as P}from"./index-BqmCqmfp.js";import"./memoryEstimations-O7VgDRVG.js";import"./OptimizedFeature-Dx4_lHip.js";import"./OptimizedGeometry-f3I9Z6C1.js";import"./OptimizedFeatureSet-DlHqIhoP.js";import"./featureConversionUtils-7vyVIZ6j.js";import{n as F}from"./imageBitmapUtils-B6x9ZCyg.js";import"./urlUtils-CtPsFIu4.js";import"./pbf-CwGh07vG.js";import"./pbfQueryUtils-DOeTJOP2.js";import"./queryUtils-GIY2oFHT.js";import"./query-D8IHih8e.js";import"./executeForIds-CFB4h9Bk.js";import"./QueryTask-vPpZxMGi.js";import"./executeQueryJSON-BAg2ttNX.js";import"./executeQueryPBF-DMb74A0k.js";import{n as I,r as L,t as R}from"./SublayersOwner-DmyHTzeR.js";import{r as z}from"./sublayerUtils-CdLiCppr.js";import"./floorFilterUtils-CQ-SmVM_.js";import{t as B}from"./ExportImageParameters-rbwYTeB-.js";var V=class extends w(i(g(R(L(s(O(f(x(_(l(n(c)))))))))))){constructor(...e){super(...e),this._exportImageParameters=new B({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.elevationInfo=new D({mode:`on-the-ground`}),this.gdbVersion=null,this.imageFormat=`png24`,this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType=`ArcGISMapServiceLayer`,this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type=`map-image`,this.url=null,this._debouncedSaveOperations=a(async(e,n,r)=>{let{save:i,saveAs:a}=await t(async()=>{let{save:e,saveAs:t}=await import(`./mapImageLayerUtils-W0btkshE.js`);return{save:e,saveAs:t}},__vite__mapDeps([0,1,2,3,4,5]));switch(e){case 0:return i(this,n);case 1:return a(this,r,n)}})}normalizeCtorArgs(e,t){return typeof e==`string`?{url:e,...t}:e}load(e){let t=e==null?null:e.signal;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[`Map Service`]},e).catch(p).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,t){let n=t.supportedImageFormatTypes;return n&&n.includes(`PNG32`)?`png32`:`png24`}get loaded(){return super.loaded}set portalItem(e){super.portalItem=e}writeSublayers(e,t,n,r){if(!this.loaded||!e)return;let i=e.slice().reverse().flatten(({sublayers:e})=>e&&e.toArray().reverse()).toArray(),a=!1,o=k(r.origin),s;if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers){if(o===3){let e=this.createSublayersForOrigin(`service`).sublayers;a=z(i,e,2)}else if(o>3){let e=this.createSublayersForOrigin(`portal-item`);a=z(i,e.sublayers,k(e.origin)),s=e.originWithPartialOverrides}}let c=[],l={writeSublayerStructure:a,...r,minimumWritableOrigin:s},u=a||this.hasVisibleLayersForOrigin(o);i.forEach(e=>{let t=e.write({},l);c.push(t),u||=e.originOf(`visible`)===`user`}),c.some(e=>Object.keys(e).length>1)&&(t.layers=c),u&&(t.visibleLayers=i.filter(e=>e.visible).map(e=>e.id))}createExportImageParameters(e,t,n,r){let i=r?.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=r?.floors??null,this._exportImageParameters.scale=r?.scale||M({extent:e,width:t})*i;let a=this._exportImageParameters.toJSON(),o=!r?.rotation||this.version<10.3?{}:{rotation:-r.rotation},s=e?.spatialReference,c=d(s);if(r?.scale&&e){let n=e.width/t*(b(e?.spatialReference)*T);a.dpi=r.scale/n}a.dpi*=i;let l={};if(r?.timeExtent){let{start:e,end:t}=r.timeExtent.toJSON();l.time=e&&t&&e===t?``+e:`${e??`null`},${t??`null`}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(l.time=`null,null`);return{bbox:e?e.xmin+`,`+e.ymin+`,`+e.xmax+`,`+e.ymax:void 0,bboxSR:c,imageSR:c,size:t+`,`+n,...a,...o,...l}}async fetchImage(e,t,n,r){let{data:i}=await this._fetchImage(`image`,e,t,n,r);return i}async fetchImageBitmap(e,t,n,r){let{data:i,url:a}=await this._fetchImage(`blob`,e,t,n,r);return F(i,a,r?.signal)}async fetchRecomputedExtents(e={}){let t={...e,query:{returnUpdates:!0,f:`json`,...this.customParameters,token:this.apiKey}},{data:n}=await m(this.url,t),{extent:r,fullExtent:i,timeExtent:a}=n,o=r||i;return{fullExtent:o&&h.fromJSON(o),timeExtent:a&&u.fromJSON({start:a[0],end:a[1]})}}loadAll(){return S(this,e=>{e(this.allSublayers),e(this.subtables)})}async save(e){return this._debouncedSaveOperations(0,e)}async saveAs(e,t){return this._debouncedSaveOperations(1,t,e)}serviceSupportsSpatialReference(e){return N(this,e)}async _fetchImage(e,t,n,r,i){let a={responseType:e,signal:i?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(t,n,r,i),f:`image`,...this.refreshParameters,...this.customParameters,token:this.apiKey}},o=this.parsedUrl.path+`/export`;if(a.query?.dynamicLayers!=null&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new y(`mapimagelayer:dynamiclayer-not-supported`,`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:a.query});try{let{data:e}=await m(o,a);return{data:e,url:o}}catch(e){throw v(e)?e:new y(`mapimagelayer:image-fetch-error`,`Unable to load image: ${o}`,{error:e})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:`service`,url:this.parsedUrl});let{data:t,ssl:n}=await m(this.parsedUrl.path,{query:{f:`json`,...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});n&&(this.url=this.url.replace(/^http:/i,`https:`)),this.sourceJSON=t,this.read(t,{origin:`service`,url:this.parsedUrl})}hasVisibleLayersForOrigin(e){return!(e==null||!this.sublayersSourceJSON[e]?.visibleLayers)}};e([o(A(`dateFieldsTimeReference`))],V.prototype,`dateFieldsTimeZone`,void 0),e([o({type:Boolean})],V.prototype,`datesInUnknownTimezone`,void 0),e([o()],V.prototype,`dpi`,void 0),e([o()],V.prototype,`elevationInfo`,void 0),e([o()],V.prototype,`gdbVersion`,void 0),e([o()],V.prototype,`imageFormat`,void 0),e([r(`imageFormat`,[`supportedImageFormatTypes`])],V.prototype,`readImageFormat`,null),e([o({json:{origins:{service:{read:{source:`maxImageHeight`}}}}})],V.prototype,`imageMaxHeight`,void 0),e([o({json:{origins:{service:{read:{source:`maxImageWidth`}}}}})],V.prototype,`imageMaxWidth`,void 0),e([o()],V.prototype,`imageTransparency`,void 0),e([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],V.prototype,`isReference`,void 0),e([o({json:{read:!1,write:!1}})],V.prototype,`labelsVisible`,void 0),e([o({type:[`ArcGISMapServiceLayer`]})],V.prototype,`operationalLayerType`,void 0),e([o({json:{read:!1,write:!1}})],V.prototype,`popupEnabled`,void 0),e([o(A(`preferredTimeReference`))],V.prototype,`preferredTimeZone`,void 0),e([o()],V.prototype,`sourceJSON`,void 0),e([o({json:{write:{ignoreOrigin:!0}}})],V.prototype,`sublayers`,void 0),e([E(`sublayers`,{layers:{type:[I]},visibleLayers:{type:[P]}})],V.prototype,`writeSublayers`,null),e([o({type:[`show`,`hide`,`hide-children`],json:{origins:{"portal-item":{read:!1,write:!1}}}})],V.prototype,`listMode`,void 0),e([o({json:{read:!1},readOnly:!0,value:`map-image`})],V.prototype,`type`,void 0),e([o(j)],V.prototype,`url`,void 0),V=e([C(`esri.layers.MapImageLayer`)],V);var H=V;export{H as default};