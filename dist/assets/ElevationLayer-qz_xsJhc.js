const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ElevationQuery-DX2l3hUV.js","assets/index-BqmCqmfp.js","assets/index-kIqmb12G.css","assets/GeometryDescriptor-BAsgbvB_.js"])))=>i.map(i=>d[i]);
import{CD as e,Cm as t,Cw as n,Hx as r,IT as i,MC as a,Ma as o,Mb as s,Q as c,Qw as l,Sw as u,_E as d,ao as f,iT as p,kC as m,pT as h,rt as g,ta as _}from"./index-BqmCqmfp.js";import"./memoryEstimations-O7VgDRVG.js";import"./TileInfoTilemapCache-CuMyse4g.js";import"./TilemapCache-C88wwB2j.js";import{t as v}from"./ArcGISCachedService-B2iHwO5Q.js";import{t as y}from"./WorkerHandle-CxcgZaVn.js";var b=class{constructor(e,t,n,r){this._hasNoDataValues=null,this._minValue=null,this._maxValue=null,`pixelData`in e?(this.values=e.pixelData,this.width=e.width,this.height=e.height,this.noDataValue=e.noDataValue):(this.values=e,this.width=t,this.height=n,this.noDataValue=r)}get hasNoDataValues(){if(this._hasNoDataValues==null){let e=this.noDataValue;this._hasNoDataValues=this.values.includes(e)}return this._hasNoDataValues}get minValue(){return this._ensureBounds(),this._minValue}get maxValue(){return this._ensureBounds(),this._maxValue}get usedMemory(){return this.values.byteLength+256}_ensureBounds(){if(this._minValue!=null)return;let{noDataValue:e,values:t}=this,n=1/0,r=-1/0,i=!0;for(let a of t)a===e?this._hasNoDataValues=!0:(n=a<n?a:n,r=a>r?a:r,i=!1);i?(this._minValue=0,this._maxValue=0):(this._minValue=n,this._maxValue=r>-3e38?r:0)}},x=class extends y{constructor(e=null){super(`LercWorker`,`_decode`,{_decode:e=>[e.buffer]},e,{strategy:`dedicated`}),this.schedule=e,this.ref=0}decode(e,t,n){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},n):Promise.resolve(null)}release(){--this.ref<=0&&(S.forEach((e,t)=>{e===this&&S.delete(t)}),this.destroy())}},S=new Map;function C(e=null){let t=S.get(e);return t||(e==null?(t=new x,S.set(null,t)):(t=new x(t=>e.immediate.schedule(t)),S.set(e,t))),++t.ref,t}var w=class extends v(o(g(c(f(s))))){constructor(...e){super(...e),this.capabilities={operations:{supportsTileMap:!1}},this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType=`ArcGISTiledElevationServiceLayer`,this.sourceJSON=null,this.type=`elevation`,this.url=null,this.version=null,this._lercDecoder=C()}normalizeCtorArgs(e,t){return typeof e==`string`?{url:e,...t}:e}destroy(){this._lercDecoder=h(this._lercDecoder)}readCapabilities(e,t){let n=t.capabilities&&t.capabilities.split(`,`).map(e=>e.toLowerCase().trim());return n?{operations:{supportsTileMap:n.includes(`tilemap`)}}:{operations:{supportsTileMap:!1}}}readVersion(e,t){let n=t.currentVersion;return n||=9.3,n}load(e){let t=e==null?null:e.signal;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[`Image Service`],supportsData:!1,validateItem:e=>{if(e.typeKeywords){for(let t=0;t<e.typeKeywords.length;t++)if(e.typeKeywords[t].toLowerCase()===`elevation 3d layer`)return!0}throw new d(`portal:invalid-layer-item-type`,"Invalid layer item type '${type}', expected '${expectedType}' ",{type:`Image Service`,expectedType:`Image Service Elevation 3D Layer`})}},e).catch(l).then(()=>this._fetchImageService(t))),Promise.resolve(this)}fetchTile(e,t,n,r){let i=r?.signal,a={responseType:`array-buffer`,signal:i},o={noDataValue:r?.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(e,t,n,r)).then(()=>u(this.getTileUrl(e,t,n),a)).then(e=>this._lercDecoder.decode(e.data,o,i)).then(e=>new b(e))}getTileUrl(e,t,n){let r=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,a=i({...this.parsedUrl.query,blankTile:!r&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${n}${a?`?`+a:``}`}async queryElevation(e,t){let{query:r}=await n(async()=>{let{query:e}=await import(`./ElevationQuery-DX2l3hUV.js`);return{query:e}},__vite__mapDeps([0,1,2,3]));return p(t),r(this,e,t)}async createElevationSampler(e,t){let{createSampler:r}=await n(async()=>{let{createSampler:e}=await import(`./ElevationQuery-DX2l3hUV.js`);return{createSampler:e}},__vite__mapDeps([0,1,2,3]));return p(t),r(this,e,t)}_fetchTileAvailability(e,t,n,r){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,n,r):Promise.resolve(`unknown`)}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;let t={query:{f:`json`,...this.parsedUrl.query},responseType:`json`,signal:e},n=await u(this.parsedUrl.path,t);n.ssl&&(this.url=this.url?.replace(/^http:/i,`https:`)),this.sourceJSON=n.data,this.read(n.data,{origin:`service`,url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile[T]}};e([a({readOnly:!0})],w.prototype,`capabilities`,void 0),e([r(`service`,`capabilities`,[`capabilities`])],w.prototype,`readCapabilities`,null),e([a({json:{read:{source:`copyrightText`}}})],w.prototype,`copyright`,void 0),e([a({readOnly:!0,type:t})],w.prototype,`heightModelInfo`,void 0),e([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],w.prototype,`path`,void 0),e([a({type:[`show`,`hide`]})],w.prototype,`listMode`,void 0),e([a({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],w.prototype,`minScale`,void 0),e([a({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],w.prototype,`maxScale`,void 0),e([a({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],w.prototype,`opacity`,void 0),e([a({type:[`ArcGISTiledElevationServiceLayer`]})],w.prototype,`operationalLayerType`,void 0),e([a()],w.prototype,`sourceJSON`,void 0),e([a({json:{read:!1},value:`elevation`,readOnly:!0})],w.prototype,`type`,void 0),e([a(_)],w.prototype,`url`,void 0),e([a()],w.prototype,`version`,void 0),e([r(`version`,[`currentVersion`])],w.prototype,`readVersion`,null),w=e([m(`esri.layers.ElevationLayer`)],w);var T=Symbol(`default-fetch-tile`);w.prototype.fetchTile[T]=!0;var E=w;export{E as default};