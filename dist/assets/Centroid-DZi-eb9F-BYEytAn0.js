import{At as e,cn as t,kt as n,ln as r}from"./Point2D-UYEfE6HP.js";function i(e,r){if(!e.isEmpty())switch(e.getGeometryType()){case t.enumPolygon:return o(e);case t.enumPolyline:return l(e);case t.enumLine:case t.enumBezier:case t.enumEllipticArc:return u(e);case t.enumMultiPoint:return d(e);case t.enumEnvelope:return e.getCenterXY();case t.enumPoint:return e.getXY();default:return n.construct(NaN,NaN)}return n.construct(NaN,NaN)}function a(e,t){return o(e,t)}function o(t,r=-1){let i=new e(0),a=new e(0),o=t.getImpl(),l,u=o.hasNonLinearSegments(),d,p=o.getXY(0);if(r===-1){if(d=o.calculateArea2D(),d===0)return f(t);u&&(l=o.querySegmentIterator());for(let e=0,t=o.getPathCount();e<t;e++)s(p,o,e,i,a),u&&c(p,l,i,a)}else{if(d=o.calculateRingArea2D(r),d===0)return f(t,r);u&&(l=o.querySegmentIterator(),l.resetToPath(r)),s(p,o,r,i,a),u&&c(p,l,i,a)}let m=new n,h=new n;return m.setCoords(i.getResult(),a.getResult()),h.assign(m.mul(1/d).add(p)),h}function s(t,r,i,a,o){let s=r.getPathStart(i),c=r.getPathEnd(i);if(c-s<3)return;let l=r.getAttributeStreamRef(0),u=l.readPoint2D(2*s),d=l.readPoint2D(2*(s+1));d.subThis(u);let f=new e(0),p=r.hasNonLinearSegments(),m=new n;for(let e=s+2;e<c;e++){l.queryPoint2D(2*e,m),m.subThis(u);let t=.5*m.crossProduct(d);p&&f.add(t);let n=.3333333333333333*t;a.add((d.x+m.x)*n),o.add((d.y+m.y)*n),d.setCoordsPoint2D(m)}let h=p?f.getResult():r.calculateRingArea2D(i),g=u.sub(t).mul(h);a.add(g.x),o.add(g.y)}function c(e,t,n,i){let a;for(t.nextPath()||r(`centroid`);(a=t.nextCurve())!==null;){let t=a.calculateWeightedAreaCentroid2D(e);n.add(t.x),i.add(t.y)}}function l(e){return p(e.getImpl())}function u(e){let t=e.calculateLength2D();return t===0?e.getStartXY():e.calculateWeightedCentroid2D().mul(1/t)}function d(t){let r=new e(0),i=new e(0),a=t.getImpl(),o=a.getAttributeStreamRef(0),s=a.getPointCount(),c=new n;for(let e=0;e<s;e++)o.queryPoint2D(2*e,c),r.add(c.x),i.add(c.y);let l=new n;return l.setCoords(r.getResult(),i.getResult()),l.divThis(s)}function f(e,t=-1){return p(e.getImpl(),t)}function p(t,r=-1){let i=r===-1?t.calculateLength2D():t.calculatePathLength2D(r);if(i===0)return m(t,r);let a=new e(0),o=new e(0),s=t.querySegmentIterator();for(r!==-1&&s.resetToPath(r);s.nextPath();){let e=s.getPathIndex(),n=t.getXY(t.getPathStart(e));for(;s.hasNextSegment();){let e=s.nextSegment(),t=e.calculateLength2D();if(t===0)continue;let r=e.calculateWeightedCentroid2D().sub(n.mul(t));a.add(r.x),o.add(r.y)}let i=n.mul(t.calculatePathLength2D(e));if(a.add(i.x),o.add(i.y),r!==-1)break}let c=new n;return c.setCoords(a.getResult(),o.getResult()),c.mul(1/i)}function m(t,r=-1){if(r!==-1)return t.getXY(t.getPathStart(r));let i=new e(0),a=new e(0);for(let e=0;e<t.getPathCount();++e){let n=t.getXY(t.getPathStart(e));i.add(n.x),a.add(n.y)}return n.construct(i.getResult(),a.getResult()).mul(1/t.getPathCount())}export{a as n,i as t};