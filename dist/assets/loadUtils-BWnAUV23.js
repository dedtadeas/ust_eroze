import{Sb as e}from"./index-BqmCqmfp.js";import{t}from"./associatedFeatureServiceUtils-C1iuzbPQ.js";import{r as n,t as r}from"./fetchService-BUtv2ntd.js";var i=class{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(e,t){let r=this._serviceMetadatas.get(e);if(r)return r;let i=await n(e,t);return this._serviceMetadatas.set(e,i),i}async fetchItemData(e){let{id:t}=e;if(!t)return null;let{_itemDatas:n}=this;if(n.has(t))return n.get(t);let r=await e.fetchData();return n.set(t,r),r}async fetchCustomParameters(e,t){let n=await this.fetchItemData(e);return n&&typeof n==`object`&&(t?t(n):n.customParameters)||null}};function a(e){let t={id:e.id,name:e.name},n=r(e.type);return n!==`FeatureLayer`&&(t.layerType=n),t}async function o(t,n,r){let i;if(t?.layers==null||t?.tables==null){let o=await r.fetchServiceMetadata(n,{customParameters:s(t)?.customParameters});i=e(),(t||={}).layers=t.layers||o?.layers?.map(a),t.tables=t.tables||o?.tables?.map(a)}return{data:t,preferredHost:i}}function s(e){if(!e)return null;let{layers:t,tables:n}=e;return t?.length?t[0]:n?.length?n[0]:null}function c(e,t){return t==null?null:[...e.layers||[],...e.tables||[]].find(e=>e.id===t)}function l(e,t){return[...e.layers||[],...e.tables||[]].filter(({layerType:e})=>e?t.includes(e):t.includes(`ArcGISFeatureLayer`))}function u(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function d(e){switch(e){case`catalog`:return[`CatalogLayer`];case`feature`:return[`ArcGISFeatureLayer`];case`oriented-imagery`:return[`OrientedImageryLayer`];case`subtype-group`:return[`SubtypeGroupLayer`,`SubtypeGroupTable`]}return null}function f(e){switch(e){case`CatalogLayer`:return`CatalogLayer`;case`OrientedImageryLayer`:return`OrientedImageryLayer`;case`SubtypeGroupLayer`:case`SubtypeGroupTable`:return`SubtypeGroupLayer`}return`FeatureLayer`}async function p(e,n,r){if(!e?.url)return n??{};n??={},!n.layers&&(n.layers=(await r.fetchServiceMetadata(e.url)).layers?.map(a));let{serverUrl:i,portalItem:o}=await t(e.url,{sceneLayerItem:e,customParameters:s(n)?.customParameters}).catch(()=>({serverUrl:null,portalItem:null}));if(i==null)return n.tables=[],n;if(!n.tables&&o){let e=await o.fetchData().catch(()=>null);e?.tables?n.tables=e.tables.map(a):n.tables=(await r.fetchServiceMetadata(i,{customParameters:s(e)?.customParameters}).catch(()=>null))?.tables?.map(a)}if(n.tables)for(let e of n.tables)e.url=`${i}/${e.id}`;return n}export{c as a,l as c,o as i,p as l,u as n,d as o,f as r,s,a as t,i as u};