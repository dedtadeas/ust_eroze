import{Fm as e,eD as t,iT as n,vE as r,vT as i}from"./index-BqmCqmfp.js";var a=class{constructor(t,n,i,a,o={}){this._mainMethod=n,this._transferLists=i,this._listeners=[],this._promise=e(t,{...o,schedule:a}).then(e=>{if(this._thread===void 0){this._thread=e,this._promise=null,o.hasInitialize&&this.broadcast({},`initialize`);for(let e of this._listeners)this._connectListener(e)}else e.close()}),this._promise.catch(e=>r.getLogger(`esri.core.workers.WorkerHandle`).error(`Failed to initialize ${t} worker: ${e}`))}on(e,n){let r={removed:!1,eventName:e,callback:n,threadHandle:null};return this._listeners.push(r),this._connectListener(r),i(()=>{r.removed=!0,t(this._listeners,r),this._thread&&r.threadHandle!=null&&r.threadHandle.remove()})}destroy(){this._thread&&=(this._thread.close(),null),this._promise=null,this._listeners.length=0,this._transferLists={}}invoke(e,t,n){return this.invokeMethod(this._mainMethod,e,t,n)}invokeMethod(e,t,r,i){if(this._thread){let n=this._transferLists[e],a=n?n(t):[];return this._thread.invoke(e,t,{transferList:a,signal:r,priority:i})}return this._promise?this._promise.then(()=>(n(r),this.invokeMethod(e,t,r))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(o):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}};function o(){}export{a as t};