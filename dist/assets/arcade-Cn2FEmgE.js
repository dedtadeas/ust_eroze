import{AE as e,An as t,Fn as n,I as r,Id as i,Nn as a,Pa as o,_E as s,_w as c,lm as l,vE as u,vx as d}from"./index-BqmCqmfp.js";import{t as f}from"./arcadeEnvironment-DfjU7s2m.js";import{t as p}from"./ImmutableArray-C3KNQCVd.js";var m=null;function h(e,t,n,r={}){let i=t.elementType,a=`value`,o=i.type===`array`?[{name:a,type:i.type,elementType:i.elementType}]:i.type===`dictionary`?[{name:a,type:i.type,properties:i.properties}]:[{name:a,type:i.type}];return new p(e.map(e=>{let t={};return y(t,o,{[a]:e},n,r),t[a]}))}function g(e,t,n={}){let i=e instanceof o?new r({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return t.constructFeatureSet(i,n.spatialReference,null,!0,n.lruCache,n.interceptor)}function _(e,t,n={}){let{spatialReference:r,interceptor:i,lruCache:a}=n;return typeof e==`string`?t.createFeatureSetCollectionFromService(e,r,a,i):t.createFeatureSetCollectionFromMap(e,r,a,i)}function v(e,t,n,r={}){let i=Object.create(null);return y(i,t.properties,e,n,r),new m.Dictionary(i)}function y(e,r,i,o,s={}){let c={};for(let e of Object.keys(i))c[e.toLowerCase()]=i[e];for(let i of r){let r=i.name.toLowerCase();if(s.variablesPreProcessed)e[r]=c[r];else switch(i.type){case`array`:{let t=c[r];e[r]=t==null?null:h(t,i,o,s);break}case`feature`:{let t=c[r];e[r]=t==null?null:m.Feature.createFromGraphic(t,s?.timeZone);break}case`featureSet`:{let t=c[r];e[r]=t==null?null:o?g(t,o,s):null;break}case`featureSetCollection`:{let t=c[r];e[r]=t==null?null:o?_(t,o,s):null;break}case`dictionary`:{let t=c[r];e[r]=t==null?null:v(t,i,o,s);break}case`date`:{let t=c[r];e[r]=t?t instanceof n?t:s?.timeZone?n.dateJSAndZoneToArcadeDate(t,s?.timeZone):n.dateJSToArcadeDate(t):null;break}case`dateOnly`:{let t=c[r];e[r]=t?t instanceof a?t:a.fromReader(t):null;break}case`time`:{let n=c[r];e[r]=n?n instanceof t?n:t.fromReader(n):null;break}case`knowledgeGraph`:case`geometry`:case`boolean`:case`text`:case`number`:e[r]=c[r];break;case`voxel`:{let t=c[r];e[r]=t==null?null:new m.Voxel(t,s?.timeZone);break}case`pixel`:{let t=c[r];e[r]=t==null?null:m.Pixel.fromImageryGraphic(t,s?.timeZone);break}}}}function b(e,t){for(let n of e)t.push(n),n.type===`dictionary`&&b(n.properties,t);return t}function x(e,t,n,r,i){let{spatialReference:a,interceptor:o,lruCache:s,console:c,abortSignal:l,timeZone:u,services:f={portal:d.getDefault()},track:p}=n,m={vars:{},spatialReference:a,interceptor:o,timeZone:u,lrucache:s,useAsync:i,services:f,console:c,abortSignal:l,track:p};return t&&y(m.vars,e.variables,t,r,n),m}function S(e,t){switch(t.getArcadeType(e)){case`number`:case`text`:case`boolean`:case`point`:case`polygon`:case`polyline`:case`multipoint`:case`extent`:return e;case`date`:return e.toJSDate();case`time`:case`dateOnly`:return e.toString();case`feature`:{let t=(e.type,e),n=`geometry`in t?t.geometry():null,r=`readAttributes`in t?t.readAttributes():t.attributes;return new i({geometry:n,attributes:r})}case`dictionary`:{let n=e,r=n.attributes,i={};for(let e of Object.keys(r))i[e]=S(n.field(e),t);return i}case`array`:return(`toArray`in e?e.toArray():e).map(e=>S(e,t))}return e}var C={variables:[{name:`$feature`,type:`feature`},{name:`$layer`,type:`featureSet`},{name:`$datastore`,type:`featureSetCollection`},{name:`$map`,type:`featureSetCollection`},{name:`$userInput`,type:`geometry`},{name:`$graph`,type:`knowledgeGraph`},{name:`$view`,type:`dictionary`,properties:[{name:`scale`,type:`number`},{name:`timeProperties`,type:`dictionary`,properties:[{name:`currentStart`,type:`date`},{name:`currentEnd`,type:`date`},{name:`startIncluded`,type:`boolean`},{name:`endIncluded`,type:`boolean`}]}]}]},w={variables:[{name:`$feature`,type:`feature`},{name:`$aggregatedFeatures`,type:`featureSet`},{name:`$view`,type:`dictionary`,properties:[{name:`scale`,type:`number`},{name:`timeProperties`,type:`dictionary`,properties:[{name:`currentStart`,type:`date`},{name:`currentEnd`,type:`date`},{name:`startIncluded`,type:`boolean`},{name:`endIncluded`,type:`boolean`}]}]}]},T={variables:[{name:`$voxel`,type:`voxel`}]},E={variables:[{name:`$pixel`,type:`pixel`},{name:`$imageCollectionItem`,type:`feature`}]},D=new Map([[`aggregate-field`,{variables:[{name:`$feature`,type:`feature`}]}],[`form-constraint`,{variables:[{name:`$feature`,type:`feature`}]}],[`feature-z`,{variables:[{name:`$feature`,type:`feature`}]}],[`field-calculation`,{variables:[{name:`$feature`,type:`feature`},{name:`$datastore`,type:`featureSetCollection`}]}],[`form-calculation`,{variables:[{name:`$feature`,type:`feature`},{name:`$originalFeature`,type:`feature`},{name:`$layer`,type:`featureSet`},{name:`$featureSet`,type:`featureSet`},{name:`$datastore`,type:`featureSetCollection`},{name:`$map`,type:`featureSetCollection`},{name:`$editContext`,type:`dictionary`,properties:[{name:`editType`,type:`text`}]}]}],[`labeling`,{variables:[{name:`$feature`,type:`feature`},{name:`$view`,type:`dictionary`,properties:[{name:`scale`,type:`number`},{name:`timeProperties`,type:`dictionary`,properties:[{name:`currentStart`,type:`date`},{name:`currentEnd`,type:`date`},{name:`startIncluded`,type:`boolean`},{name:`endIncluded`,type:`boolean`}]}]}]}],[`popup`,C],[`popup-element`,C],[`popup-feature-reduction`,w],[`popup-element-feature-reduction`,w],[`visualization`,{variables:[{name:`$feature`,type:`feature`},{name:`$view`,type:`dictionary`,properties:[{name:`scale`,type:`number`},{name:`timeProperties`,type:`dictionary`,properties:[{name:`currentStart`,type:`date`},{name:`currentEnd`,type:`date`},{name:`startIncluded`,type:`boolean`},{name:`endIncluded`,type:`boolean`}]}]}]}],[`popup-voxel`,T],[`popup-element-voxel`,T],[`popup-imagery`,E],[`popup-element-imagery`,E]]);function O(t){t===`feature-reduction-popup`?(c(u.getLogger(`esri.arcade`),`profile name: "feature-reduction-popup"`,{replacement:`"popup-feature-reduction"`,version:`4.32`,warnOnce:!0}),t=`popup-feature-reduction`):t===`feature-reduction-popup-element`&&(c(u.getLogger(`esri.arcade`),`profile name: "feature-reduction-popup-element"`,{replacement:`"popup-element-feature-reduction"`,version:`4.32`,warnOnce:!0}),t=`popup-element-feature-reduction`);let n=D.get(t);if(!n){let e=Array.from(D.keys()).map(e=>`'${e}'`).join(`, `);throw new s(`createArcadeProfile:invalid-profile-name`,`Invalid profile name '${t}'. You must specify one of the following values: ${e}`)}return e(n)}async function k(e,t,n={}){m||=await l();let{arcade:r,arcadeUtils:i,batchExec:{createBatchExecutor:a},aiServices:{BatchTranslationServiceFactory:o,PortalTranslationService:c}}=m,{loadScriptDependencies:u,referencesMember:p,scriptIsAsync:h}=r,g=b(t.variables,[]).filter(e=>e.type===`featureSet`||e.type===`featureSetCollection`).map(e=>f(e.name)),_=r.parseScript(e,g);if(!_)throw new s(`arcade:invalid-script`,`Unable to create SyntaxTree`);let v=i.extractFieldNames(_),y=r.scriptTouchesGeometry(_),C=t.variables.map(e=>f(e.name)).filter(e=>p(_,e)),w=h(_,g);await u(_,w,g);let T=r.compileScript(_,{vars:Object.fromEntries(C.map(e=>[e,!0])),useAsync:w}),{lruCache:E,services:D}=n,O=r.featureSetUtils();return{execute:(e,n={})=>{if(w)throw new s(`arcade:invalid-execution-mode`,`Cannot execute the script in synchronous mode`);let r={...D,...n.services},a={lruCache:E,...n,services:r},o=T(x(t,e,a,O,w));return n.rawOutput?o:S(o,i)},executeAsync:async(e,n={})=>{let r={...D,...n.services},a={lruCache:E,...n,services:r},o=await T(x(t,e,a,O,w));return n.rawOutput?o:S(o,i)},executeAsyncBatch:async(e,n,r={})=>{let s=[],l=a(e,async(e,a)=>{let o=n(e);try{let e={...u,translation:f.create(a)},n={lruCache:E,...r,services:e},c=await T(x(t,o,n,O,w)),l=r.rawOutput?c:S(c,i);s.push({id:a.id,result:{status:`fulfilled`,value:l}})}catch(e){throw s.push({id:a.id,result:{status:`rejected`,reason:e}}),e}},r.maxConcurrency??64,r.abortSignal),u={...D,...r.services},f=new o(l,u.translation??new c(u.portal??d.getDefault(),r.console));return await l.run(),s.sort(({id:e},{id:t})=>e-t).map(({result:e})=>e)},isAsync:w,variablesUsed:C,fieldsUsed:v,geometryUsed:y,syntaxTree:_}}export{k as createArcadeExecutor,O as createArcadeProfile};