import{CD as e,El as t,IS as n,MC as r,Sl as i,Zw as a,fu as o,kC as s,vE as c,wl as l,xl as u}from"./index-BqmCqmfp.js";import"./memoryEstimations-O7VgDRVG.js";import"./OptimizedFeature-Dx4_lHip.js";import"./OptimizedGeometry-f3I9Z6C1.js";import"./OptimizedFeatureSet-DlHqIhoP.js";import"./featureConversionUtils-7vyVIZ6j.js";import"./earcut-Drx511Ix.js";import"./layerViewUtils-Bbe7IKvz.js";import"./VertexAttributeLocations-IAhvKZqd.js";import"./VertexElementDescriptor-BGWnA0Rs.js";import"./BoundingBox-DnR5UeUT.js";import"./config-BSvujflG.js";import"./WGLContainer-Caxzva6E.js";import"./utils-DBLYSlue.js";import"./ProgramTemplate-ks-pn-xm.js";import"./VertexArrayObject-Dzn28byJ.js";import"./BufferObject-lp8QWmVQ.js";import"./VertexBuffer-DL5rIQzc.js";import"./vec3f32-CZ7wi78s.js";import"./Container-DgT8F3N0.js";import"./EffectView-CvH-XuUh.js";import"./GraphShaderModule-D5xwSwIQ.js";import"./FramebufferObject-CkeUwNOD.js";import"./ShaderBuilder-C3C7fUwK.js";import"./bitmapUtils-EQTC4Su-.js";import"./Bitmap-Bh-_NMdJ.js";import{t as d}from"./LayerView2D-DVE2Teoj.js";import{t as f}from"./LayerView-DKEUJRIQ.js";import{t as p}from"./RefreshableLayerView-CNJlNdyl.js";import"./TileContainer-BwjyXNO3.js";import{r as m,t as h}from"./imageUtils-Jkh7sLFa.js";var g=[0,0],_=class extends p(m(d(f))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){let{activeLayer:e}=this.layer,{tileMatrixSet:t}=e;if(t&&n(t.tileInfo?.spatialReference,this.view.spatialReference))return t;let r=this._getTileMatrixSetBySpatialReference(e);return r&&r.id!==e.tileMatrixSetId?(e.tileMatrixSetId=r.id,r):null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume()}attach(){let e=this.tileMatrixSet?.tileInfo;e&&(this._tileInfoView=new l(e),this._fetchQueue=new i({tileInfoView:this._tileInfoView,concurrency:16,process:(e,t)=>this.fetchTile(e,t),scheduler:this.scheduler,priority:o.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new u({cachePolicy:`keep`,resampling:!0,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add(()=>[this.layer?.activeLayer?.styleId,this.tileMatrixSet],()=>this.doRefresh())),super.attach())}detach(){super.detach(),this._tileStrategy?.destroy(),this._fetchQueue?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){return this.layer.activeLayer.tileMatrixSets?.some(t=>n(t.tileInfo?.spatialReference,e))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e)))}}acquireTile(e){let t=this._bitmapView.createTile(e),n=t.bitmap;return[n.x,n.y]=this._tileInfoView.getTileCoords(g,t.key),n.resolution=this._tileInfoView.getTileResolution(t.key),[n.width,n.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once(`detach`,()=>e.destroy()),this.requestUpdate()}async fetchTile(e,n={}){let r=`tilemapCache`in this.layer?this.layer.tilemapCache:null,{signal:i,resamplingLevel:o=0}=n;if(!r)return this._fetchImage(e,i);let s=new t(0,0,0,0),c;try{await r.fetchAvailabilityUpsample(e.level,e.row,e.col,s,{signal:i}),c=await this._fetchImage(s,i)}catch(r){if(a(r))throw r;if(o<3){let r=this._tileInfoView.getTileParentId(e.id);if(r){let i=new t(r),a=await this.fetchTile(i,{...n,resamplingLevel:o+1});return h(this._tileInfoView,a,i,e)}}throw r}return h(this._tileInfoView,c,s,e)}canResume(){return super.canResume()&&this.tileMatrixSet!==null}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{let t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once(`attach`,()=>this.requestUpdate())}catch(e){a(e)||c.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}_getTileMatrixSetBySpatialReference(e){return e.tileMatrixSets?.find(e=>n(e.tileInfo?.spatialReference,this.view.spatialReference))}};e([r({readOnly:!0})],_.prototype,`tileMatrixSet`,null),_=e([s(`esri.views.2d.layers.WMTSLayerView2D`)],_);var v=_;export{v as default};