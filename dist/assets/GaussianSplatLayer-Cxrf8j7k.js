import{CD as e,Ea as t,MC as n,Ma as r,Mb as i,Na as a,Q as o,Qw as s,Sw as c,Sx as l,Ux as u,X as d,Yi as f,_E as p,ao as m,bD as h,kC as g,rt as _,ta as v,vE as y}from"./index-BqmCqmfp.js";import{a as b,p as x,y as S}from"./elevationInfoUtils-Df_uYU_q.js";import{n as C,t as w}from"./tiles3DUtils-D7dM2RmX.js";var T=class extends r(_(o(d(m(t(a(i))))))){constructor(e){super(e),this.operationalLayerType=`GaussianSplatLayer`,this.type=`gaussian-splat`,this.opacity=1,this.minScale=0,this.maxScale=0,this.url=null,this.rootTilesetJSON=null,this.fullExtent=new l(-180,-90,180,90,this.spatialReference),this.spatialReference=new u({wkid:4326,vcsWkid:115700}),this.esriCrsSpatialReference=null,this.esriCrsFullExtent=null}get supportedSpatialReferences(){return this.initialized&&this.esriCrsSpatialReference?[this.spatialReference,this.esriCrsSpatialReference]:[this.spatialReference]}get fullExtents(){return this.initialized&&this.esriCrsFullExtent?[this.fullExtent,this.esriCrsFullExtent]:[this.fullExtent]}set elevationInfo(e){e!=null&&e.mode!==`absolute-height`||this._set(`elevationInfo`,e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){let t=e==null?null:e.signal;if(!h(`enable-feature:gaussianSplatLayer`))throw new p(`GaussianSplatLayer-init:not-supported`,`This layer is currently not supported.`);try{await this.loadFromPortal({supportedTypes:[`3DTiles Service`],validateItem:e=>{if(e.typeKeywords?.includes(`GaussianSplat`))return!0;throw new p(`portal:invalid-layer-item-type`,"Invalid layer item, expected '${expectedType}' ",{expectedType:`3DTiles Service`})}},e)}catch(e){s(e)}this.url&&await c(this.url,{query:{...this.customParameters,token:this.apiKey},responseType:`json`,signal:t}).then(e=>{this.rootTilesetJSON=e.data;let t=C(this.rootTilesetJSON);this.fullExtent=w(this.rootTilesetJSON,!1),this.spatialReference=this.fullExtent.spatialReference,t&&(this.esriCrsFullExtent=w(this.rootTilesetJSON,!0),this.esriCrsSpatialReference=this.esriCrsFullExtent.spatialReference)},e=>{s(e)})}_validateElevationInfo(e){let t=`Gaussian Splat layers`;x(y.getLogger(this),S(t,`absolute-height`,e)),x(y.getLogger(this),b(t,e))}};e([n({type:[`GaussianSplatLayer`]})],T.prototype,`operationalLayerType`,void 0),e([n({readOnly:!0})],T.prototype,`type`,void 0),e([n({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],T.prototype,`opacity`,void 0),e([n({type:Number,json:{name:`layerDefinition.minScale`,write:!0,origins:{service:{read:!1,write:!1}}}})],T.prototype,`minScale`,void 0),e([n({type:Number,json:{name:`layerDefinition.maxScale`,write:!0,origins:{service:{read:!1,write:!1}}}})],T.prototype,`maxScale`,void 0),e([n(v)],T.prototype,`url`,void 0),e([n({type:l})],T.prototype,`fullExtent`,void 0),e([n({type:u})],T.prototype,`spatialReference`,void 0),e([n({readOnly:!0})],T.prototype,`supportedSpatialReferences`,null),e([n({type:[l]})],T.prototype,`fullExtents`,null),e([n({type:[`show`,`hide`]})],T.prototype,`listMode`,void 0),e([n(f)],T.prototype,`elevationInfo`,null),T=e([g(`esri.layers.GaussianSplatLayer`)],T);var E=T;export{E as default};