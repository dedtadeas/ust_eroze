import{Ax as e,CD as t,Fd as n,IT as r,Kb as i,MC as a,SC as o,Sw as s,Sx as c,Us as l,Ux as u,Vs as d,ZT as f,cT as p,ec as m,hg as h,jT as g,kC as _,lo as v,mT as y,vC as b,yg as x,zu as S}from"./index-BqmCqmfp.js";import"./memoryEstimations-O7VgDRVG.js";import"./OptimizedFeature-Dx4_lHip.js";import"./OptimizedGeometry-f3I9Z6C1.js";import"./OptimizedFeatureSet-DlHqIhoP.js";import"./featureConversionUtils-7vyVIZ6j.js";import"./streamLayerUtils-BMw-RtDi.js";import"./QueueProcessor-C8_CgXms.js";import"./SimpleGeometryCursor-CI9GIWKa.js";import"./earcut-Drx511Ix.js";import"./operatorProject-xNL6vJqt.js";import{n as C}from"./projectOperator-D9Kz8ulR.js";import"./glsl-C2sn87h0.js";import"./layerViewUtils-Bbe7IKvz.js";import"./colorUtils-uG2qTogT.js";import{n as w,p as T,u as E}from"./rasterProjectionHelper-CyS9RtmF.js";import{a as D,i as O,r as k}from"./kmlUtils-DH9kTish.js";import"./timeSupport-DheFkvFH.js";import"./queryUtils-BA7HiGeg.js";import"./quantizationUtils-C5shine1.js";import"./normalizeUtilsSync-Btn24Gtg.js";import"./GeometryUtils-DBkUrkz1.js";import"./VertexAttributeLocations-IAhvKZqd.js";import"./VertexElementDescriptor-BGWnA0Rs.js";import"./labelPoint-B7zLrA23.js";import"./callExpressionWithCursor-kl7GHpJ1.js";import"./FeatureMetadata-H6WAS0Lx.js";import"./fontUtils-CWolFklQ.js";import"./CIMSymbolHelper-bdBsF42t.js";import"./rasterizingUtils-B0Pd5uE0.js";import"./Rect-BMNJQxpm.js";import"./BoundingBox-DnR5UeUT.js";import"./BidiEngine-CpIovbIK.js";import"./callExpressionWithFeature-BK7JnF3H.js";import"./OverrideHelper-BKNowJt8.js";import"./densifyCurvedGeometry-C2XDhl14.js";import"./config-BSvujflG.js";import"./dehydratedFeatureComparison-Ch8xWl-8.js";import"./WGLContainer-Caxzva6E.js";import"./utils-DBLYSlue.js";import"./ProgramTemplate-ks-pn-xm.js";import"./VertexArrayObject-Dzn28byJ.js";import"./BufferObject-lp8QWmVQ.js";import"./VertexBuffer-DL5rIQzc.js";import"./vec3f32-CZ7wi78s.js";import"./Container-DgT8F3N0.js";import"./EffectView-CvH-XuUh.js";import"./GraphShaderModule-D5xwSwIQ.js";import{t as A}from"./FramebufferObject-CkeUwNOD.js";import"./ShaderBuilder-C3C7fUwK.js";import"./bitmapUtils-EQTC4Su-.js";import{n as j,r as M,t as N}from"./Bitmap-Bh-_NMdJ.js";import{t as P}from"./BitmapContainer-CdqXg0Ib.js";import{t as F}from"./LayerView2D-DVE2Teoj.js";import{t as I}from"./LayerView-DKEUJRIQ.js";import"./UpdateTracking2D-yw0xaCSk.js";import"./TechniqueInstance-BhM4b8eb.js";import"./TileContainer-BwjyXNO3.js";import"./FeatureCommandQueue-COnDeivB.js";import"./constants-BOI_CTg-.js";import"./utils-CY7cI7hp.js";import"./AGraphicContainer-ShIe2ypS.js";import{t as L}from"./GraphicContainer-DNktOekL.js";import"./ComputedAttributeStorage-D_u4lyEq.js";import{t as R}from"./GraphicsView2D-Dg0AUWQu.js";import"./dehydratedFeatures-DW1qFa9i.js";import{t as z}from"./rasterUtils-CFO6nsd3.js";import{n as B,r as V,t as H}from"./RenderingContext-BQqzsg0C.js";import"./ProgramCache-CEARrkpW.js";import"./renderState-Be6uDhGv.js";import"./DisjointTimerQuery-DmiPM9r5.js";var U=class extends b{constructor(){super(...arguments),this.id=0,this.rotation=0,this.href=``,this.extent=new c}};t([a({nonNullable:!0,json:{write:!0}})],U.prototype,`id`,void 0),t([a({nonNullable:!0,json:{write:!0}})],U.prototype,`rotation`,void 0),t([a({nonNullable:!0,json:{write:!0}})],U.prototype,`href`,void 0),t([a({type:c,nonNullable:!0,json:{write:!0}})],U.prototype,`extent`,void 0),U=t([_(`esri.layers.support.KMLMapImage`)],U);var W=class t{static{this._instanceRefCount=0}constructor(e){if(this._ownsRctx=!1,e)this._ownsRctx=!1,this._rctx=e;else{if(t._instance)return t._instanceRefCount++,t._instance;t._instanceRefCount=1,t._instance=this,this._ownsRctx=!0;let e=document.createElement(`canvas`).getContext(`webgl2`);e.getExtension(`OES_texture_float`),this._rctx=new H(e,new v)}this._quad=new V(this._rctx,[0,0,1,0,0,1,1,1]);let n=B(`raster/reproject`,`raster/reproject`,{applyProjection:!0,bilinear:!1,bicubic:!1});this._program=this._rctx.programCache.acquire(n.vertexShader,n.fragmentShader,this._quad.locations),this._rctx.useProgram(this._program),this._program.setUniform1f(`u_opacity`,1),this._program.setUniform1i(`u_image`,0),this._program.setUniform1i(`u_flipY`,0),this._program.setUniform1i(`u_transformGrid`,1)}reprojectTexture(t,n,r=!1){let i=C(t.extent,n),a=new e({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:o,y:s}=w(a,n,t.extent),c=(o+s)/2,u=Math.round((i.xmax-i.xmin)/c),d=Math.round((i.ymax-i.ymin)/c);c=(i.width/u+i.height/d)/2;let f=new e({x:c,y:c,spatialReference:i.spatialReference}),p=T({projectedExtent:i,srcBufferExtent:t.extent,pixelSize:f,hasWrapAround:!0,spacing:[16,16]}),h=z(this._rctx,p),g=new l(u,d);g.wrapMode=33071;let _=new A(this._rctx,g);this._rctx.bindFramebuffer(_),this._rctx.setViewport(0,0,u,d),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(h,1),this._quad.bind();let{width:v=0,height:y=0}=t.texture.descriptor;if(this._program.setUniform2f(`u_srcImageSize`,v,y),this._program.setUniform2fv(`u_transformSpacing`,p.spacing),this._program.setUniform2fv(`u_transformGridSize`,p.size),this._program.setUniform2f(`u_targetImageSize`,u,d),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),h.dispose(),r){let{width:e,height:t}=_,n=new ImageData(e??0,t??0);_.readPixels(0,0,e??0,t??0,6408,m.UNSIGNED_BYTE,n.data);let r=_.detachColorTexture();return _.dispose(),{texture:r,extent:i,imageData:n}}let b=_.detachColorTexture();return _.dispose(),{texture:b,extent:i}}reprojectBitmapData(e,t){let n=M(e.bitmapData)?N(e.bitmapData):e.bitmapData,r=new l(e.bitmapData.width,e.bitmapData.height);r.wrapMode=33071;let i=new d(this._rctx,r,n),a=this.reprojectTexture({texture:i,extent:e.extent},t,!0);a.texture.dispose();let o=document.createElement(`canvas`),s=a.imageData;return o.width=s.width,o.height=s.height,o.getContext(`2d`).putImageData(s,0,0),{bitmapData:o,extent:a.extent}}async loadAndReprojectBitmapData(e,t,n){let[r]=await Promise.all([s(e,{responseType:`image`}).then(e=>e.data),E()]),i=document.createElement(`canvas`);i.width=r.width,i.height=r.height;let a=i.getContext(`2d`);a.drawImage(r,0,0);let o=a.getImageData(0,0,i.width,i.height);if(t.spatialReference.equals(n))return{bitmapData:o,extent:t};let c=this.reprojectBitmapData({bitmapData:o,extent:t},n);return{bitmapData:c.bitmapData,extent:c.extent}}destroy(){this._ownsRctx?(t._instanceRefCount--,t._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),t._instance=null)):(this._quad.dispose(),this._program.dispose())}},G=class{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}},K=class extends F(I){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new P,this._kmlVisualData=new G,this._fetchController=null,this.allVisiblePoints=new n,this.allVisiblePolylines=new n,this.allVisiblePolygons=new n,this.allVisibleMapImages=new o}async hitTest(e,t){let n=this.layer;return[this._pointsView?.hitTest(e),this._polylinesView?.hitTest(e),this._polygonsView?.hitTest(e)].flat().filter(Boolean).map(t=>(t.layer=n,t.sourceLayer=n,{type:`graphic`,graphic:t,layer:n,mapPoint:e}))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new R({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new L(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new R({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new L(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new R({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new L(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on(`change`,e=>{e.added.forEach(e=>this._addMapImage(e)),e.removed.forEach(e=>this._removeMapImage(e))}),i(()=>this.layer.visibleSublayers,e=>{for(let e of this._kmlVisualData.allSublayers.values())e.visibility=0;for(let t of e){let e=this._kmlVisualData.allSublayers.get(t.id);e&&(e.visibility=1)}this._refreshCollections()})]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new W}detach(){this._fetchController=p(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=y(this._polygonsView),this._polylinesView=y(this._polylinesView),this._pointsView=y(this._pointsView),this._imageReprojector=y(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference?.isWGS84||this.view.spatialReference?.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(e.href,e.extent,this.view.spatialReference).then(t=>{let n=new j(t.bitmapData);n.x=t.extent.xmin,n.y=t.extent.ymax,n.resolution=t.extent.width/t.bitmapData.width,n.rotation=e.rotation,this._mapImageContainer.addChild(n),this._bitmapIndex.set(e,n)})}async _getViewDependentUrl(e,t){let{viewFormat:n,viewBoundScale:i,httpQuery:a}=e;if(n!=null){if(t==null)throw Error(`Loading this network link requires a view state.`);let o;if(await h(),i!=null&&i!==1){let e=new c(t.extent);e.expand(i),o=e}else o=t.extent;o=x(o,u.WGS84);let s=x(o,u.WebMercator),l=o.xmin,d=o.xmax,p=o.ymin,m=o.ymax,_=t.size[0]*t.pixelRatio,v=t.size[1]*t.pixelRatio,y=Math.max(s.width,s.height),b={"[bboxWest]":l.toString(),"[bboxEast]":d.toString(),"[bboxSouth]":p.toString(),"[bboxNorth]":m.toString(),"[lookatLon]":o.center.x.toString(),"[lookatLat]":o.center.y.toString(),"[lookatRange]":y.toString(),"[lookatTilt]":`0`,"[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":o.center.x.toString(),"[lookatTerrainLat]":o.center.y.toString(),"[lookatTerrainAlt]":`0`,"[cameraLon]":o.center.x.toString(),"[cameraLat]":o.center.y.toString(),"[cameraAlt]":y.toString(),"[horizFov]":`60`,"[vertFov]":`60`,"[horizPixels]":_.toString(),"[vertPixels]":v.toString(),"[terrainEnabled]":`0`,"[clientVersion]":g,"[kmlVersion]":`2.2`,"[clientName]":`ArcGIS API for JavaScript`,"[language]":`en-US`},C=e=>{for(let t in e){let n;for(n in b)e[t]=e[t].replace(n,b[n])}},w=f(n);C(w);let T={};a!=null&&(T=f(a),C(T));let E=S(e.href);return E.query={...E.query,...w,...T},`${E.path}?${r(w)}`}return e.href}async _fetchService(e){let t=new G;await this._loadVisualData(this.layer.url,t,e),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll();let e=(e,t)=>{e.addMany(t.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e))};e(this.allVisiblePoints,this._kmlVisualData.allPoints),e(this.allVisiblePolylines,this._kmlVisualData.allPolylines),e(this.allVisiblePolygons,this._kmlVisualData.allPolygons),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e))}_isSublayerVisible(e){let t=this._kmlVisualData.allSublayers.get(e);return!!t?.visibility&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(e,t,n){return this._fetchParsedKML(e,n).then(async e=>{for(let r of e.sublayers){t.allSublayers.set(r.id,r);let e=await k(r,`points`,this.layer,r.id),i=await k(r,`polylines`,this.layer,r.id),a=await k(r,`polygons`,this.layer,r.id),o=r.mapImages?.map(e=>U.fromJSON(e))??[];if(t.allPoints.push(...e.map(e=>({item:e,sublayerId:r.id}))),t.allPolylines.push(...i.map(e=>({item:e,sublayerId:r.id}))),t.allPolygons.push(...a.map(e=>({item:e,sublayerId:r.id}))),t.allMapImages.push(...o.map(e=>({item:e,sublayerId:r.id}))),r.networkLink){let e=await this._getViewDependentUrl(r.networkLink,this.view.state);await this._loadVisualData(e,t,n)}}})}_fetchParsedKML(e,t){return D(e,this.layer.spatialReference,this.layer.refreshInterval,t).then(e=>O(e.data))}_removeMapImage(e){let t=this._bitmapIndex.get(e);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(e))}};t([a()],K.prototype,`_pointsView`,void 0),t([a()],K.prototype,`_polylinesView`,void 0),t([a()],K.prototype,`_polygonsView`,void 0),K=t([_(`esri.views.2d.layers.KMLLayerView2D`)],K);var q=K;export{q as default};