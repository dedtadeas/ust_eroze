import{Ws as e,fT as t,tc as n,vE as r,yD as i}from"./index-BqmCqmfp.js";import{c as a}from"./memoryEstimations-O7VgDRVG.js";import{n as o}from"./VertexAttributeLocations-IAhvKZqd.js";var s=()=>r.getLogger(`esri.views.webgl.VertexArrayObject`),c=class r{constructor(e,t,n,r){this._context=e,this._indexBuffer=n,this._buffers=t instanceof Map?t:new Map([[`geometry`,t]]),this._baseInstances=r==null?new Map:typeof r==`number`?new Map([[`geometry`,r]]):r,this.locations=i(o(this._buffers))}get glName(){return this._glName}get context(){return this._context}get buffers(){return i(this._buffers)}buffer(e=`geometry`){return this.buffers.get(e)}get indexBuffer(){return this._indexBuffer}getByteLength(e){return this.buffer(e)?.sizeBytes??0}vertexCount(e){let t=this.buffer(e);return t?t.sizeBytes/t.layout[0].stride:0}get usedMemory(){return Array.from(this._buffers.values()).reduce((e,t)=>e+t.usedMemory,this._indexBuffer?.usedMemory??0+(this._buffers.size+(this._indexBuffer?1:0))*145)}dispose(){this._context?(this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this._indexBuffer=t(this._indexBuffer),this.disposeVAOOnly()):(this._glName||this._buffers.size>0)&&s().warn(`Leaked WebGL VAO`)}disposeVAOOnly(){this._context?(this._context.getBoundVAO()===this&&this._context.bindVAO(null),this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(n.VertexArrayObject,this)),this._context=null):this._glName&&s().warn(`Leaked WebGL VAO`)}bind(e=this.locations){let t=this._context.gl;this._glName?t.bindVertexArray(this._glName):(this._context.instanceCounter.increment(n.VertexArrayObject,this),this._glName=t.createVertexArray(),t.bindVertexArray(this._glName),this._bindLayout(e))}_bindLayout(t){let{_buffers:n,_indexBuffer:r}=this;if(n||s().error(`Vertex buffer dictionary is empty!`),n.forEach((n,r)=>e(this._context,t,n,this._baseInstances.get(r)??0)),r!=null){let e=this._context.gl;this._context.gl.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r.glName)}}unbind(){this._context.gl.bindVertexArray(null)}shallowCloneWithBaseInstances(e){return new r(this._context,this._buffers,this._indexBuffer,e)}};export{c as t};