import{Ax as e,Bu as t,CD as n,Hy as r,MC as i,Pa as a,Sw as o,Sx as s,Ux as c,Vu as l,kC as u,vC as d,zC as f,zu as p,zy as m}from"./index-BqmCqmfp.js";import{R as h,z as g}from"./RasterSymbolizer-CkbjgVe_.js";import{c as _,s as v}from"./RasterJobHandlerMixin-CZVDgRFD.js";async function y(n,r,i){let u=p(n),{rasterFunction:d,sourceJSON:f}=r||{},m=d?JSON.stringify(d.rasterFunctionDefinition||d):null,_=l({...u.query,renderingRule:m,f:`json`}),v=t(_,i);n=u.path;let y=f||await o(n,v).then(e=>e.data),b=y.hasRasterAttributeTable?o(`${n}/rasterAttributeTable`,v):null,x=y.hasColormap?o(`${n}/colormap`,v):null,S=y.hasHistograms?o(`${n}/histograms`,v):null,C=y.currentVersion>=10.3?o(`${n}/keyProperties`,v):null,w=y.hasMultidimensions?o(`${n}/multidimensionalInfo`,v):null,T=await Promise.allSettled([b,x,S,C,w]),E=null;if(y.minValues&&y.minValues.length===y.bandCount){E=[];for(let e=0;e<y.minValues.length;e++)E.push({min:y.minValues[e],max:y.maxValues[e],avg:y.meanValues[e],stddev:y.stdvValues[e]})}let D=s.fromJSON(y.extent),O=Math.ceil(D.width/y.pixelSizeX-.1),k=Math.ceil(D.height/y.pixelSizeY-.1),A=c.fromJSON(y.spatialReference||y.extent.spatialReference),j=T[0].status===`fulfilled`?T[0].value?.data:null,M=j?.features?.length?a.fromJSON(j):null,N=T[1].status===`fulfilled`?T[1].value?.data.colormap:null,P=N?.length?N:null,F=T[2].status===`fulfilled`?T[2].value?.data.histograms:null,I=F?.[0]?.counts?.length?F:null,L=T[3].status===`fulfilled`?T[3].value?.data??{}:{},R=T[4].status===`fulfilled`?T[4].value?.data.multidimensionalInfo:null,z=R?.variables?.length?R:null;z&&z.variables.forEach(e=>{e.statistics?.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),e.dimensions?.forEach(e=>{e.name!==`StdTime`||e.recurring||e.unit||(e.unit=`ISO8601`)})});let{defaultVariable:B,serviceDataType:V}=y;B&&B!==L.DefaultVariable&&(L.DefaultVariable=B),V?.includes(`esriImageServiceDataTypeVector`)&&!V.includes(L.DataType)&&(L.DataType=V.replace(`esriImageServiceDataType`,``));let H=y.noDataValue;y.noDataValues?.length&&y.noDataValues.some(e=>e!==H)&&(H=y.noDataValues);let U=y.transposeInfo?new g({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:`lerc`,origin:new e({x:y.extent.xmin,y:y.extent.ymax,spatialReference:A}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(O,k))/Math.LN2-8)),transposeInfo:y.transposeInfo}):void 0;return new h({width:O,height:k,bandCount:y.bandCount,extent:s.fromJSON(y.extent),spatialReference:A,pixelSize:new e({x:y.pixelSizeX,y:y.pixelSizeY,spatialReference:A}),pixelType:y.pixelType.toLowerCase(),statistics:E,attributeTable:M,colormap:P,histograms:I,keyProperties:L,noDataValue:H,multidimensionalInfo:z,storageInfo:U})}function b(e,t,n){return y(e,{sourceJSON:t},n)}function x(e,t,n){return y(e,{rasterFunction:t},n)}function S(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}var C=class extends m(d){constructor(e){super(e),this.name=void 0,this.method=`none`,this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};n([i({type:String,json:{write:{isRequired:!0}}})],C.prototype,`name`,void 0),n([i({type:[`raster-function-template`,`variable`,`none`],json:{write:{isRequired:!0}}}),r({rasterFunctionTemplate:`raster-function-template`,variable:`variable`,none:`none`})],C.prototype,`method`,void 0),n([i({type:String,json:{write:{isRequired:!0}}})],C.prototype,`value`,void 0),n([i({type:[f],json:{write:{isRequired:!0}}})],C.prototype,`bandIds`,void 0),n([i({types:v,json:{write:!0,origins:{"web-scene":{types:_,write:{overridePolicy:e=>({enabled:e&&e.type!==`vector-field`})}}}}})],C.prototype,`renderer`,void 0),C=n([u(`esri.renderers.support.RasterPresetRenderer`)],C);var w=e=>{let t=e,r=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return n([i({type:String,json:{name:`layerDefinition.activePresetRendererName`,write:{allowNull:!0}}})],r.prototype,`activePresetRendererName`,void 0),n([i({type:[C],json:{name:`layerDefinition.presetRenderers`,write:!0}})],r.prototype,`presetRenderers`,void 0),r=n([u(`esri.layers.mixins.RasterPresetRendererMixin`)],r),r};export{x as i,S as n,b as r,w as t};