import{I as e,M as t,Y as n,in as r,kt as i,wn as a}from"./Point2D-UYEfE6HP.js";var o=class o{static construct(e,t,n,r){return new o(e,t,n,r)}constructor(e,t,n,r){this.m_EnvelopeType=2,e===void 0?(this.xmin=NaN,this.ymin=NaN,this.xmax=NaN,this.ymax=NaN):typeof e==`number`?(this.xmin=e,this.ymin=t,this.xmax=n,this.ymax=r):(this.xmin=e.xmin,this.ymin=e.ymin,this.xmax=e.xmax,this.ymax=e.ymax),this.normalize()}static constructEmpty(){return new o(NaN,NaN,NaN,NaN)}clone(){return new o(this)}assign(e){return this.xmin=e.xmin,this.xmax=e.xmax,this.ymin=e.ymin,this.ymax=e.ymax,this}width(){return this.xmax-this.xmin}height(){return this.ymax-this.ymin}maxDimension(){return Math.max(this.width(),this.height())}minDimension(){return Math.min(this.width(),this.height())}sqrDiagonal(){let e=this.width(),t=this.height();return e*e+t*t}diagonal(){return Math.sqrt(this.sqrDiagonal())}getCenterX(){return .5*(this.xmin+this.xmax)}getCenterY(){return .5*(this.ymin+this.ymax)}getCenter(){return i.construct(this.getCenterX(),this.getCenterY())}queryCenter(e){e.x=.5*(this.xmin+this.xmax),e.y=.5*(this.ymin+this.ymax)}setEmpty(){this.xmin=NaN,this.ymin=NaN,this.xmax=NaN,this.ymax=NaN}setInfinite(){this.xmin=-1/0,this.xmax=1/0,this.ymin=-1/0,this.ymax=1/0}isDegenerate(e){return!this.isEmpty()&&(this.width()<=e||this.height()<=e)}isZero(){return!(this.isEmpty()||this.width()&&this.height())}isEmpty(){return Number.isNaN(this.xmin)||Number.isNaN(this.ymin)||Number.isNaN(this.xmax)||Number.isNaN(this.ymax)}mergeNeCoords(e,t){this.xmin>e?this.xmin=e:this.xmax<e&&(this.xmax=e),this.ymin>t?this.ymin=t:this.ymax<t&&(this.ymax=t)}mergeNe(e){this.mergeNeCoords(e.x,e.y)}mergeCoords(e,t){this.isEmpty()?(this.xmin=e,this.ymin=t,this.xmax=e,this.ymax=t):(this.xmin>e?this.xmin=e:this.xmax<e&&(this.xmax=e),this.ymin>t?this.ymin=t:this.ymax<t&&(this.ymax=t))}merge(e){this.mergeCoords(e.x,e.y)}mergeEnvelope2D(e){e.isEmpty()||(this.mergeCoords(e.xmin,e.ymin),this.mergeNeCoords(e.xmax,e.ymax))}mergePoints(e,t){for(let n=0;n<t;){if(!this.isEmpty()){for(let r=n;r<t;r++)this.mergeNe(e[r]);break}this.setCoords(e[n]),n++}}mergePointsInterleaved(e,t,n){for(let r=2*t,i=r+2*n;r<i;r+=2)this.mergeCoords(e.read(r),e.read(r+1))}inflateCoords(e,t){this.isEmpty()||(this.xmin-=e,this.xmax+=e,this.ymin-=t,this.ymax+=t,(this.xmin>this.xmax||this.ymin>this.ymax)&&this.setEmpty())}getInflatedCoords(e,t){let n=this.clone();return n.inflateCoords(e,t),n}inflate(e){this.inflateCoords(e,e)}getInflated(e){let t=this.clone();return t.inflateCoords(e,e),t}zoom(e,t){this.isEmpty()||this.setCoords({center:this.getCenter(),width:e*this.width(),height:t*this.height()})}scale(e){e<0&&this.setEmpty(),this.xmin*=e,this.xmax*=e,this.ymin*=e,this.ymax*=e}equals(e,t){return!(!this.isEmpty()||!e.isEmpty())||(t?Math.abs(this.xmin-e.xmin)<=t&&Math.abs(this.ymin-e.ymin)<=t&&Math.abs(this.xmax-e.xmax)<=t&&Math.abs(this.ymax-e.ymax)<=t:this.xmin===e.xmin&&this.ymin===e.ymin&&this.xmax===e.xmax&&this.ymax===e.ymax)}setCoords(e){e.xmin===void 0?e.x===void 0?e.pt1===void 0?e.env2D===void 0?e.pt===void 0?e.center===void 0?a(`unrecognized input type for setCoords`):(this.xmin=e.center.x-.5*e.width,this.xmax=this.xmin+e.width,this.ymin=e.center.y-.5*e.height,this.ymax=this.ymin+e.height,this.normalize()):(this.xmin=e.pt.x,this.xmax=e.pt.x,this.ymin=e.pt.y,this.ymax=e.pt.y):(this.xmin=e.env2D.xmin,this.xmax=e.env2D.xmax,this.ymin=e.env2D.ymin,this.ymax=e.env2D.ymax,this.normalize()):(this.xmin=e.pt1.x,this.ymin=e.pt1.y,this.xmax=e.pt2.x,this.ymax=e.pt2.y,this.normalize()):(this.xmin=e.x,this.xmax=e.x,this.ymin=e.y,this.ymax=e.y):(this.xmin=e.xmin,this.xmax=e.xmax,this.ymin=e.ymin,this.ymax=e.ymax),this.normalize()}queryIntervalX(e){this.isEmpty()?e.setEmpty():e.setCoords(this.xmin,this.xmax)}queryIntervalY(e){this.isEmpty()?e.setEmpty():e.setCoords(this.ymin,this.ymax)}setFromPoints(e,t){if(t===0)return void this.setEmpty();if(Array.isArray(e)){let n=e;this.setCoords(n[0]);for(let e=1;e<t;){if(!this.isEmpty()){for(let r=e;r<t;r++)this.mergeNe(n[r]);return}this.setCoords(n[e]),e++}return}let n=e;this.setCoords({x:n[0],y:n[1]});for(let e=1,r=2*t;e<r;e+=2){if(!this.isEmpty()){for(let r=e,i=2*t;r<i;r+=2)this.mergeNeCoords(n[r],n[r+1]);return}this.setCoords({x:n[e],y:n[e+1]}),e+=2}}normalize(){let e=!1;this.xmin<=this.xmax||([this.xmin,this.xmax]=[this.xmax,this.xmin],e=!0),this.ymin<=this.ymax||([this.ymin,this.ymax]=[this.ymax,this.ymin],e=!0),!e||this.xmin<=this.xmax&&this.ymin<=this.ymax||this.setEmpty()}isValid(){return this.isEmpty()||this.xmin<=this.xmax&&this.ymin<=this.ymax}getLowerLeft(){return new i(this.xmin,this.ymin)}getLowerRight(){return new i(this.xmax,this.ymin)}getUpperLeft(){return new i(this.xmin,this.ymax)}getUpperRight(){return new i(this.xmax,this.ymax)}move(e,t){this.isEmpty()||(this.xmin+=e,this.ymin+=t,this.xmax+=e,this.ymax+=t)}centerAtCoords(e,t){this.move(e-this.getCenterX(),t-this.getCenterY())}centerAt(e){this.centerAtCoords(e.x,e.y)}containsCoords(e,t){return e>=this.xmin&&e<=this.xmax&&t>=this.ymin&&t<=this.ymax}contains(e){return this.containsCoords(e.x,e.y)}containsEnvelope(e){return e.xmin>=this.xmin&&e.xmax<=this.xmax&&e.ymin>=this.ymin&&e.ymax<=this.ymax}containsExclusiveCoords(e,t){return e>this.xmin&&e<this.xmax&&t>this.ymin&&t<this.ymax}containsExclusive(e){return this.containsExclusiveCoords(e.x,e.y)}containsExclusiveEnvelope(e){return e.xmin>this.xmin&&e.xmax<this.xmax&&e.ymin>this.ymin&&e.ymax<this.ymax}isIntersecting(e){return(this.xmin<=e.xmin?this.xmax>=e.xmin:e.xmax>=this.xmin)&&(this.ymin<=e.ymin?this.ymax>=e.ymin:e.ymax>=this.ymin)}isIntersectingNe(e){return(this.xmin<=e.xmin?this.xmax>=e.xmin:e.xmax>=this.xmin)&&(this.ymin<=e.ymin?this.ymax>=e.ymin:e.ymax>=this.ymin)}intersect(e){if(this.isEmpty())return!1;if(e.isEmpty())return this.setEmpty(),!1;e.xmin>this.xmin&&(this.xmin=e.xmin),e.xmax<this.xmax&&(this.xmax=e.xmax),e.ymin>this.ymin&&(this.ymin=e.ymin),e.ymax<this.ymax&&(this.ymax=e.ymax);let t=this.xmin<=this.xmax&&this.ymin<=this.ymax;return t||this.setEmpty(),t}queryCorner(e){switch(3&e){case 0:return new i(this.xmin,this.ymin);case 1:return new i(this.xmin,this.ymax);case 2:return new i(this.xmax,this.ymax);default:return new i(this.xmax,this.ymin)}}queryCorners(e){e[0].setCoords(this.xmin,this.ymin),e[1].setCoords(this.xmin,this.ymax),e[2].setCoords(this.xmax,this.ymax),e[3].setCoords(this.xmax,this.ymin)}queryCornersReversed(e){e[0].setCoords(this.xmin,this.ymin),e[1].setCoords(this.xmax,this.ymin),e[2].setCoords(this.xmax,this.ymax),e[3].setCoords(this.xmin,this.ymax)}reaspect(e,t){if(this.isEmpty())return;let n=e/t,r=.5*this.width(),i=.5*this.height()*n;if(r<=i){let e=this.getCenterX();this.xmin=e-i,this.xmax=e+i}else{let e=r/n,t=this.getCenterY();this.ymin=t-e,this.ymax=t+e}this.normalize()}getArea(){return this.isEmpty()?0:this.width()*this.height()}getLength(){return this.isEmpty()?0:2*(this.width()+this.height())}clipCode(e){return(e.x<this.xmin?1:0)|(e.x>this.xmax?1:0)<<1|(e.y<this.ymin?1:0)<<2|(e.y>this.ymax?1:0)<<3}clipLine(e,t){let n=this.clipCode(e),r=this.clipCode(t);if(n&r)return 0;if(!(n|r))return 4;let i=(n?1:0)|(r?2:0);do{let i=t.x-e.x,a=t.y-e.y;if(Math.abs(i)>Math.abs(a)?n&o.XMASK?(n&o.XLESSXMIN?(e.y+=a*(this.xmin-e.x)/i,e.x=this.xmin):(e.y+=a*(this.xmax-e.x)/i,e.x=this.xmax),n=this.clipCode(e)):r&o.XMASK?(r&o.XLESSXMIN?(t.y+=a*(this.xmin-t.x)/i,t.x=this.xmin):(t.y+=a*(this.xmax-t.x)/i,t.x=this.xmax),r=this.clipCode(t)):n?(n&o.YLESSYMIN?(e.x+=i*(this.ymin-e.y)/a,e.y=this.ymin):(e.x+=i*(this.ymax-e.y)/a,e.y=this.ymax),n=this.clipCode(e)):(r&o.YLESSYMIN?(t.x+=i*(this.ymin-t.y)/a,t.y=this.ymin):(t.x+=i*(this.ymax-t.y)/a,t.y=this.ymax),r=this.clipCode(t)):n&o.YMASK?(n&o.YLESSYMIN?(e.x+=i*(this.ymin-e.y)/a,e.y=this.ymin):(e.x+=i*(this.ymax-e.y)/a,e.y=this.ymax),n=this.clipCode(e)):r&o.YMASK?(r&o.YLESSYMIN?(t.x+=i*(this.ymin-t.y)/a,t.y=this.ymin):(t.x+=i*(this.ymax-t.y)/a,t.y=this.ymax),r=this.clipCode(t)):n?(n&o.XLESSXMIN?(e.y+=a*(this.xmin-e.x)/i,e.x=this.xmin):(e.y+=a*(this.xmax-e.x)/i,e.x=this.xmax),n=this.clipCode(e)):(r&o.XLESSXMIN?(t.y+=a*(this.xmin-t.x)/i,t.x=this.xmin):(t.y+=a*(this.xmax-t.x)/i,t.x=this.xmax),r=this.clipCode(t)),n&r)return 0}while(n|r);return i}distanceFromEnvelope(e){return Math.sqrt(this.sqrDistanceEnvelope(e,null,null))}distance(e){return Math.sqrt(this.sqrDistance(e))}sqrDistanceEnvelope(e,t,n){if(!t&&!n){if(this.isEmpty()||e.isEmpty())return NaN;let t,n=0,r=0;return t=this.xmin-e.xmax,t>n&&(n=t),t=this.ymin-e.ymax,t>r&&(r=t),t=e.xmin-this.xmax,t>n&&(n=t),t=e.ymin-this.ymax,t>r&&(r=t),n*n+r*r}if(this.isEmpty()||e.isEmpty())return t&&t.setNAN(),n&&n.setNAN(),NaN;let r,i=0,a=0,o=Math.max(this.xmin,e.xmin),s=Math.max(this.ymin,e.ymin);return t&&t.setCoords(o,s),n&&n.setCoords(o,s),r=this.xmin-e.xmax,r>i&&(i=r,t&&(t.x=this.xmin),n&&(n.x=e.xmax)),r=this.ymin-e.ymax,r>a&&(a=r,t&&(t.y=this.ymin),n&&(n.y=e.ymax)),r=e.xmin-this.xmax,r>i&&(i=r,t&&(t.x=this.xmax),n&&(n.x=e.xmin)),r=e.ymin-this.ymax,r>a&&(a=r,t&&(t.y=this.ymax),n&&(n.y=e.ymin)),i*i+a*a}sqrDistance(e,t){if(t===void 0){if(this.isEmpty()||e.isNAN())return NaN;let t,n=0,r=0;return t=this.xmin-e.x,t>n&&(n=t),t=this.ymin-e.y,t>r&&(r=t),t=e.x-this.xmax,t>n&&(n=t),t=e.y-this.ymax,t>r&&(r=t),n*n+r*r}if(this.isEmpty()||e.isNAN())return t.setNAN(),NaN;t.assign(e);let n,r=0,i=0;return n=this.xmin-e.x,n>r&&(r=n,t.x=this.xmin),n=this.ymin-e.y,n>i&&(i=n,t.y=this.ymin),n=e.x-this.xmax,n>r&&(r=n,t.x=this.xmax),n=e.y-this.ymax,n>i&&(i=n,t.y=this.ymax),r*r+i*i}sqrMaxMinDistanceEnvelope(e){if(this.isEmpty()||e.isEmpty())return NaN;let t=Number.MAX_VALUE;{let n=i.sqrDistanceCoords(this.xmin,this.ymin,e.xmax,e.ymin),r=i.sqrDistanceCoords(this.xmin,this.ymin,e.xmax,e.ymax),a=i.sqrDistanceCoords(this.xmin,this.ymax,e.xmax,e.ymin),o=i.sqrDistanceCoords(this.xmin,this.ymax,e.xmax,e.ymax),s=Math.max(n,r),c=Math.max(a,o),l=Math.max(s,c);t=Math.min(l,t)}{let n=i.sqrDistanceCoords(this.xmin,this.ymin,e.xmin,e.ymax),r=i.sqrDistanceCoords(this.xmin,this.ymin,e.xmax,e.ymax),a=i.sqrDistanceCoords(this.xmax,this.ymin,e.xmin,e.ymax),o=i.sqrDistanceCoords(this.xmax,this.ymin,e.xmax,e.ymax),s=Math.max(n,r),c=Math.max(a,o),l=Math.max(s,c);t=Math.min(l,t)}{let n=i.sqrDistanceCoords(this.xmax,this.ymin,e.xmin,e.ymin),r=i.sqrDistanceCoords(this.xmax,this.ymin,e.xmin,e.ymax),a=i.sqrDistanceCoords(this.xmax,this.ymax,e.xmin,e.ymin),o=i.sqrDistanceCoords(this.xmax,this.ymax,e.xmin,e.ymax),s=Math.max(n,r),c=Math.max(a,o),l=Math.max(s,c);t=Math.min(l,t)}{let n=i.sqrDistanceCoords(this.xmin,this.ymax,e.xmin,e.ymin),r=i.sqrDistanceCoords(this.xmin,this.ymax,e.xmax,e.ymin),a=i.sqrDistanceCoords(this.xmax,this.ymax,e.xmin,e.ymin),o=i.sqrDistanceCoords(this.xmax,this.ymax,e.xmax,e.ymin),s=Math.max(n,r),c=Math.max(a,o),l=Math.max(s,c);t=Math.min(l,t)}return t}sqrMaxDistanceEnvelope(t){if(this.isEmpty()||t.isEmpty())return NaN;let n=0,r=e(i,4);this.queryCorners(r);let a=e(i,4);t.queryCorners(a);for(let e=0;e<4;e++)for(let t=0;t<4;t++){let o=i.sqrDistance(r[e],a[t]);o>n&&(n=o)}return n}sqrMaxMinDistance(e){let t=i.sqrDistance(e,this.getLowerLeft()),n=i.sqrDistance(e,this.getUpperLeft()),r=i.sqrDistance(e,this.getLowerRight()),a=i.sqrDistance(e,this.getUpperRight()),o,s=Math.max(t,n);return o=Math.max(t,r),s>o&&(s=o),o=Math.max(n,a),s>o&&(s=o),o=Math.max(r,a),s>o&&(s=o),s}sqrMinDistance(e){return this.contains(e)?0:this.sqrDistance(e)}sqrMaxDistance(e){let t=i.sqrDistance(e,this.getLowerLeft());return t=Math.max(i.sqrDistance(e,this.getUpperLeft()),t),t=Math.max(i.sqrDistance(e,this.getUpperRight()),t),t=Math.max(i.sqrDistance(e,this.getLowerRight()),t),t}snapToBoundary(e){if(e.isNAN())return!1;if(this.isEmpty())return e.setNAN(),!0;let t=!0;if(e.x<this.xmin?e.x=this.xmin:e.x>this.xmax?e.x=this.xmax:t=!1,e.y<this.ymin?e.y=this.ymin:e.y>this.ymax?e.y=this.ymax:t=!1,t)return!0;if(e.x===this.xmin||e.x===this.xmax||e.y===this.ymin||e.y===this.ymax)return!1;let n=this.xmax-e.x,r=e.x-this.xmin,i=this.ymax-e.y,a=e.y-this.ymin;return Math.max(n,r)>Math.max(i,a)?e.y=a<i?this.ymin:this.ymax:e.x=r<n?this.xmin:this.xmax,!0}snapClip(e){let t=n(e.x,this.xmin,this.xmax),r=n(e.y,this.ymin,this.ymax);return i.construct(t,r)}boundaryDistance(e){if(this.isEmpty()||e.isNAN())return NaN;if(e.x===this.xmin)return e.y-this.ymin;let t=this.ymax-this.ymin,n=this.xmax-this.xmin;if(e.y===this.ymax)return t+e.x-this.xmin;if(e.x===this.xmax)return t+n+this.ymax-e.y;if(e.y===this.ymin)return 2*t+n+this.xmax-e.x;let r=new i;return r.setCoordsPoint2D(e),this.snapToBoundary(r),this.boundaryDistance(r)}envelopeSide(e){if(this.isEmpty())return-1;let t=this.boundaryDistance(e),n=this.ymax-this.ymin,r=this.xmax-this.xmin;return t<n?0:(t-=n)<r?1:t-r<n?2:3}querySide(e,t){switch(e){case 0:t.constructFromCoords(this.xmin,this.ymin,this.xmin,this.ymax);break;case 1:t.constructFromCoords(this.xmin,this.ymax,this.xmax,this.ymax);break;case 2:t.constructFromCoords(this.xmax,this.ymax,this.xmax,this.ymin);break;case 3:t.constructFromCoords(this.xmax,this.ymin,this.xmin,this.ymin);break;default:r(`query_side`)}return t}isPointOnBoundary(e,t){return Math.abs(e.x-this.xmin)<=t||Math.abs(e.x-this.xmax)<=t||Math.abs(e.y-this.ymin)<=t||Math.abs(e.y-this.ymax)<=t}calculateToleranceFromEnvelope(){return this.isEmpty()?t():(Math.abs(this.xmin)+Math.abs(this.xmax)+Math.abs(this.ymin)+Math.abs(this.ymax)+1)*t()}toString(){return`[${this.xmin}, ${this.ymin}, ${this.xmax}, ${this.ymax}]`}};o.XLESSXMIN=1,o.YLESSYMIN=4,o.XMASK=3,o.YMASK=12;export{o as t};