import{Am as e,CD as t,Kb as n,MC as r,OC as i,Wb as a,_T as o,kC as s,mT as c}from"./index-BqmCqmfp.js";import"./geodeticCurveType-hqCRc72W.js";import"./geodeticLengthOperator-Bd7syy7j.js";import"./quatf64-CJzmL3cc.js";import"./earcut-Drx511Ix.js";import"./vectorStacks-CKtslZxP.js";import"./plane-CTjDePZl.js";import"./projectPointToVector-Clou1sfo.js";import"./spatialReferenceEllipsoidUtils-DBtdxVkA.js";import"./dehydratedPoint-Dwb3orme.js";import"./projectVectorToVector-D-Bbb8fP.js";import"./sphere-CicnK0Bn.js";import"./elevationInfoUtils-Df_uYU_q.js";import{t as l}from"./GraphicsLayer-BGvt7_Y1.js";import"./networkEnums-BShtiFSl.js";import{i as u,n as d,r as f,t as p}from"./Stop-DfLyF0Gk.js";import"./geodesicUtils-DJORTTMv.js";import{t as m}from"./SketchViewModel-BCYoa7_w.js";import"./isSupportedObject-CNmfINgj.js";import"./layerUtils-DVQFdwBE.js";import"./SketchOptions-CfisVcr8.js";import"./LineSnappingHint-BAcwqgNT.js";import"./ParallelSnappingHint-Knbe-U69.js";import"./snappingUtils-CbrwOS61.js";import"./constraints-DXu8cqG3.js";import"./SnappingCandidate-BzUm7cf4.js";import"./EdgeSnappingCandidate-C1pApw0q.js";import"./DrapedEdgeSnappingCandidate-Ck4Ob_c8.js";import"./IntersectionSnappingHint-C3U4Rx6H.js";import"./IntersectionSnappingCandidate-Cv9i7Mdt.js";import"./LineSnappingCandidate-Cp24TJlP.js";import"./RightAngleTriangleSnappingCandidate-B-XFn7NT.js";import"./RightAngleSnappingHint--LJCiSno.js";import"./viewUtils-CPzQ7QWB.js";import"./viewUtils-CtJQ47Dj.js";import"./quantityUtils-Dywg00j-.js";import"./euclideanLengthMeasurementUtils-Bhl6nD1D.js";import"./lineSegment-uFalXigL.js";import"./triangle-1kWe4-AP.js";import"./hitTestSelectUtils-CyV_4TZP.js";function h(e,t){e.networkFeature=t}function g(e){let t=v(e.graphic);return{...e,networkFeature:t}}function _(e){let t=e.graphics.map(e=>v(e));return{...e,networkFeatures:t}}function v(e){return e.networkFeature}function y(e){return e?.type===`point`||e?.type===`polyline`||e?.type===`polygon`}var b=class extends i{constructor(t){super(t),this._createMode=null,this._graphicsLayer=new l({internal:!0,listMode:`hide`,title:`RouteLayerInteraction layer`}),this._updatingHandles=new e,this.enabled=!0,this._handleSketchViewModelEvents=async e=>{switch(e.type){case`update`:switch(e.state){case`active`:case`complete`:for(let t of e.graphics)v(t).geometry=y(t.geometry)?t.geometry.clone():null}break;case`undo`:case`redo`:break;case`delete`:for(let t of e.graphics){let e=v(t);this._removeNetworkFeature(e)}break;case`create`:if(e.graphic&&e.state===`complete`&&this._createMode){let t=e.graphic.geometry?.clone(),n=e.graphic.symbol?.clone();if(!t)break;switch(this._createMode){case`stop`:{if(t.type!==`point`)break;let{stops:n}=this.layer;if(n.length>0&&n.every(({geometry:e})=>!e)){n.at(0).geometry=t;break}if(n.length>1&&n.filter((e,t)=>t!==0).every(({geometry:e})=>!e)){n.at(1).geometry=t;break}let r=new p({geometry:t});n.add(r),h(e.graphic,r);break}case`point-barrier`:{if(t.type!==`point`)break;let r=new u({geometry:t,symbol:n});this.layer.pointBarriers.add(r),h(e.graphic,r);break}case`polyline-barrier`:{if(t.type!==`polyline`)break;let r=new d({geometry:t,symbol:n});this.layer.polylineBarriers.add(r),h(e.graphic,r);break}case`polygon-barrier`:{if(t.type!==`polygon`)break;let r=new f({geometry:t,symbol:n});this.layer.polygonBarriers.add(r),h(e.graphic,r);break}}}}(await this.view.whenLayerView(this.layer)).emit(e.type,e.type===`create`?g(e):_(e))}}initialize(){this._sketchViewModel=new m({layer:this._graphicsLayer,view:this.view}),this.addHandles([n(()=>this.enabled,e=>{e?this._activate():this._deactivate()},a),n(()=>{let{stops:e,pointBarriers:t,polylineBarriers:n,polygonBarriers:r}=this.layer;return{stops:e,pointBarriers:t,polylineBarriers:n,polygonBarriers:r}},()=>{this.enabled&&this._loadClonedGraphics()}),this._sketchViewModel.on([`create`,`delete`,`redo`,`undo`,`update`],this._handleSketchViewModelEvents),o(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=c(this._graphicsLayer),this._sketchViewModel=c(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map(e=>v(e))}get updating(){return this._updatingHandles.updating}create(e){switch(this._createMode=e,e){case`stop`:this.layer.defaultSymbols.stops?.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case`point-barrier`:this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case`polyline-barrier`:this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case`polygon-barrier`:this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(e){case`stop`:case`point-barrier`:return this._sketchViewModel.create(`point`);case`polyline-barrier`:return this._sketchViewModel.create(`polyline`);case`polygon-barrier`:return this._sketchViewModel.create(`polygon`)}}remove(e){let t=this._graphicsLayer.graphics.find(t=>v(t)===e);t&&this._graphicsLayer.remove(t),this._removeNetworkFeature(e)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){this._sketchViewModel.cancel(),this.view.map?.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){let e=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap(e=>e.toArray().map(e=>{let t=e.toGraphic();return t.networkFeature=e,t}));this._graphicsLayer.removeAll().addMany(e)}_removeNetworkFeature(e){switch(e.type){case`stop`:this.layer.stops.remove(e);break;case`point-barrier`:this.layer.pointBarriers.remove(e);break;case`polyline-barrier`:this.layer.polylineBarriers.remove(e);break;case`polygon-barrier`:this.layer.polygonBarriers.remove(e)}}};t([r()],b.prototype,`enabled`,void 0),t([r({constructOnly:!0})],b.prototype,`layer`,void 0),t([r({readOnly:!0})],b.prototype,`selectedNetworkFeatures`,null),t([r()],b.prototype,`updating`,null),t([r({constructOnly:!0})],b.prototype,`view`,void 0),b=t([s(`esri.views.2d.layers.support.RouteLayerInteraction`)],b);export{b as RouteLayerInteraction};