import{CD as e,El as t,Fd as n,IS as r,MC as i,Sl as a,Zw as o,fu as s,kC as c,qw as l,vE as u,vT as d,wl as f,xl as p}from"./index-BqmCqmfp.js";import"./memoryEstimations-O7VgDRVG.js";import"./OptimizedFeature-Dx4_lHip.js";import"./OptimizedGeometry-f3I9Z6C1.js";import"./OptimizedFeatureSet-DlHqIhoP.js";import"./featureConversionUtils-7vyVIZ6j.js";import"./streamLayerUtils-BMw-RtDi.js";import"./QueueProcessor-C8_CgXms.js";import"./earcut-Drx511Ix.js";import"./glsl-C2sn87h0.js";import"./layerViewUtils-Bbe7IKvz.js";import"./popupUtils-h58HBZOO.js";import"./pbf-CwGh07vG.js";import"./colorUtils-uG2qTogT.js";import"./timeSupport-DheFkvFH.js";import"./queryUtils-BA7HiGeg.js";import"./quantizationUtils-C5shine1.js";import"./sublayerUtils-CdLiCppr.js";import"./floorFilterUtils-CQ-SmVM_.js";import"./normalizeUtilsSync-Btn24Gtg.js";import"./constants-gtdOjz1K.js";import"./GeometryUtils-DBkUrkz1.js";import"./VertexAttributeLocations-IAhvKZqd.js";import"./VertexElementDescriptor-BGWnA0Rs.js";import"./labelPoint-B7zLrA23.js";import"./callExpressionWithCursor-kl7GHpJ1.js";import"./FeatureMetadata-H6WAS0Lx.js";import"./fontUtils-CWolFklQ.js";import"./CIMSymbolHelper-bdBsF42t.js";import"./rasterizingUtils-B0Pd5uE0.js";import"./Rect-BMNJQxpm.js";import"./BoundingBox-DnR5UeUT.js";import"./BidiEngine-CpIovbIK.js";import"./callExpressionWithFeature-BK7JnF3H.js";import"./OverrideHelper-BKNowJt8.js";import"./densifyCurvedGeometry-C2XDhl14.js";import"./config-BSvujflG.js";import"./TurboLine-CViGHhaf.js";import"./dehydratedFeatureComparison-Ch8xWl-8.js";import{n as m}from"./drapedUtils-p7eKCYi3.js";import"./WGLContainer-Caxzva6E.js";import"./utils-DBLYSlue.js";import"./ProgramTemplate-ks-pn-xm.js";import"./VertexArrayObject-Dzn28byJ.js";import"./BufferObject-lp8QWmVQ.js";import"./VertexBuffer-DL5rIQzc.js";import"./vec3f32-CZ7wi78s.js";import"./Container-DgT8F3N0.js";import"./EffectView-CvH-XuUh.js";import"./GraphShaderModule-D5xwSwIQ.js";import"./FramebufferObject-CkeUwNOD.js";import"./ShaderBuilder-C3C7fUwK.js";import"./bitmapUtils-EQTC4Su-.js";import"./Bitmap-Bh-_NMdJ.js";import{t as h}from"./LayerView2D-DVE2Teoj.js";import{t as g}from"./LayerView-DKEUJRIQ.js";import{t as _}from"./RefreshableLayerView-CNJlNdyl.js";import"./UpdateTracking2D-yw0xaCSk.js";import"./TechniqueInstance-BhM4b8eb.js";import"./TileContainer-BwjyXNO3.js";import"./FeatureCommandQueue-COnDeivB.js";import"./constants-BOI_CTg-.js";import"./utils-CY7cI7hp.js";import"./CircularArray-Bnt6GPkP.js";import{t as v}from"./highlightOptionsUtils-DiIoW0j2.js";import"./AGraphicContainer-ShIe2ypS.js";import"./ComputedAttributeStorage-D_u4lyEq.js";import{t as y}from"./GraphicsView2D-Dg0AUWQu.js";import"./dehydratedFeatures-DW1qFa9i.js";import{t as b}from"./HighlightGraphicContainer-CU3v7_T8.js";import"./renderState-Be6uDhGv.js";import"./DisjointTimerQuery-DmiPM9r5.js";import{n as x,r as S,t as C}from"./MapServiceLayerViewHelper-Bw9Ns8lB.js";import"./GridShader-DMXvzdaC.js";import"./PieChartMeshWriter-CI24zfQF.js";import"./SymbolFader-sQMZEde1.js";import{n as w,r as T,t as E}from"./imageUtils-Jkh7sLFa.js";var D=[0,0],O=class extends _(T(h(g))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new n,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!(`resampling`in this.layer)||!1!==this.layer.resampling}get tilemapCache(){return`tilemapCache`in this.layer?this.layer.tilemapCache:null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this._highlightView?.processUpdate(e)}attach(){let e=`tileServers`in this.layer?this.layer.tileServers:null,t=this.tilemapCache;if(this._tileInfoView=new f(this.layer.tileInfo,this.layer.fullExtent,t?.effectiveMinLOD,t?.effectiveMaxLOD),this._fetchQueue=new a({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(e,t)=>this.fetchTile(e,t),scheduler:this.scheduler,priority:s.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new p({cachePolicy:`keep`,resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),x(this,this.layer)){let e=this._highlightView=new y({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new C({createFetchPopupFeaturesQueryGeometry:(e,t)=>m(e,t,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:t,property:n})=>e.graphicUpdateHandler({graphic:t,property:n}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(e,t):[]}highlight(e,t){let n=S(e);if(n.length===0)return d();let r=v(t);return this._addHighlightGraphics(n,r),d(()=>!this.destroyed&&this._removeHighlightGraphics(n,r))}_processHighlight(){let e=this._getHighlights();this._highlightView?.setHighlight(e)}_addHighlightGraphics(e,t){this._highlightGraphics.addMany(e),this._addHighlights(e.map(e=>e.uid),t)}_removeHighlightGraphics(e,t){this._highlightGraphics.removeMany(e),this._removeHighlights(e.map(e=>e.uid),t)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){return r(this.layer.tileInfo?.spatialReference,e)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e)))}}acquireTile(e){let t=this._bitmapView.createTile(e),n=t.bitmap;return[n.x,n.y]=this._tileInfoView.getTileCoords(D,t.key),n.resolution=this._tileInfoView.getTileResolution(t.key),[n.width,n.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once(`detach`,()=>e.destroy()),this.requestUpdate()}async fetchTile(e,t={}){return this.tilemapCache?this._fetchTileWithTilemapCache(e,t):this._fetchTileWithoutTilemapCache(e,t)}async _fetchTileWithoutTilemapCache(e,n={}){let{signal:r,resamplingLevel:i=0}=n;try{return await this._fetchImage(e,r)}catch(r){if(o(r))throw r;if(!this.resampling)return w(this._tileInfoView.tileInfo.size);if(i<3){let r=this._tileInfoView.getTileParentId(e.id);if(r){let a=new t(r),o=await this._fetchTileWithoutTilemapCache(a,{...n,resamplingLevel:i+1});return E(this._tileInfoView,o,a,e)}}return w(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(e,n={}){let r=this.tilemapCache,{signal:i,resamplingLevel:a=0}=n,s=new t(0,0,0,0),c,u=null;try{if(u=await r.fetchAvailabilityUpsample(e.level,e.row,e.col,s,{signal:i}),!this.resampling&&s.level!==e.level)return await l(n),w(this._tileInfoView.tileInfo.size);c=await this._fetchImage(s,i)}catch(t){if(o(t))throw t;if(this.resampling&&u===`unknown`&&a<3){let t=this._tileInfoView.getTileParentId(e.id);if(t){s.set(t);try{c=await this._fetchTileWithTilemapCache(s,{...n,resamplingLevel:a+1})}catch{}}}}return c?this.resampling?E(this._tileInfoView,c,s,e):c:w(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{let t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once(`attach`,()=>this.requestUpdate())}catch(e){o(e)||u.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}};e([i()],O.prototype,`resampling`,null),e([i()],O.prototype,`tilemapCache`,null),O=e([c(`esri.views.2d.layers.TileLayerView2D`)],O);var k=O;export{k as default};