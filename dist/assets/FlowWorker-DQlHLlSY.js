import{CD as e,kC as t}from"./index-BqmCqmfp.js";import{n,r}from"./dataUtils-lUZ4DUuE.js";import{n as i,t as a}from"./loadUtils-DPhTZgBE.js";var o=class{constructor(){this._tileData=new Map}async generateStreamlines(e){let{flowData:t,flowExtentInfo:n,needsMagnitude:i,simulationSettings:a,startPositions:o}=e,s=c(r(a,t),a,n.modelSize,i,o);return{result:{streamlines:s},transferList:s?.map(e=>e.vertices.buffer)}}async generateTiledStreamlines(e){let{flowDataTiles:t,flowExtentInfo:n,needsMagnitude:r,reset:a,simulationSettings:o,startPositions:s}=e;this._updateTileData(t,a);let l=c(i(o,this._tileData,n),o,n.modelSize,r,s);return{result:{streamlines:l},transferList:l?.map(e=>e.vertices.buffer)??[]}}_updateTileData(e,t){t&&this._tileData.forEach((t,n)=>{e.get(n)??this._tileData.delete(n)}),e.forEach((e,t)=>{e.type===`delete`?this._tileData.delete(t):e.type!==`on-worker`&&e.type!==`waiting`&&this._tileData.set(t,e.data)})}};o=e([t(`esri.views.3d.support.flow.FlowWorker`)],o);var s=o;function c(e,t,r,i,o){if(e==null)return;let s=n(t,e,r[0],r[1],{positions:o}),c=[],l=a(i);for(let{vertices:e,stage:t}of s){let n=new Float32Array(e.length*l);for(let t=0;t<e.length;t++)n[t*l]=e[t].x,n[t*l+1]=e[t].y,n[t*l+2]=e[t].t,i&&(n[t*l+3]=e[t].speed);c.push({vertices:n,stage:t,hasMagnitude:i})}return c}export{s as default};