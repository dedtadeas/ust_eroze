import{AE as e,Lt as t,On as n,Un as r,Wy as i,in as a,nn as o,on as s,tn as c,wn as l,zt as u}from"./index-BqmCqmfp.js";import{p as d}from"./colorUtils-uG2qTogT.js";import{t as f}from"./callExpressionWithFeature-BK7JnF3H.js";var p=e=>{if(!e)return[0,0,0,0];let{r:t,g:n,b:r,a:i}=e;return[t,n,r,255*i]},m=class m{static findApplicableOverrides(e,t,n){if(e&&t){if(e.primitiveName){let r=!1;for(let t of n)if(t.primitiveName===e.primitiveName){r=!0;break}if(!r)for(let r of t)r.primitiveName===e.primitiveName&&n.push(r)}switch(e.type){case`CIMPointSymbol`:case`CIMLineSymbol`:case`CIMPolygonSymbol`:if(e.effects)for(let r of e.effects)m.findApplicableOverrides(r,t,n);if(e.symbolLayers)for(let r of e.symbolLayers)m.findApplicableOverrides(r,t,n);break;case`CIMTextSymbol`:break;case`CIMSolidStroke`:case`CIMPictureStroke`:case`CIMGradientStroke`:case`CIMSolidFill`:case`CIMPictureFill`:case`CIMHatchFill`:case`CIMGradientFill`:case`CIMVectorMarker`:case`CIMCharacterMarker`:case`CIMPictureMarker`:if(e.effects)for(let r of e.effects)m.findApplicableOverrides(r,t,n);if(e.markerPlacement&&m.findApplicableOverrides(e.markerPlacement,t,n),e.type===`CIMVectorMarker`){if(e.markerGraphics)for(let r of e.markerGraphics)m.findApplicableOverrides(r,t,n),m.findApplicableOverrides(r.symbol,t,n)}else e.type===`CIMCharacterMarker`?m.findApplicableOverrides(e.symbol,t,n):e.type===`CIMHatchFill`?m.findApplicableOverrides(e.lineSymbol,t,n):e.type===`CIMPictureMarker`&&m.findApplicableOverrides(e.animatedSymbolProperties,t,n)}}}static findEffectOverrides(e,n){if(!e)return null;if(e.type===`CIMGeometricEffectDashes`&&t(e),!n||!e.primitiveName)return{type:`cim-effect-param`,effect:e,overrides:[]};let r=o(e),i=e.primitiveName,a=[];for(let e of n)e.primitiveName===i&&a.push(o(e));return{type:`cim-effect-param`,effect:r,overrides:c(a)}}static async resolveSymbolOverrides(t,n,i,a,o,s,c){if(!t?.symbol)return null;let{symbol:u,primitiveOverrides:d}=t,f=!!d;if(!f&&!a)return u;u=e(u),d=e(d);let p=!0;if(n||(n={attributes:{}},p=!1),f){if(p||(d=d.filter(e=>!e.valueExpressionInfo?.expression.includes(`$feature`))),c||(d=d.filter(e=>!e.valueExpressionInfo?.expression.includes(`$view`))),d.length>0){let e=l(n.attributes),t={spatialReference:i,fields:e,geometryType:o};await m.createRenderExpressions(d,t),m.evaluateOverrides(d,n,o??`esriGeometryPoint`,s,c,new r(e))}m.applyOverrides(u,d)}return a&&m.applyDictionaryTextOverrides(u,n,a,null),u}static{this._expressionToRenderExpression=new Map}static async createRenderExpressions(e,t){let r=[];for(let i of e){let e=i.valueExpressionInfo;if(!e||m._expressionToRenderExpression.has(e.expression))continue;let a=n(e.expression,t.spatialReference);r.push(a),a.then(t=>m._expressionToRenderExpression.set(e.expression,t))}r.length>0&&await Promise.all(r)}static evaluateOverrides(e,t,n,r,i,a){let o={$view:{scale:i?.scale}};for(let i of e){i.value&&typeof i.value==`object`&&d(i.value)&&(i.propertyName===`Color`||i.propertyName===`StrokeColor`)&&(i.value=p(i.value));let e=i.valueExpressionInfo;if(!e)continue;let s=m._expressionToRenderExpression.get(e.expression);s&&(i.value=f(s,t,o,n,a,r))}}static applyDictionaryTextOverrides(e,t,n,r,i=`Normal`){if(e?.type)switch(e.type){case`CIMPointSymbol`:case`CIMLineSymbol`:case`CIMPolygonSymbol`:case`CIMTextSymbol`:{let a=e.symbolLayers;if(!a)return;for(let o of a)o&&o.type===`CIMVectorMarker`&&m.applyDictionaryTextOverrides(o,t,n,r,e.type===`CIMTextSymbol`?e.textCase:i)}break;case`CIMVectorMarker`:{let i=e.markerGraphics;if(!i)return;for(let e of i)e&&m.applyDictionaryTextOverrides(e,t,n,r)}break;case`CIMMarkerGraphic`:{let o=e.textString;if(o&&o.includes(`[`)){let c=a(o,n);e.textString=s(t,c,r,i)}}}}static applyOverrides(e,t,n,r){if(e.primitiveName){for(let i of t)if(i.primitiveName===e.primitiveName){let t=u(i.propertyName);if(r&&r.push({cim:e,nocapPropertyName:t,value:e[t]}),n){let t=!1;for(let r of n)r.primitiveName===e.primitiveName&&(t=!0);t||n.push(i)}i.value!=null&&(e[t]=i.value)}}switch(e.type){case`CIMPointSymbol`:case`CIMLineSymbol`:case`CIMPolygonSymbol`:if(e.effects)for(let i of e.effects)m.applyOverrides(i,t,n,r);if(e.symbolLayers)for(let i of e.symbolLayers)m.applyOverrides(i,t,n,r);break;case`CIMTextSymbol`:break;case`CIMSolidStroke`:case`CIMSolidFill`:case`CIMVectorMarker`:if(e.effects)for(let i of e.effects)m.applyOverrides(i,t,n,r);if(e.type===`CIMVectorMarker`&&e.markerGraphics)for(let i of e.markerGraphics)m.applyOverrides(i,t,n,r),m.applyOverrides(i.symbol,t,n,r)}}static restoreOverrides(e){for(let t of e)t.cim[t.nocapPropertyName]=t.value}static buildOverrideKey(e){let t=``;for(let n of e)n.value!==void 0&&(t+=`${n.primitiveName}${n.propertyName}${JSON.stringify(n.value)}`);return t}static toValue(e,t){if(e===`DashTemplate`)return t.split(` `).map(e=>Number(e));if(e===`Color`){let e=new i(t).toRgba();return e[3]*=255,e}return t}};export{m as t};