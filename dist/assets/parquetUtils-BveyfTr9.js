import{Ad as e,CD as t,MC as n,Ux as r,_E as i,aC as a,kC as o,vC as s}from"./index-BqmCqmfp.js";import{t as c}from"./locationUtils-DmjCjKC3.js";import{n as l,r as u,t as d}from"./parquet-79J3NX0y.js";var f=class extends s{constructor(e){super(e),this.type=`location`,this.latitudeFieldName=null,this.longitudeFieldName=null}};t([n({type:[`location`],readOnly:!0,json:{write:!0}})],f.prototype,`type`,void 0),t([n({json:{write:!0}})],f.prototype,`latitudeFieldName`,void 0),t([n({json:{write:!0}})],f.prototype,`longitudeFieldName`,void 0),f=t([o(`esri.layers.support.ParquetEncodingLocation`)],f);var p=class extends s{constructor(e){super(e),this.type=`wkb`,this.primaryFieldName=null}};t([n({type:[`wkb`],readOnly:!0,json:{write:!0}})],p.prototype,`type`,void 0),t([n({json:{write:!0}})],p.prototype,`orientation`,void 0),t([n({json:{write:!0}})],p.prototype,`primaryFieldName`,void 0),p=t([o(`esri.layers.support.ParquetEncodingWkb`)],p);var m=new a({esriGeometryPoint:`point`,esriGeometryPolygon:`polygon`,esriGeometryPolyline:`polyline`,esriGeometryMultipoint:`multipoint`});function h(e){return m.toJSON(e)}function g(e){return m.fromJSON(e)}async function _(t,n={}){if(t.geometryType&&t.spatialReference&&t.encoding&&t.fields)return t;if(t.urls.length<1)throw new i(`parquet:bad-input`,`At least one url must be specified`,t);let a=await d(t.urls.getItemAt(0),{getCustomParameters:()=>n.customParameters}),o=u(a),s={...t,file:a};s.fields??=a.fields().map(t=>e.fromJSON({name:t.name,type:t.type})),s.encoding??=v(o,s.fields);let c=l(a);if(c)switch(c.mode){case`z`:s.displayOptimization={mode:`z`};break;case`xz`:{let e=c.multiscale;if(!e)throw new i(`bad-format`,`XZ display optimization requires multiscale geometries`);s.displayOptimization={mode:`xz`,multiscale:e};break}}if(!s.encoding)return s;switch(s.encoding.type){case`location`:s.spatialReference??=r.WGS84,s.geometryType??=`point`;break;case`wkb`:{if(!o)return s;let e=o.primary_column,t=o.columns[e];if(s.geometryType||=b(t),s.spatialReference||=x(t),s.fields)for(let e of Object.keys(o.columns))s.fields=s.fields.filter(t=>t.name!==e)}}return s}function v(e,t){if(e!=null){let t=e.primary_column,n=e.columns[t];return new p({primaryFieldName:t,orientation:n.orientation??null})}let n=c(t.map(e=>e.name));return n.latitudeFieldName&&n.longitudeFieldName?new f({latitudeFieldName:n.latitudeFieldName,longitudeFieldName:n.longitudeFieldName}):null}function y(e){switch(e){case`Point`:return`point`;case`Polygon`:case`MultiPolygon`:return`polygon`;case`LineString`:return`polyline`;case`MultiPoint`:return`multipoint`;default:return null}}function b(e){let{geometry_types:t}=e,n=new Set;for(let e of t){let t=y(e);t&&n.add(t)}if(n.size>1)throw new i(`unsupported`,`Parquet mixed geometry types are not support`,{geometryTypes:n});return n.size===1?n.values().next().value:void 0}function x(e){let t=e.crs?.id?.code;return t&&typeof t==`number`?new r({wkid:t}):void 0}export{f as a,p as i,h as n,_ as r,g as t};